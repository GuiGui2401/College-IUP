{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Table,Alert,Spinner,Badge,Button,Form}from'react-bootstrap';import{Printer,FileEarmarkText,BarChart,Building,Search,Funnel}from'react-bootstrap-icons';import{secureApiEndpoints}from'../../utils/apiMigration';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SeriesCollectionSummary=()=>{var _grandTotals$by_tranc4;const[seriesData,setSeriesData]=useState([]);const[grandTotals,setGrandTotals]=useState({});const[schoolYear,setSchoolYear]=useState(null);const[paymentTranches,setPaymentTranches]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');// États pour les filtres\nconst[filters,setFilters]=useState({class_id:'',level_id:''});const[filtersData,setFiltersData]=useState({classes:[],levels:[]});useEffect(()=>{loadSeriesCollectionSummary();},[]);const loadSeriesCollectionSummary=async function(){let customFilters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{setLoading(true);setError('');const queryFilters=customFilters||filters;// Supprimer les filtres vides\nconst cleanFilters=Object.fromEntries(Object.entries(queryFilters).filter(_ref=>{let[_,value]=_ref;return value!=='';}));const response=await secureApiEndpoints.reports.getSeriesCollectionSummary(cleanFilters);if(response.success){setSeriesData(response.data.series_summary);setGrandTotals(response.data.grand_totals);setSchoolYear(response.data.school_year);setPaymentTranches(response.data.payment_tranches);setFiltersData(response.data.filters_data);}else{setError(response.message);}}catch(error){setError('Erreur lors du chargement des données');console.error('Error loading series collection summary:',error);}finally{setLoading(false);}};const handleFilterChange=(field,value)=>{setFilters(prev=>({...prev,[field]:value}));};const handleSearch=()=>{loadSeriesCollectionSummary();};const handleResetFilters=()=>{const resetFilters={class_id:'',level_id:''};setFilters(resetFilters);loadSeriesCollectionSummary(resetFilters);};const formatAmount=amount=>{return parseInt(amount||0).toLocaleString()+' FCFA';};const handlePrint=()=>{const printWindow=window.open('','_blank');const html=generatePrintHTML();printWindow.document.write(`\n            <html>\n                <head>\n                    <title>Récapitulatif d'Encaissement par Série</title>\n                    <style>\n                        body { \n                            font-family: Arial, sans-serif; \n                            margin: 20px; \n                            font-size: 12px;\n                        }\n                        table { \n                            width: 100%; \n                            border-collapse: collapse; \n                            margin: 20px 0; \n                        }\n                        th, td { \n                            border: 1px solid #ddd; \n                            padding: 8px; \n                            text-align: left; \n                        }\n                        th { \n                            background-color: #f5f5f5; \n                            font-weight: bold; \n                        }\n                        .text-center { text-align: center; }\n                        .text-right { text-align: right; }\n                        .text-end { text-align: right; }\n                        .header { \n                            text-align: center; \n                            margin-bottom: 30px; \n                            border-bottom: 2px solid #333; \n                            padding-bottom: 20px; \n                        }\n                        .totals-row { \n                            background-color: #f8f9fa; \n                            font-weight: bold; \n                        }\n                        @media print { \n                            body { margin: 0; }\n                            .no-print { display: none; }\n                        }\n                    </style>\n                </head>\n                <body>\n                    ${html}\n                    <div class=\"no-print\" style=\"text-align: center; margin-top: 30px;\">\n                        <button onclick=\"window.print()\" style=\"padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;\">Imprimer</button>\n                        <button onclick=\"window.close()\" style=\"padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: 10px;\">Fermer</button>\n                    </div>\n                </body>\n            </html>\n        `);printWindow.document.close();};const generatePrintHTML=()=>{var _grandTotals$by_tranc2;return`\n            <div class=\"header\">\n                <h1>COLLÈGE POLYVALENT BILINGUE DE DOUALA</h1>\n                <h2>Récapitulatif d'Encaissement par Série</h2>\n                <p><strong>Année scolaire:</strong> ${(schoolYear===null||schoolYear===void 0?void 0:schoolYear.name)||'N/A'}</p>\n                <p><strong>Généré le:</strong> ${new Date().toLocaleDateString('fr-FR')} à ${new Date().toLocaleTimeString('fr-FR')}</p>\n            </div>\n            \n            <div class=\"summary-stats\">\n                <h3>Résumé Général</h3>\n                <table>\n                    <tr>\n                        <td><strong>Nombre total de séries:</strong></td>\n                        <td class=\"text-end\">${grandTotals.total_series||0}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Nombre total d'étudiants:</strong></td>\n                        <td class=\"text-end\">${grandTotals.total_students||0}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Montant total collecté:</strong></td>\n                        <td class=\"text-end\"><strong>${formatAmount(grandTotals.total_collected||0)}</strong></td>\n                    </tr>\n                </table>\n            </div>\n\n            <div class=\"detailed-table\">\n                <h3>Détail par Série</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Série</th>\n                            <th class=\"text-center\">Effectif</th>\n                            ${paymentTranches.map(tranche=>`<th class=\"text-center\">${tranche}</th>`).join('')}\n                            <th class=\"text-center\">RAME Physique</th>\n                            <th class=\"text-center\">Total Collecté</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${seriesData.map(series=>{var _series$tranches$RAME;return`\n                            <tr>\n                                <td><strong>${series.full_name}</strong></td>\n                                <td class=\"text-center\">${series.student_count}</td>\n                                ${paymentTranches.map(tranche=>{var _series$tranches$tran;return`\n                                    <td class=\"text-end\">${formatAmount(((_series$tranches$tran=series.tranches[tranche])===null||_series$tranches$tran===void 0?void 0:_series$tranches$tran.amount_collected)||0)}</td>\n                                `;}).join('')}\n                                <td class=\"text-end\">${formatAmount(((_series$tranches$RAME=series.tranches['RAME Physique'])===null||_series$tranches$RAME===void 0?void 0:_series$tranches$RAME.amount_collected)||0)}</td>\n                                <td class=\"text-end\"><strong>${formatAmount(series.total_collected)}</strong></td>\n                            </tr>\n                        `;}).join('')}\n                        <tr class=\"totals-row\">\n                            <td><strong>TOTAL GÉNÉRAL</strong></td>\n                            <td class=\"text-center\"><strong>${grandTotals.total_students||0}</strong></td>\n                            ${paymentTranches.map(tranche=>{var _grandTotals$by_tranc;return`\n                                <td class=\"text-end\"><strong>${formatAmount(((_grandTotals$by_tranc=grandTotals.by_tranche)===null||_grandTotals$by_tranc===void 0?void 0:_grandTotals$by_tranc[tranche])||0)}</strong></td>\n                            `;}).join('')}\n                            <td class=\"text-end\"><strong>${formatAmount(((_grandTotals$by_tranc2=grandTotals.by_tranche)===null||_grandTotals$by_tranc2===void 0?void 0:_grandTotals$by_tranc2['RAME Physique'])||0)}</strong></td>\n                            <td class=\"text-end\"><strong>${formatAmount(grandTotals.total_collected||0)}</strong></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        `;};if(loading){return/*#__PURE__*/_jsx(Container,{fluid:true,className:\"py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Chargement...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Chargement des donn\\xE9es...\"})]})});}return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(Building,{className:\"me-2\"}),\"R\\xE9capitulatif d'Encaissement par S\\xE9rie\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted\",children:[\"Montants collect\\xE9s par s\\xE9rie et par tranche - \",schoolYear===null||schoolYear===void 0?void 0:schoolYear.name]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:handlePrint,className:\"me-2\",children:[/*#__PURE__*/_jsx(Printer,{className:\"me-1\",size:16}),\"Imprimer\"]}),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",onClick:loadSeriesCollectionSummary,children:\"Actualiser\"})]})]})})}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(Funnel,{className:\"me-2\"}),\"Filtres de Recherche\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Niveau\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.level_id,onChange:e=>handleFilterChange('level_id',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Tous les niveaux\"}),filtersData.levels.map(level=>/*#__PURE__*/_jsx(\"option\",{value:level.id,children:level.name},level.id))]})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Classe\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.class_id,onChange:e=>handleFilterChange('class_id',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Toutes les classes\"}),filtersData.classes.map(schoolClass=>/*#__PURE__*/_jsxs(\"option\",{value:schoolClass.id,children:[schoolClass.name,\" (\",schoolClass.level_name,\")\"]},schoolClass.id))]})]})}),/*#__PURE__*/_jsx(Col,{md:2,className:\"d-flex align-items-end\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2 mb-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleSearch,disabled:loading,title:\"Rechercher\",children:loading?/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\"}):/*#__PURE__*/_jsx(Search,{size:16})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",onClick:handleResetFilters,title:\"R\\xE9initialiser\",children:\"Tout\"})]})})]})})]}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",dismissible:true,onClose:()=>setError(''),children:error}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-primary\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-primary\",children:grandTotals.total_series||0}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"S\\xE9ries\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-info\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-info\",children:grandTotals.total_students||0}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"\\xC9tudiants\"})]})})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-success\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-success\",children:formatAmount(grandTotals.total_collected||0)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Collect\\xE9\"})]})})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(BarChart,{className:\"me-2\"}),\"D\\xE9tail par S\\xE9rie et Tranche\"]}),/*#__PURE__*/_jsxs(Badge,{bg:\"info\",children:[seriesData.length,\" s\\xE9rie(s)\"]})]}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{hover:true,className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-light\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"S\\xE9rie\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Effectif\"}),paymentTranches.map(tranche=>/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:tranche},tranche)),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"RAME Physique\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Total Collect\\xE9\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[seriesData.map(series=>{var _series$tranches$RAME2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:series.full_name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[series.class_name,\" - \",series.series_name]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",children:series.student_count})}),paymentTranches.map(tranche=>{var _series$tranches$tran2;return/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:formatAmount(((_series$tranches$tran2=series.tranches[tranche])===null||_series$tranches$tran2===void 0?void 0:_series$tranches$tran2.amount_collected)||0)},tranche);}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:formatAmount(((_series$tranches$RAME2=series.tranches['RAME Physique'])===null||_series$tranches$RAME2===void 0?void 0:_series$tranches$RAME2.amount_collected)||0)}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-success\",children:formatAmount(series.total_collected)})})]},series.series_id);}),/*#__PURE__*/_jsxs(\"tr\",{className:\"table-warning fw-bold\",children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"TOTAL G\\xC9N\\xC9RAL\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Badge,{bg:\"dark\",children:grandTotals.total_students||0})}),paymentTranches.map(tranche=>{var _grandTotals$by_tranc3;return/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatAmount(((_grandTotals$by_tranc3=grandTotals.by_tranche)===null||_grandTotals$by_tranc3===void 0?void 0:_grandTotals$by_tranc3[tranche])||0)})},tranche);}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatAmount(((_grandTotals$by_tranc4=grandTotals.by_tranche)===null||_grandTotals$by_tranc4===void 0?void 0:_grandTotals$by_tranc4['RAME Physique'])||0)})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-success fs-5\",children:formatAmount(grandTotals.total_collected||0)})})]})]})]})})})]}),Object.keys(grandTotals.by_tranche||{}).length>0&&/*#__PURE__*/_jsxs(Card,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FileEarmarkText,{className:\"me-2\"}),\"Totaux par Tranche\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Row,{children:Object.entries(grandTotals.by_tranche||{}).map(_ref2=>{let[tranche,amount]=_ref2;return/*#__PURE__*/_jsx(Col,{md:4,lg:3,className:\"mb-3\",children:/*#__PURE__*/_jsx(Card,{className:\"text-center h-100\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-primary\",children:formatAmount(amount)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:tranche})]})})},tranche);})})})]})]});};export default SeriesCollectionSummary;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Table","Alert","Spinner","Badge","Button","Form","Printer","FileEarmarkText","BarChart","Building","Search","Funnel","secureApiEndpoints","jsx","_jsx","jsxs","_jsxs","SeriesCollectionSummary","_grandTotals$by_tranc4","seriesData","setSeriesData","grandTotals","setGrandTotals","schoolYear","setSchoolYear","paymentTranches","setPaymentTranches","loading","setLoading","error","setError","filters","setFilters","class_id","level_id","filtersData","setFiltersData","classes","levels","loadSeriesCollectionSummary","customFilters","arguments","length","undefined","queryFilters","cleanFilters","Object","fromEntries","entries","filter","_ref","_","value","response","reports","getSeriesCollectionSummary","success","data","series_summary","grand_totals","school_year","payment_tranches","filters_data","message","console","handleFilterChange","field","prev","handleSearch","handleResetFilters","resetFilters","formatAmount","amount","parseInt","toLocaleString","handlePrint","printWindow","window","open","html","generatePrintHTML","document","write","close","_grandTotals$by_tranc2","name","Date","toLocaleDateString","toLocaleTimeString","total_series","total_students","total_collected","map","tranche","join","series","_series$tranches$RAME","full_name","student_count","_series$tranches$tran","tranches","amount_collected","_grandTotals$by_tranc","by_tranche","fluid","className","children","animation","role","variant","onClick","size","Header","Body","md","Group","Label","Select","onChange","e","target","level","id","schoolClass","level_name","disabled","title","dismissible","onClose","bg","hover","_series$tranches$RAME2","class_name","series_name","_series$tranches$tran2","series_id","_grandTotals$by_tranc3","keys","_ref2","lg"],"sources":["/var/www/College-IUP/front/src/pages/Reports/SeriesCollectionSummary.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    Table,\n    Alert,\n    Spinner,\n    Badge,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport {\n    Printer,\n    FileEarmarkText,\n    BarChart,\n    Building,\n    Search,\n    Funnel\n} from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\n\nconst SeriesCollectionSummary = () => {\n    const [seriesData, setSeriesData] = useState([]);\n    const [grandTotals, setGrandTotals] = useState({});\n    const [schoolYear, setSchoolYear] = useState(null);\n    const [paymentTranches, setPaymentTranches] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    \n    // États pour les filtres\n    const [filters, setFilters] = useState({\n        class_id: '',\n        level_id: ''\n    });\n    const [filtersData, setFiltersData] = useState({\n        classes: [],\n        levels: []\n    });\n\n    useEffect(() => {\n        loadSeriesCollectionSummary();\n    }, []);\n\n    const loadSeriesCollectionSummary = async (customFilters = null) => {\n        try {\n            setLoading(true);\n            setError('');\n            \n            const queryFilters = customFilters || filters;\n            // Supprimer les filtres vides\n            const cleanFilters = Object.fromEntries(\n                Object.entries(queryFilters).filter(([_, value]) => value !== '')\n            );\n            \n            const response = await secureApiEndpoints.reports.getSeriesCollectionSummary(cleanFilters);\n            \n            if (response.success) {\n                setSeriesData(response.data.series_summary);\n                setGrandTotals(response.data.grand_totals);\n                setSchoolYear(response.data.school_year);\n                setPaymentTranches(response.data.payment_tranches);\n                setFiltersData(response.data.filters_data);\n            } else {\n                setError(response.message);\n            }\n        } catch (error) {\n            setError('Erreur lors du chargement des données');\n            console.error('Error loading series collection summary:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleFilterChange = (field, value) => {\n        setFilters(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    const handleSearch = () => {\n        loadSeriesCollectionSummary();\n    };\n\n    const handleResetFilters = () => {\n        const resetFilters = {\n            class_id: '',\n            level_id: ''\n        };\n        setFilters(resetFilters);\n        loadSeriesCollectionSummary(resetFilters);\n    };\n\n    const formatAmount = (amount) => {\n        return parseInt(amount || 0).toLocaleString() + ' FCFA';\n    };\n\n    const handlePrint = () => {\n        const printWindow = window.open('', '_blank');\n        const html = generatePrintHTML();\n        \n        printWindow.document.write(`\n            <html>\n                <head>\n                    <title>Récapitulatif d'Encaissement par Série</title>\n                    <style>\n                        body { \n                            font-family: Arial, sans-serif; \n                            margin: 20px; \n                            font-size: 12px;\n                        }\n                        table { \n                            width: 100%; \n                            border-collapse: collapse; \n                            margin: 20px 0; \n                        }\n                        th, td { \n                            border: 1px solid #ddd; \n                            padding: 8px; \n                            text-align: left; \n                        }\n                        th { \n                            background-color: #f5f5f5; \n                            font-weight: bold; \n                        }\n                        .text-center { text-align: center; }\n                        .text-right { text-align: right; }\n                        .text-end { text-align: right; }\n                        .header { \n                            text-align: center; \n                            margin-bottom: 30px; \n                            border-bottom: 2px solid #333; \n                            padding-bottom: 20px; \n                        }\n                        .totals-row { \n                            background-color: #f8f9fa; \n                            font-weight: bold; \n                        }\n                        @media print { \n                            body { margin: 0; }\n                            .no-print { display: none; }\n                        }\n                    </style>\n                </head>\n                <body>\n                    ${html}\n                    <div class=\"no-print\" style=\"text-align: center; margin-top: 30px;\">\n                        <button onclick=\"window.print()\" style=\"padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;\">Imprimer</button>\n                        <button onclick=\"window.close()\" style=\"padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: 10px;\">Fermer</button>\n                    </div>\n                </body>\n            </html>\n        `);\n        printWindow.document.close();\n    };\n\n    const generatePrintHTML = () => {\n        return `\n            <div class=\"header\">\n                <h1>COLLÈGE POLYVALENT BILINGUE DE DOUALA</h1>\n                <h2>Récapitulatif d'Encaissement par Série</h2>\n                <p><strong>Année scolaire:</strong> ${schoolYear?.name || 'N/A'}</p>\n                <p><strong>Généré le:</strong> ${new Date().toLocaleDateString('fr-FR')} à ${new Date().toLocaleTimeString('fr-FR')}</p>\n            </div>\n            \n            <div class=\"summary-stats\">\n                <h3>Résumé Général</h3>\n                <table>\n                    <tr>\n                        <td><strong>Nombre total de séries:</strong></td>\n                        <td class=\"text-end\">${grandTotals.total_series || 0}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Nombre total d'étudiants:</strong></td>\n                        <td class=\"text-end\">${grandTotals.total_students || 0}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Montant total collecté:</strong></td>\n                        <td class=\"text-end\"><strong>${formatAmount(grandTotals.total_collected || 0)}</strong></td>\n                    </tr>\n                </table>\n            </div>\n\n            <div class=\"detailed-table\">\n                <h3>Détail par Série</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Série</th>\n                            <th class=\"text-center\">Effectif</th>\n                            ${paymentTranches.map(tranche => `<th class=\"text-center\">${tranche}</th>`).join('')}\n                            <th class=\"text-center\">RAME Physique</th>\n                            <th class=\"text-center\">Total Collecté</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${seriesData.map(series => `\n                            <tr>\n                                <td><strong>${series.full_name}</strong></td>\n                                <td class=\"text-center\">${series.student_count}</td>\n                                ${paymentTranches.map(tranche => `\n                                    <td class=\"text-end\">${formatAmount(series.tranches[tranche]?.amount_collected || 0)}</td>\n                                `).join('')}\n                                <td class=\"text-end\">${formatAmount(series.tranches['RAME Physique']?.amount_collected || 0)}</td>\n                                <td class=\"text-end\"><strong>${formatAmount(series.total_collected)}</strong></td>\n                            </tr>\n                        `).join('')}\n                        <tr class=\"totals-row\">\n                            <td><strong>TOTAL GÉNÉRAL</strong></td>\n                            <td class=\"text-center\"><strong>${grandTotals.total_students || 0}</strong></td>\n                            ${paymentTranches.map(tranche => `\n                                <td class=\"text-end\"><strong>${formatAmount(grandTotals.by_tranche?.[tranche] || 0)}</strong></td>\n                            `).join('')}\n                            <td class=\"text-end\"><strong>${formatAmount(grandTotals.by_tranche?.['RAME Physique'] || 0)}</strong></td>\n                            <td class=\"text-end\"><strong>${formatAmount(grandTotals.total_collected || 0)}</strong></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        `;\n    };\n\n    if (loading) {\n        return (\n            <Container fluid className=\"py-4\">\n                <div className=\"text-center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"visually-hidden\">Chargement...</span>\n                    </Spinner>\n                    <p className=\"mt-2\">Chargement des données...</p>\n                </div>\n            </Container>\n        );\n    }\n\n    return (\n        <Container fluid className=\"py-4\">\n            {/* Header */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h2><Building className=\"me-2\" />Récapitulatif d'Encaissement par Série</h2>\n                            <p className=\"text-muted\">\n                                Montants collectés par série et par tranche - {schoolYear?.name}\n                            </p>\n                        </div>\n                        <div>\n                            <Button variant=\"success\" onClick={handlePrint} className=\"me-2\">\n                                <Printer className=\"me-1\" size={16} />\n                                Imprimer\n                            </Button>\n                            <Button variant=\"outline-secondary\" onClick={loadSeriesCollectionSummary}>\n                                Actualiser\n                            </Button>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            {/* Filters */}\n            <Card className=\"mb-4\">\n                <Card.Header>\n                    <h5 className=\"mb-0\">\n                        <Funnel className=\"me-2\" />\n                        Filtres de Recherche\n                    </h5>\n                </Card.Header>\n                <Card.Body>\n                    <Row>\n                        <Col md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Niveau</Form.Label>\n                                <Form.Select\n                                    value={filters.level_id}\n                                    onChange={(e) => handleFilterChange('level_id', e.target.value)}\n                                >\n                                    <option value=\"\">Tous les niveaux</option>\n                                    {filtersData.levels.map(level => (\n                                        <option key={level.id} value={level.id}>{level.name}</option>\n                                    ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Classe</Form.Label>\n                                <Form.Select\n                                    value={filters.class_id}\n                                    onChange={(e) => handleFilterChange('class_id', e.target.value)}\n                                >\n                                    <option value=\"\">Toutes les classes</option>\n                                    {filtersData.classes.map(schoolClass => (\n                                        <option key={schoolClass.id} value={schoolClass.id}>\n                                            {schoolClass.name} ({schoolClass.level_name})\n                                        </option>\n                                    ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={2} className=\"d-flex align-items-end\">\n                            <div className=\"d-flex gap-2 mb-3\">\n                                <Button \n                                    variant=\"primary\" \n                                    onClick={handleSearch} \n                                    disabled={loading}\n                                    title=\"Rechercher\"\n                                >\n                                    {loading ? (\n                                        <Spinner animation=\"border\" size=\"sm\" />\n                                    ) : (\n                                        <Search size={16} />\n                                    )}\n                                </Button>\n                                <Button \n                                    variant=\"outline-secondary\" \n                                    onClick={handleResetFilters}\n                                    title=\"Réinitialiser\"\n                                >\n                                    Tout\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            {/* Error Alert */}\n            {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                    {error}\n                </Alert>\n            )}\n\n            {/* Statistics Summary */}\n            <Row className=\"mb-4\">\n                <Col md={3}>\n                    <Card className=\"text-center border-primary\">\n                        <Card.Body>\n                            <h3 className=\"text-primary\">{grandTotals.total_series || 0}</h3>\n                            <p className=\"text-muted mb-0\">Séries</p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3}>\n                    <Card className=\"text-center border-info\">\n                        <Card.Body>\n                            <h3 className=\"text-info\">{grandTotals.total_students || 0}</h3>\n                            <p className=\"text-muted mb-0\">Étudiants</p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card className=\"text-center border-success\">\n                        <Card.Body>\n                            <h3 className=\"text-success\">{formatAmount(grandTotals.total_collected || 0)}</h3>\n                            <p className=\"text-muted mb-0\">Total Collecté</p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* Detailed Table */}\n            <Card>\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                    <h5 className=\"mb-0\">\n                        <BarChart className=\"me-2\" />\n                        Détail par Série et Tranche\n                    </h5>\n                    <Badge bg=\"info\">{seriesData.length} série(s)</Badge>\n                </Card.Header>\n                <Card.Body className=\"p-0\">\n                    <div className=\"table-responsive\">\n                        <Table hover className=\"mb-0\">\n                            <thead className=\"table-light\">\n                                <tr>\n                                    <th>Série</th>\n                                    <th className=\"text-center\">Effectif</th>\n                                    {paymentTranches.map(tranche => (\n                                        <th key={tranche} className=\"text-center\">{tranche}</th>\n                                    ))}\n                                    <th className=\"text-center\">RAME Physique</th>\n                                    <th className=\"text-center\">Total Collecté</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {seriesData.map(series => (\n                                    <tr key={series.series_id}>\n                                        <td>\n                                            <strong>{series.full_name}</strong>\n                                            <br />\n                                            <small className=\"text-muted\">{series.class_name} - {series.series_name}</small>\n                                        </td>\n                                        <td className=\"text-center\">\n                                            <Badge bg=\"secondary\">{series.student_count}</Badge>\n                                        </td>\n                                        {paymentTranches.map(tranche => (\n                                            <td key={tranche} className=\"text-end\">\n                                                {formatAmount(series.tranches[tranche]?.amount_collected || 0)}\n                                            </td>\n                                        ))}\n                                        <td className=\"text-end\">\n                                            {formatAmount(series.tranches['RAME Physique']?.amount_collected || 0)}\n                                        </td>\n                                        <td className=\"text-end\">\n                                            <strong className=\"text-success\">\n                                                {formatAmount(series.total_collected)}\n                                            </strong>\n                                        </td>\n                                    </tr>\n                                ))}\n                                {/* Total Row */}\n                                <tr className=\"table-warning fw-bold\">\n                                    <td><strong>TOTAL GÉNÉRAL</strong></td>\n                                    <td className=\"text-center\">\n                                        <Badge bg=\"dark\">{grandTotals.total_students || 0}</Badge>\n                                    </td>\n                                    {paymentTranches.map(tranche => (\n                                        <td key={tranche} className=\"text-end\">\n                                            <strong>{formatAmount(grandTotals.by_tranche?.[tranche] || 0)}</strong>\n                                        </td>\n                                    ))}\n                                    <td className=\"text-end\">\n                                        <strong>{formatAmount(grandTotals.by_tranche?.['RAME Physique'] || 0)}</strong>\n                                    </td>\n                                    <td className=\"text-end\">\n                                        <strong className=\"text-success fs-5\">\n                                            {formatAmount(grandTotals.total_collected || 0)}\n                                        </strong>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            {/* Totals by Tranche */}\n            {Object.keys(grandTotals.by_tranche || {}).length > 0 && (\n                <Card className=\"mt-4\">\n                    <Card.Header>\n                        <h5 className=\"mb-0\">\n                            <FileEarmarkText className=\"me-2\" />\n                            Totaux par Tranche\n                        </h5>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row>\n                            {Object.entries(grandTotals.by_tranche || {}).map(([tranche, amount]) => (\n                                <Col md={4} lg={3} key={tranche} className=\"mb-3\">\n                                    <Card className=\"text-center h-100\">\n                                        <Card.Body>\n                                            <h5 className=\"text-primary\">{formatAmount(amount)}</h5>\n                                            <p className=\"text-muted mb-0\">{tranche}</p>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )}\n        </Container>\n    );\n};\n\nexport default SeriesCollectionSummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}