{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import{Container,Row,Col,Card,Button,Table,Modal,Form,Alert,Spinner,Badge,ButtonGroup,Dropdown}from'react-bootstrap';import{PersonPlus,People,PersonFill,PersonX,Key,Trash,PencilSquare,EyeFill,PersonCheck,CreditCard2Back,QrCode,PrinterFill,FileEarmarkPdf,Upload}from'react-bootstrap-icons';import{secureApiEndpoints}from'../utils/apiMigration';import{host}from'../utils/fetch';import Swal from'sweetalert2';import PhotoCapture from'../components/PhotoCapture';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserManagement=()=>{const[users,setUsers]=useState([]);const[filteredUsers,setFilteredUsers]=useState([]);const[stats,setStats]=useState({});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[showModal,setShowModal]=useState(false);const[modalMode,setModalMode]=useState('create');// create, edit, view\nconst[selectedUser,setSelectedUser]=useState(null);const[showPhotoCapture,setShowPhotoCapture]=useState(false);const[showQRModal,setShowQRModal]=useState(false);const[selectedUserQR,setSelectedUserQR]=useState(null);// États pour la sélection multiple\nconst[selectedUsers,setSelectedUsers]=useState([]);const[isGeneratingMultipleBadges,setIsGeneratingMultipleBadges]=useState(false);// États pour la recherche et les filtres\nconst[searchTerm,setSearchTerm]=useState('');const[roleFilter,setRoleFilter]=useState('all');const[statusFilter,setStatusFilter]=useState('all');const[formData,setFormData]=useState({name:'',email:'',contact:'',photo:'',role:'accountant',qualification:'',is_active:true,generate_password:true});const roleLabels=useMemo(()=>({admin:'Administrateur',surveillant_general:'Surveillant Général',general_accountant:'Comptable Général',comptable_superieur:'Comptable Supérieur',comptable:'Comptable',secretaire:'Secrétaire',enseignant:'Enseignant',teacher:'Enseignant',accountant:'Comptable',principal:'Principal',user:'Utilisateur',bibliothecaire:'Bibliothécaire',responsable_pedagogique:'Responsable Pédagogique',dean_of_studies:'Dean of Studies',censeur_esg:'Censeur ESG',censeur:'Censeur',surveillant_secteur:'Surveillant de Secteur',caissiere:'Caissière',chef_travaux:'Chef des Travaux',chef_securite:'Chef de Sécurité',reprographe:'Reprographe'}),[]);const roleColors=useMemo(()=>({admin:'danger',surveillant_general:'primary',general_accountant:'warning',comptable_superieur:'dark',comptable:'success',secretaire:'info',enseignant:'warning',teacher:'warning',accountant:'success',principal:'danger',user:'info',bibliothecaire:'secondary',responsable_pedagogique:'primary',dean_of_studies:'secondary',censeur_esg:'info',censeur:'info',surveillant_secteur:'primary',caissiere:'warning',chef_travaux:'dark',chef_securite:'danger',reprographe:'light'}),[]);// Liste complète des rôles du personnel (incluant tous les nouveaux rôles)\nconst staffRoles=useMemo(()=>['teacher','accountant','admin','surveillant_general','comptable_superieur','general_accountant','secretaire','principal','user','bibliothecaire','responsable_pedagogique','dean_of_studies','censeur_esg','censeur','surveillant_secteur','caissiere','chef_travaux','chef_securite','reprographe'],[]);const getFieldLabel=fieldName=>{const fieldLabels={name:'Nom complet',email:'Adresse e-mail',contact:'Numéro de téléphone',role:'Rôle',photo:'Photo',password:'Mot de passe',username:'Nom d\\'utilisateur'};return fieldLabels[fieldName]||fieldName;};useEffect(()=>{loadData();},[]);const loadData=async()=>{setLoading(true);try{const[usersRes,statsRes]=await Promise.all([secureApiEndpoints.userManagement.getAll(),secureApiEndpoints.userManagement.getStats()]);if(usersRes.success){setUsers(usersRes.data);setFilteredUsers(usersRes.data);}if(statsRes.success){setStats(statsRes.data);}}catch(error){setError('Erreur lors du chargement des données');console.error('Error loading data:',error);}finally{setLoading(false);}};// Fonction de filtrage\nuseEffect(()=>{let filtered=users;// Filtrage par terme de recherche\nif(searchTerm){filtered=filtered.filter(user=>{var _user$contact,_roleLabels$user$role;return user.name.toLowerCase().includes(searchTerm.toLowerCase())||user.email.toLowerCase().includes(searchTerm.toLowerCase())||((_user$contact=user.contact)===null||_user$contact===void 0?void 0:_user$contact.toLowerCase().includes(searchTerm.toLowerCase()))||((_roleLabels$user$role=roleLabels[user.role])===null||_roleLabels$user$role===void 0?void 0:_roleLabels$user$role.toLowerCase().includes(searchTerm.toLowerCase()));});}// Filtrage par rôle\nif(roleFilter!=='all'){filtered=filtered.filter(user=>user.role===roleFilter);}// Filtrage par statut\nif(statusFilter!=='all'){filtered=filtered.filter(user=>statusFilter==='active'?user.is_active:!user.is_active);}setFilteredUsers(filtered);},[users,searchTerm,roleFilter,statusFilter,roleLabels]);// Fonction pour obtenir l'avatar de l'utilisateur\nconst getUserAvatar=function(user){let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:40;const initials=user.name.split(' ').map(n=>n[0]).join('').substring(0,2).toUpperCase();const InitialsAvatar=()=>/*#__PURE__*/_jsx(\"div\",{style:{width:size,height:size,borderRadius:'50%',backgroundColor:roleColors[user.role]==='warning'?'#ffc107':roleColors[user.role]==='success'?'#28a745':roleColors[user.role]==='primary'?'#007bff':'#6c757d',display:'flex',alignItems:'center',justifyContent:'center',fontSize:size*0.4,fontWeight:'bold',color:'white'},children:initials});if(user.photo){return/*#__PURE__*/_jsx(\"img\",{src:user.photo,alt:user.name,style:{width:size,height:size,borderRadius:'50%',objectFit:'cover',border:'2px solid #fff',boxShadow:'0 2px 4px rgba(0,0,0,0.1)'},onError:e=>{console.error('Error loading image:',user.photo);e.target.style.display='none';// Créer et insérer l'avatar avec initiales\nconst parent=e.target.parentNode;if(parent&&!parent.querySelector('.initials-avatar')){const initialsDiv=document.createElement('div');initialsDiv.className='initials-avatar';initialsDiv.style.cssText=`\n                                width: ${size}px;\n                                height: ${size}px;\n                                border-radius: 50%;\n                                background-color: ${roleColors[user.role]==='warning'?'#ffc107':roleColors[user.role]==='success'?'#28a745':roleColors[user.role]==='primary'?'#007bff':'#6c757d'};\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-size: ${size*0.4}px;\n                                font-weight: bold;\n                                color: white;\n                            `;initialsDiv.textContent=initials;parent.appendChild(initialsDiv);}}});}else{return/*#__PURE__*/_jsx(InitialsAvatar,{});}};// Fonction pour gérer la sélection de photo\nconst handlePhotoSelected=photoUrl=>{setFormData({...formData,photo:photoUrl});setShowPhotoCapture(false);};const handleShowModal=function(mode){let user=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setModalMode(mode);setSelectedUser(user);if(mode==='create'){setFormData({name:'',email:'',contact:'',photo:'',role:'accountant',qualification:'',is_active:true,generate_password:true});}else if(mode==='edit'&&user){setFormData({name:user.name,email:user.email,contact:user.contact||'',photo:user.photo||'',role:user.role,qualification:user.qualification||'',is_active:user.is_active,generate_password:false});}setShowModal(true);};const handleCloseModal=()=>{setShowModal(false);setSelectedUser(null);setError('');};const validateForm=()=>{const errors={};if(!formData.name.trim()){errors.name='Le nom complet est obligatoire';}else if(formData.name.length>255){errors.name='Le nom ne peut pas dépasser 255 caractères';}if(!formData.email.trim()){errors.email='L\\'adresse e-mail est obligatoire';}else if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)){errors.email='L\\'adresse e-mail doit être valide';}if(formData.contact&&formData.contact.length>20){errors.contact='Le numéro de téléphone ne peut pas dépasser 20 caractères';}if(!formData.role){errors.role='Le rôle est obligatoire';}return errors;};const handleSubmit=async e=>{e.preventDefault();// Validation côté client\nconst validationErrors=validateForm();if(Object.keys(validationErrors).length>0){const errorMessages=Object.entries(validationErrors).map(_ref=>{let[field,message]=_ref;const fieldLabel=getFieldLabel(field);return`<strong>${fieldLabel}:</strong> ${message}`;}).join('<br>');await Swal.fire({title:'Erreurs de validation',html:`\n                    <div class=\"text-left\">\n                        <p>Veuillez corriger les erreurs suivantes :</p>\n                        <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                            ${errorMessages}\n                        </div>\n                    </div>\n                `,icon:'error',confirmButtonText:'Corriger'});return;}setLoading(true);try{let response;if(modalMode==='create'){response=await secureApiEndpoints.userManagement.create(formData);}else if(modalMode==='edit'){response=await secureApiEndpoints.userManagement.update(selectedUser.id,formData);}if(response.success){if(modalMode==='create'&&response.data.password){await Swal.fire({title:'Utilisateur créé !',html:`\n                            <p>L'utilisateur <strong>${response.data.user.name}</strong> a été créé avec succès.</p>\n                            <div class=\"alert alert-warning mt-3\">\n                                <strong>Mot de passe généré :</strong><br>\n                                <code style=\"font-size: 1.2em;\">${response.data.password}</code><br>\n                                <small>Notez ce mot de passe car il ne sera plus affiché.</small>\n                            </div>\n                        `,icon:'success',confirmButtonText:'Compris'});}else{Swal.fire('Succès',response.message,'success');}handleCloseModal();await loadData();}else{// Gérer les erreurs de validation détaillées\nif(response.errors&&Object.keys(response.errors).length>0){const errorMessages=Object.entries(response.errors).map(_ref2=>{let[field,messages]=_ref2;const fieldLabel=getFieldLabel(field);const message=Array.isArray(messages)?messages[0]:messages;return`<strong>${fieldLabel}:</strong> ${message}`;}).join('<br>');await Swal.fire({title:'Erreurs de validation',html:`\n                            <div class=\"text-left\">\n                                <p>Veuillez corriger les erreurs suivantes :</p>\n                                <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                                    ${errorMessages}\n                                </div>\n                            </div>\n                        `,icon:'error',confirmButtonText:'Corriger'});}else{// Pas d'erreurs de validation spécifiques, afficher le message d'erreur général\nawait Swal.fire({title:'Erreur',text:response.message||'Erreur lors de la sauvegarde',icon:'error',confirmButtonText:'Fermer'});}// Ne pas utiliser setError ici car on affiche déjà avec SweetAlert2\n}}catch(error){console.error('Error saving user:',error);// Gérer les différents types d'erreurs\nlet errorMessage='Erreur lors de la sauvegarde';let errorDetails='';if(error.response){// Erreur de réponse du serveur\nconst{status,data}=error.response;if(status===422&&data.errors&&Object.keys(data.errors).length>0){// Erreurs de validation Laravel\nconst errorMessages=Object.entries(data.errors).map(_ref3=>{let[field,messages]=_ref3;const fieldLabel=getFieldLabel(field);const message=Array.isArray(messages)?messages[0]:messages;return`<strong>${fieldLabel}:</strong> ${message}`;}).join('<br>');await Swal.fire({title:'Erreurs de validation',html:`\n                            <div class=\"text-left\">\n                                <p>Veuillez corriger les erreurs suivantes :</p>\n                                <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                                    ${errorMessages}\n                                </div>\n                            </div>\n                        `,icon:'error',confirmButtonText:'Corriger'});return;// Ne pas afficher l'erreur générale\n}else if(status===409){errorMessage='Conflit de données';errorDetails=data.message||'Un utilisateur avec ces informations existe déjà.';}else if(status===500){errorMessage='Erreur serveur';errorDetails='Une erreur interne s\\'est produite. Veuillez réessayer plus tard.';}else{errorMessage=data.message||`Erreur ${status}`;errorDetails=data.error||'Une erreur inattendue s\\'est produite.';}}else if(error.request){// Erreur de réseau\nerrorMessage='Erreur de connexion';errorDetails='Impossible de joindre le serveur. Vérifiez votre connexion internet.';}else{// Autre erreur\nerrorMessage='Erreur inattendue';errorDetails=error.message||'Une erreur inattendue s\\'est produite.';}// Afficher l'erreur avec SweetAlert2 pour plus de visibilité\nawait Swal.fire({title:errorMessage,text:errorDetails,icon:'error',confirmButtonText:'Fermer'});setError(errorMessage);}finally{setLoading(false);}};const handleResetPassword=async user=>{const result=await Swal.fire({title:'Réinitialiser le mot de passe ?',text:`Voulez-vous vraiment réinitialiser le mot de passe de ${user.name} ?`,icon:'warning',showCancelButton:true,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:'Oui, réinitialiser',cancelButtonText:'Annuler'});if(result.isConfirmed){try{const response=await secureApiEndpoints.userManagement.resetPassword(user.id);if(response.success){await Swal.fire({title:'Mot de passe réinitialisé !',html:`\n                            <p>Le mot de passe de <strong>${user.name}</strong> a été réinitialisé.</p>\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Nouveau mot de passe :</strong><br>\n                                <code style=\"font-size: 1.2em;\">${response.data.new_password}</code><br>\n                                <small>Notez ce mot de passe car il ne sera plus affiché.</small>\n                            </div>\n                        `,icon:'success',confirmButtonText:'Compris'});}else{Swal.fire('Erreur',response.message,'error');}}catch(error){Swal.fire('Erreur','Erreur lors de la réinitialisation du mot de passe','error');}}};const handleToggleStatus=async user=>{try{const response=await secureApiEndpoints.userManagement.toggleStatus(user.id);if(response.success){Swal.fire('Succès',response.message,'success');await loadData();}else{Swal.fire('Erreur',response.message,'error');}}catch(error){Swal.fire('Erreur','Erreur lors du changement de statut','error');}};const handleDelete=async user=>{const result=await Swal.fire({title:'Supprimer l\\'utilisateur ?',text:`Voulez-vous vraiment supprimer ${user.name} ? Cette action est irréversible.`,icon:'warning',showCancelButton:true,confirmButtonColor:'#d33',cancelButtonColor:'#3085d6',confirmButtonText:'Oui, supprimer',cancelButtonText:'Annuler'});if(result.isConfirmed){try{const response=await secureApiEndpoints.userManagement.delete(user.id);if(response.success){Swal.fire('Supprimé !',response.message,'success');await loadData();}else{Swal.fire('Erreur',response.message,'error');}}catch(error){Swal.fire('Erreur','Erreur lors de la suppression','error');}}};const handleGenerateProfessionalCard=async user=>{try{setLoading(true);const pdfBlob=await secureApiEndpoints.userManagement.generateProfessionalCard(user.id);// Créer un lien de téléchargement\nconst url=window.URL.createObjectURL(pdfBlob);const link=document.createElement('a');link.href=url;link.download=`carte_professionnelle_${user.name.replace(/\\s+/g,'_')}_${new Date().toISOString().split('T')[0]}.pdf`;document.body.appendChild(link);link.click();link.remove();window.URL.revokeObjectURL(url);await Swal.fire({title:'Carte générée !',text:`La carte d'identité professionnelle de ${user.name} a été générée et téléchargée.`,icon:'success',confirmButtonText:'OK'});}catch(error){console.error('Error generating professional card:',error);await Swal.fire({title:'Erreur',text:'Erreur lors de la génération de la carte professionnelle: '+error.message,icon:'error',confirmButtonText:'Fermer'});}finally{setLoading(false);}};const handlePrintBadge=async user=>{try{setLoading(true);// Vérifier que l'utilisateur est un membre du personnel\nif(!staffRoles.includes(user.role)){await Swal.fire({title:'Information',text:'L\\'impression de badges QR n\\'est disponible que pour les membres du personnel (enseignants, comptables, surveillants, etc.)',icon:'info',confirmButtonText:'Compris'});return;}// Utiliser l'API du StaffAttendanceController pour générer le badge\nconst response=await secureApiEndpoints.staff.downloadBadgePDF({user_id:user.id});// Télécharger le PDF\nconst blob=await response.blob();const downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;link.download=`badge_${user.name.replace(/\\s+/g,'_')}.pdf`;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(downloadUrl);await Swal.fire({title:'Badge généré !',text:`Badge PDF téléchargé pour ${user.name}`,icon:'success',timer:2000,showConfirmButton:false});}catch(error){console.error('Error generating badge:',error);await Swal.fire({title:'Erreur',text:'Erreur lors de la génération du badge: '+(error.message||'Une erreur inattendue s\\'est produite'),icon:'error',confirmButtonText:'Fermer'});}finally{setLoading(false);}};// Fonctions pour la sélection multiple\nconst handleSelectUser=(userId,isSelected)=>{if(isSelected){setSelectedUsers(prev=>[...prev,userId]);}else{setSelectedUsers(prev=>prev.filter(id=>id!==userId));}};const handleSelectAll=()=>{const eligibleUsers=filteredUsers.filter(user=>staffRoles.includes(user.role));if(selectedUsers.length===eligibleUsers.length){// Tout désélectionner\nsetSelectedUsers([]);}else{// Tout sélectionner\nsetSelectedUsers(eligibleUsers.map(user=>user.id));}};const handlePrintMultipleBadges=async()=>{if(selectedUsers.length===0){await Swal.fire({title:'Aucune sélection',text:'Veuillez sélectionner au moins un utilisateur pour imprimer les badges.',icon:'warning',confirmButtonText:'OK'});return;}const result=await Swal.fire({title:'Confirmer l\\'impression',text:`Voulez-vous imprimer les badges de ${selectedUsers.length} utilisateur(s) sélectionné(s) ?`,icon:'question',showCancelButton:true,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:'Oui, imprimer',cancelButtonText:'Annuler'});if(!result.isConfirmed)return;try{setIsGeneratingMultipleBadges(true);const response=await secureApiEndpoints.staff.generateMultipleBadges(selectedUsers);// Télécharger le PDF\nconst blob=await response.blob();const downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;link.download=`badges_multiples_${new Date().toISOString().split('T')[0]}.pdf`;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(downloadUrl);await Swal.fire({title:'Badges générés !',text:`PDF avec ${selectedUsers.length} badge(s) téléchargé avec succès.`,icon:'success',timer:3000,showConfirmButton:false});// Réinitialiser la sélection\nsetSelectedUsers([]);}catch(error){console.error('Error generating multiple badges:',error);await Swal.fire({title:'Erreur',text:'Erreur lors de la génération des badges: '+(error.message||'Une erreur inattendue s\\'est produite'),icon:'error',confirmButtonText:'Fermer'});}finally{setIsGeneratingMultipleBadges(false);}};const handleImportAdministrativeStaff=async()=>{await Swal.fire({title:'Fonctionnalité non disponible',text:'L\\'import du personnel administratif sera disponible prochainement.',icon:'info',confirmButtonText:'OK'});};const handleExportAdministrativeStaff=async()=>{const result=await Swal.fire({title:'Confirmer l\\'export',text:'Voulez-vous exporter la liste du personnel administratif en PDF ?',icon:'question',showCancelButton:true,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:'Oui, exporter',cancelButtonText:'Annuler'});if(!result.isConfirmed)return;try{const response=await secureApiEndpoints.userManagement.exportAdministrativeStaffPdf();// Télécharger le PDF\nconst blob=await response;const downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;link.download=`Fichier_Personnel_Administratif_${new Date().toISOString().split('T')[0]}.pdf`;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(downloadUrl);await Swal.fire({title:'Export réussi !',text:'Le fichier du personnel administratif a été téléchargé avec succès.',icon:'success',timer:3000,showConfirmButton:false});}catch(error){console.error('Error exporting administrative staff:',error);await Swal.fire({title:'Erreur',text:'Erreur lors de l\\'export: '+(error.message||'Une erreur inattendue s\\'est produite'),icon:'error',confirmButtonText:'Fermer'});}};const renderStatsCards=()=>{var _stats$by_role;return/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(People,{size:40,className:\"text-primary mb-2\"}),/*#__PURE__*/_jsx(\"h3\",{children:stats.total_users}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Total Utilisateurs\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(PersonCheck,{size:40,className:\"text-success mb-2\"}),/*#__PURE__*/_jsx(\"h3\",{children:stats.active_users}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Actifs\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(PersonX,{size:40,className:\"text-warning mb-2\"}),/*#__PURE__*/_jsx(\"h3\",{children:stats.inactive_users}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Inactifs\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(PersonFill,{size:40,className:\"text-info mb-2\"}),/*#__PURE__*/_jsx(\"h3\",{children:((_stats$by_role=stats.by_role)===null||_stats$by_role===void 0?void 0:_stats$by_role.teacher)||0}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Enseignants\"})]})})})]});};const renderUserModal=()=>/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:handleCloseModal,size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[modalMode==='create'&&'Créer un utilisateur',modalMode==='edit'&&'Modifier l\\'utilisateur',modalMode==='view'&&'Détails de l\\'utilisateur']})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Modal.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nom complet *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:formData.name,onChange:e=>setFormData({...formData,name:e.target.value}),required:true,disabled:modalMode==='view'})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:formData.email,onChange:e=>setFormData({...formData,email:e.target.value}),required:true,disabled:modalMode==='view'})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Contact\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"tel\",value:formData.contact,onChange:e=>setFormData({...formData,contact:e.target.value}),placeholder:\"Ex: +237 6XX XXX XXX\",disabled:modalMode==='view'})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Photo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(Button,{variant:formData.photo?\"outline-success\":\"outline-primary\",onClick:()=>setShowPhotoCapture(true),disabled:modalMode==='view',children:[/*#__PURE__*/_jsx(\"i\",{className:`bi bi-${formData.photo?'check-circle':'camera'} me-2`}),formData.photo?'Photo sélectionnée':'Choisir une photo']}),formData.photo&&/*#__PURE__*/_jsx(\"img\",{src:formData.photo,alt:\"Aper\\xE7u\",style:{width:'50px',height:'50px',borderRadius:'50%',objectFit:'cover',border:'2px solid #28a745'},onError:e=>{e.target.style.display='none';}})]}),!formData.photo&&/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Optionnel - Prenez une photo avec la cam\\xE9ra ou s\\xE9lectionnez un fichier\"})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"R\\xF4le *\"}),/*#__PURE__*/_jsxs(Form.Select,{value:formData.role,onChange:e=>setFormData({...formData,role:e.target.value}),required:true,disabled:modalMode==='view',children:[/*#__PURE__*/_jsxs(\"optgroup\",{label:\"R\\xF4les administratifs principaux\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"principal\",children:\"Principal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"surveillant_general\",children:\"Surveillant G\\xE9n\\xE9ral\"}),/*#__PURE__*/_jsx(\"option\",{value:\"general_accountant\",children:\"Comptable G\\xE9n\\xE9ral\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comptable_superieur\",children:\"Comptable Sup\\xE9rieur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"accountant\",children:\"Comptable\"}),/*#__PURE__*/_jsx(\"option\",{value:\"secretaire\",children:\"Secr\\xE9taire\"}),/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"Utilisateur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bibliothecaire\",children:\"Biblioth\\xE9caire\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Nouveaux r\\xF4les\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"responsable_pedagogique\",children:\"Responsable P\\xE9dagogique\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dean_of_studies\",children:\"Dean of Studies\"}),/*#__PURE__*/_jsx(\"option\",{value:\"censeur_esg\",children:\"Censeur ESG\"}),/*#__PURE__*/_jsx(\"option\",{value:\"censeur\",children:\"Censeur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"surveillant_secteur\",children:\"Surveillant de Secteur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"caissiere\",children:\"Caissi\\xE8re\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bibliothecaire\",children:\"Biblioth\\xE9caire\"}),/*#__PURE__*/_jsx(\"option\",{value:\"chef_travaux\",children:\"Chef des Travaux\"}),/*#__PURE__*/_jsx(\"option\",{value:\"chef_securite\",children:\"Chef de S\\xE9curit\\xE9\"}),/*#__PURE__*/_jsx(\"option\",{value:\"reprographe\",children:\"Reprographe\"})]})]})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Qualification\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Ex: BAC, BTS, Licence, Ma\\xEEtrise...\",value:formData.qualification,onChange:e=>setFormData({...formData,qualification:e.target.value}),disabled:modalMode==='view'})]})})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Statut\"}),/*#__PURE__*/_jsx(Form.Check,{type:\"switch\",id:\"is_active\",label:formData.is_active?\"Actif\":\"Inactif\",checked:formData.is_active,onChange:e=>setFormData({...formData,is_active:e.target.checked}),disabled:modalMode==='view'})]})})}),modalMode==='create'&&/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"generate_password\",label:\"G\\xE9n\\xE9rer automatiquement un mot de passe\",checked:formData.generate_password,onChange:e=>setFormData({...formData,generate_password:e.target.checked})})})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleCloseModal,children:\"Annuler\"}),modalMode!=='view'&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:loading,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Sauvegarde...\"]}):modalMode==='create'?'Créer':'Modifier'})]})]})]});return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(People,{className:\"me-3\"}),\"Gestion des Utilisateurs\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"G\\xE9rer les comptes des surveillants g\\xE9n\\xE9raux, comptables et secr\\xE9taires (enseignants cr\\xE9\\xE9s via gestion des utilisateurs)\"})]}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:handleExportAdministrativeStaff,className:\"d-flex align-items-center\",title:\"Exporter le personnel administratif\",children:[/*#__PURE__*/_jsx(FileEarmarkPdf,{className:\"me-2\"}),\"Export Personnel Admin\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"info\",onClick:handleImportAdministrativeStaff,className:\"d-flex align-items-center\",title:\"Importer le personnel administratif\",children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Import Personnel Admin\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:()=>handleShowModal('create'),className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(PersonPlus,{className:\"me-2\"}),\"Nouvel Utilisateur\"]})]})]})})}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",dismissible:true,onClose:()=>setError(''),children:error}),renderStatsCards(),/*#__PURE__*/_jsx(Card,{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Rechercher\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Nom, email, contact ou r\\xF4le...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filtrer par r\\xF4le\"}),/*#__PURE__*/_jsxs(Form.Select,{value:roleFilter,onChange:e=>setRoleFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"Tous les r\\xF4les\"}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"R\\xF4les principaux\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"surveillant_general\",children:\"Surveillants G\\xE9n\\xE9raux\"}),/*#__PURE__*/_jsx(\"option\",{value:\"general_accountant\",children:\"Comptables G\\xE9n\\xE9raux\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comptable_superieur\",children:\"Comptables Sup\\xE9rieurs\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comptable\",children:\"Comptables\"}),/*#__PURE__*/_jsx(\"option\",{value:\"secretaire\",children:\"Secr\\xE9taires\"}),/*#__PURE__*/_jsx(\"option\",{value:\"enseignant\",children:\"Enseignants\"}),/*#__PURE__*/_jsx(\"option\",{value:\"teacher\",children:\"Enseignants (anciens)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"accountant\",children:\"Comptables (anciens)\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Nouveaux r\\xF4les\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"responsable_pedagogique\",children:\"Responsables P\\xE9dagogiques\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dean_of_studies\",children:\"Dean of Studies\"}),/*#__PURE__*/_jsx(\"option\",{value:\"censeur_esg\",children:\"Censeurs ESG\"}),/*#__PURE__*/_jsx(\"option\",{value:\"censeur\",children:\"Censeurs\"}),/*#__PURE__*/_jsx(\"option\",{value:\"surveillant_secteur\",children:\"Surveillants de Secteur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"caissiere\",children:\"Caissi\\xE8res\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bibliothecaire\",children:\"Biblioth\\xE9caires\"}),/*#__PURE__*/_jsx(\"option\",{value:\"chef_travaux\",children:\"Chefs des Travaux\"}),/*#__PURE__*/_jsx(\"option\",{value:\"chef_securite\",children:\"Chefs de S\\xE9curit\\xE9\"}),/*#__PURE__*/_jsx(\"option\",{value:\"reprographe\",children:\"Reprographes\"})]})]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filtrer par statut\"}),/*#__PURE__*/_jsxs(Form.Select,{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"Tous\"}),/*#__PURE__*/_jsx(\"option\",{value:\"active\",children:\"Actifs\"}),/*#__PURE__*/_jsx(\"option\",{value:\"inactive\",children:\"Inactifs\"})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[filteredUsers.length,\" utilisateur(s) trouv\\xE9(s) sur \",users.length,\" total\"]}),selectedUsers.length>0&&/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",className:\"d-flex align-items-center gap-1\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check-square\"}),selectedUsers.length,\" s\\xE9lectionn\\xE9(s)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[(()=>{const eligibleUsers=filteredUsers.filter(user=>staffRoles.includes(user.role));if(eligibleUsers.length>0){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-info\",size:\"sm\",onClick:handleSelectAll,className:\"d-flex align-items-center gap-1\",children:[/*#__PURE__*/_jsx(\"i\",{className:`bi bi-${selectedUsers.length===eligibleUsers.length?'square':'check-square'}`}),selectedUsers.length===eligibleUsers.length?'Tout désélectionner':'Tout sélectionner']}),selectedUsers.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"sm\",onClick:handlePrintMultipleBadges,disabled:isGeneratingMultipleBadges,className:\"d-flex align-items-center gap-1\",children:isGeneratingMultipleBadges?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\"}),\"G\\xE9n\\xE9ration...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PrinterFill,{}),\"Imprimer badges (\",selectedUsers.length,\")\"]})})]});}return null;})(),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",size:\"sm\",onClick:()=>{setSearchTerm('');setRoleFilter('all');setStatusFilter('all');setSelectedUsers([]);},children:\"R\\xE9initialiser les filtres\"})]})]})]})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Liste des Utilisateurs\"})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\"})}):/*#__PURE__*/_jsxs(Table,{responsive:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'40px'},children:(()=>{const eligibleUsers=filteredUsers.filter(user=>staffRoles.includes(user.role));if(eligibleUsers.length>0){return/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",checked:selectedUsers.length===eligibleUsers.length&&eligibleUsers.length>0,onChange:handleSelectAll,title:\"S\\xE9lectionner/D\\xE9s\\xE9lectionner tout\"});}return null;})()}),/*#__PURE__*/_jsx(\"th\",{children:\"Photo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Contact\"}),/*#__PURE__*/_jsx(\"th\",{children:\"R\\xF4le\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Qualification\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Statut\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date de cr\\xE9ation\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredUsers.map(user=>{const isStaff=staffRoles.includes(user.role);const isSelected=selectedUsers.includes(user.id);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{textAlign:'center'},children:isStaff?/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",checked:isSelected,onChange:e=>handleSelectUser(user.id,e.target.checked),title:`Sélectionner ${user.name}`}):/*#__PURE__*/_jsx(\"span\",{style:{color:'#6c757d',fontSize:'12px',cursor:'help'},title:\"Non \\xE9ligible pour l'impression de badges\",children:\"N/A\"})}),/*#__PURE__*/_jsx(\"td\",{style:{textAlign:'center'},children:getUserAvatar(user,35)}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.contact||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:roleColors[user.role],children:roleLabels[user.role]})}),/*#__PURE__*/_jsx(\"td\",{children:user.qualification||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:user.is_active?'success':'secondary',children:user.is_active?'Actif':'Inactif'})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(user.created_at).toLocaleDateString('fr-FR')}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Dropdown,{as:ButtonGroup,children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",size:\"sm\",onClick:()=>handleShowModal('view',user),children:/*#__PURE__*/_jsx(EyeFill,{})}),/*#__PURE__*/_jsx(Dropdown.Toggle,{split:true,variant:\"outline-primary\",size:\"sm\"}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handleShowModal('edit',user),children:[/*#__PURE__*/_jsx(PencilSquare,{className:\"me-2\"}),\"Modifier\"]}),/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handleResetPassword(user),children:[/*#__PURE__*/_jsx(Key,{className:\"me-2\"}),\"R\\xE9initialiser mot de passe\"]}),/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handleToggleStatus(user),children:[user.is_active?/*#__PURE__*/_jsx(PersonX,{className:\"me-2\"}):/*#__PURE__*/_jsx(PersonCheck,{className:\"me-2\"}),user.is_active?'Désactiver':'Activer']}),/*#__PURE__*/_jsx(Dropdown.Divider,{}),/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handlePrintBadge(user),className:\"text-primary\",children:[/*#__PURE__*/_jsx(PrinterFill,{className:\"me-2\"}),\"Imprimer badge QR\"]}),user.role!=='admin'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Dropdown.Divider,{}),/*#__PURE__*/_jsxs(Dropdown.Item,{className:\"text-danger\",onClick:()=>handleDelete(user),children:[/*#__PURE__*/_jsx(Trash,{className:\"me-2\"}),\"Supprimer\"]})]})]})]})})]},user.id);})})]})})]}),renderUserModal(),/*#__PURE__*/_jsxs(Modal,{show:showQRModal,onHide:()=>setShowQRModal(false),centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[/*#__PURE__*/_jsx(QrCode,{className:\"me-2\"}),\"Code QR - \",selectedUserQR===null||selectedUserQR===void 0?void 0:selectedUserQR.user_name]})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"text-center\",children:selectedUserQR&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"img\",{src:selectedUserQR.qr_url,alt:\"QR Code\",style:{width:'200px',height:'200px',border:'2px solid #dee2e6',borderRadius:'8px'}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Informations du QR Code\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-start\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nom:\"}),\" \",selectedUserQR.user_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"R\\xF4le:\"}),\" \",roleLabels[selectedUserQR.user_role]||selectedUserQR.user_role]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Code:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:selectedUserQR.qr_content})]})]})]}),/*#__PURE__*/_jsx(Alert,{variant:\"info\",className:\"text-start\",children:/*#__PURE__*/_jsxs(\"small\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Ce code QR est unique pour cet utilisateur et peut \\xEAtre utilis\\xE9 pour l'identification et l'authentification dans le syst\\xE8me.\"]})})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowQRModal(false),children:\"Fermer\"}),selectedUserQR&&/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:()=>{setShowQRModal(false);handleGenerateProfessionalCard({id:selectedUserQR.user_id,name:selectedUserQR.user_name});},children:[/*#__PURE__*/_jsx(CreditCard2Back,{className:\"me-2\"}),\"G\\xE9n\\xE9rer la carte\"]})]})]}),/*#__PURE__*/_jsx(PhotoCapture,{show:showPhotoCapture,onHide:()=>setShowPhotoCapture(false),onPhotoSelected:handlePhotoSelected})]});};export default UserManagement;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Container","Row","Col","Card","Button","Table","Modal","Form","Alert","Spinner","Badge","ButtonGroup","Dropdown","PersonPlus","People","PersonFill","PersonX","Key","Trash","PencilSquare","EyeFill","PersonCheck","CreditCard2Back","QrCode","PrinterFill","FileEarmarkPdf","Upload","secureApiEndpoints","host","Swal","PhotoCapture","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserManagement","users","setUsers","filteredUsers","setFilteredUsers","stats","setStats","loading","setLoading","error","setError","showModal","setShowModal","modalMode","setModalMode","selectedUser","setSelectedUser","showPhotoCapture","setShowPhotoCapture","showQRModal","setShowQRModal","selectedUserQR","setSelectedUserQR","selectedUsers","setSelectedUsers","isGeneratingMultipleBadges","setIsGeneratingMultipleBadges","searchTerm","setSearchTerm","roleFilter","setRoleFilter","statusFilter","setStatusFilter","formData","setFormData","name","email","contact","photo","role","qualification","is_active","generate_password","roleLabels","admin","surveillant_general","general_accountant","comptable_superieur","comptable","secretaire","enseignant","teacher","accountant","principal","user","bibliothecaire","responsable_pedagogique","dean_of_studies","censeur_esg","censeur","surveillant_secteur","caissiere","chef_travaux","chef_securite","reprographe","roleColors","staffRoles","getFieldLabel","fieldName","fieldLabels","password","username","loadData","usersRes","statsRes","Promise","all","userManagement","getAll","getStats","success","data","console","filtered","filter","_user$contact","_roleLabels$user$role","toLowerCase","includes","getUserAvatar","size","arguments","length","undefined","initials","split","map","n","join","substring","toUpperCase","InitialsAvatar","style","width","height","borderRadius","backgroundColor","display","alignItems","justifyContent","fontSize","fontWeight","color","children","src","alt","objectFit","border","boxShadow","onError","e","target","parent","parentNode","querySelector","initialsDiv","document","createElement","className","cssText","textContent","appendChild","handlePhotoSelected","photoUrl","handleShowModal","mode","handleCloseModal","validateForm","errors","trim","test","handleSubmit","preventDefault","validationErrors","Object","keys","errorMessages","entries","_ref","field","message","fieldLabel","fire","title","html","icon","confirmButtonText","response","create","update","id","_ref2","messages","Array","isArray","text","errorMessage","errorDetails","status","_ref3","request","handleResetPassword","result","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","isConfirmed","resetPassword","new_password","handleToggleStatus","toggleStatus","handleDelete","delete","handleGenerateProfessionalCard","pdfBlob","generateProfessionalCard","url","window","URL","createObjectURL","link","href","download","replace","Date","toISOString","body","click","remove","revokeObjectURL","handlePrintBadge","staff","downloadBadgePDF","user_id","blob","downloadUrl","removeChild","timer","showConfirmButton","handleSelectUser","userId","isSelected","prev","handleSelectAll","eligibleUsers","handlePrintMultipleBadges","generateMultipleBadges","handleImportAdministrativeStaff","handleExportAdministrativeStaff","exportAdministrativeStaffPdf","renderStatsCards","_stats$by_role","md","Body","total_users","active_users","inactive_users","by_role","renderUserModal","show","onHide","Header","closeButton","Title","onSubmit","variant","Group","Label","Control","type","value","onChange","required","disabled","placeholder","onClick","Text","Select","label","Check","checked","Footer","animation","fluid","dismissible","onClose","bg","responsive","hover","isStaff","textAlign","cursor","created_at","toLocaleDateString","as","Toggle","Menu","Item","Divider","centered","user_name","qr_url","user_role","qr_content","onPhotoSelected"],"sources":["/var/www/College-IUP/front/src/pages/UserManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    Button,\n    Table,\n    Modal,\n    Form,\n    Alert,\n    Spinner,\n    Badge,\n    ButtonGroup,\n    Dropdown\n} from 'react-bootstrap';\nimport {\n    PersonPlus,\n    People,\n    PersonFill,\n    PersonX,\n    Key,\n    Trash,\n    PencilSquare,\n    EyeFill,\n    PersonCheck,\n    CreditCard2Back,\n    QrCode,\n    PrinterFill,\n    FileEarmarkPdf,\n    Upload\n} from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../utils/apiMigration';\nimport { host } from '../utils/fetch';\nimport Swal from 'sweetalert2';\nimport PhotoCapture from '../components/PhotoCapture';\n\nconst UserManagement = () => {\n    const [users, setUsers] = useState([]);\n    const [filteredUsers, setFilteredUsers] = useState([]);\n    const [stats, setStats] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const [modalMode, setModalMode] = useState('create'); // create, edit, view\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [showPhotoCapture, setShowPhotoCapture] = useState(false);\n    const [showQRModal, setShowQRModal] = useState(false);\n    const [selectedUserQR, setSelectedUserQR] = useState(null);\n    \n    // États pour la sélection multiple\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [isGeneratingMultipleBadges, setIsGeneratingMultipleBadges] = useState(false);\n    \n    // États pour la recherche et les filtres\n    const [searchTerm, setSearchTerm] = useState('');\n    const [roleFilter, setRoleFilter] = useState('all');\n    const [statusFilter, setStatusFilter] = useState('all');\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        contact: '',\n        photo: '',\n        role: 'accountant',\n        qualification: '',\n        is_active: true,\n        generate_password: true\n    });\n\n    const roleLabels = useMemo(() => ({\n        admin: 'Administrateur',\n        surveillant_general: 'Surveillant Général',\n        general_accountant: 'Comptable Général',\n        comptable_superieur: 'Comptable Supérieur',\n        comptable: 'Comptable',\n        secretaire: 'Secrétaire',\n        enseignant: 'Enseignant',\n        teacher: 'Enseignant',\n        accountant: 'Comptable',\n        principal: 'Principal',\n        user: 'Utilisateur',\n        bibliothecaire: 'Bibliothécaire',\n        responsable_pedagogique: 'Responsable Pédagogique',\n        dean_of_studies: 'Dean of Studies',\n        censeur_esg: 'Censeur ESG',\n        censeur: 'Censeur',\n        surveillant_secteur: 'Surveillant de Secteur',\n        caissiere: 'Caissière',\n        chef_travaux: 'Chef des Travaux',\n        chef_securite: 'Chef de Sécurité',\n        reprographe: 'Reprographe',\n    }), []);\n\n    const roleColors = useMemo(() => ({\n        admin: 'danger',\n        surveillant_general: 'primary',\n        general_accountant: 'warning',\n        comptable_superieur: 'dark',\n        comptable: 'success',\n        secretaire: 'info',\n        enseignant: 'warning',\n        teacher: 'warning',\n        accountant: 'success',\n        principal: 'danger',\n        user: 'info',\n        bibliothecaire: 'secondary',\n        responsable_pedagogique: 'primary',\n        dean_of_studies: 'secondary',\n        censeur_esg: 'info',\n        censeur: 'info',\n        surveillant_secteur: 'primary',\n        caissiere: 'warning',\n        chef_travaux: 'dark',\n        chef_securite: 'danger',\n        reprographe: 'light',\n    }), []);\n\n    // Liste complète des rôles du personnel (incluant tous les nouveaux rôles)\n    const staffRoles = useMemo(() => [\n        'teacher', 'accountant', 'admin', 'surveillant_general', 'comptable_superieur', 'general_accountant', 'secretaire', 'principal', 'user', 'bibliothecaire', 'responsable_pedagogique', 'dean_of_studies', 'censeur_esg', 'censeur', 'surveillant_secteur', 'caissiere', 'chef_travaux', 'chef_securite', 'reprographe'\n    ], []);\n\n    const getFieldLabel = (fieldName) => {\n        const fieldLabels = {\n            name: 'Nom complet',\n            email: 'Adresse e-mail',\n            contact: 'Numéro de téléphone',\n            role: 'Rôle',\n            photo: 'Photo',\n            password: 'Mot de passe',\n            username: 'Nom d\\'utilisateur'\n        };\n        return fieldLabels[fieldName] || fieldName;\n    };\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    const loadData = async () => {\n        setLoading(true);\n        try {\n            const [usersRes, statsRes] = await Promise.all([\n                secureApiEndpoints.userManagement.getAll(),\n                secureApiEndpoints.userManagement.getStats()\n            ]);\n\n            if (usersRes.success) {\n                setUsers(usersRes.data);\n                setFilteredUsers(usersRes.data);\n            }\n            \n            if (statsRes.success) {\n                setStats(statsRes.data);\n            }\n        } catch (error) {\n            setError('Erreur lors du chargement des données');\n            console.error('Error loading data:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fonction de filtrage\n    useEffect(() => {\n        let filtered = users;\n\n        // Filtrage par terme de recherche\n        if (searchTerm) {\n            filtered = filtered.filter(user => \n                user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                user.contact?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                roleLabels[user.role]?.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        // Filtrage par rôle\n        if (roleFilter !== 'all') {\n            filtered = filtered.filter(user => user.role === roleFilter);\n        }\n\n        // Filtrage par statut\n        if (statusFilter !== 'all') {\n            filtered = filtered.filter(user => \n                statusFilter === 'active' ? user.is_active : !user.is_active\n            );\n        }\n\n        setFilteredUsers(filtered);\n    }, [users, searchTerm, roleFilter, statusFilter, roleLabels]);\n\n    // Fonction pour obtenir l'avatar de l'utilisateur\n    const getUserAvatar = (user, size = 40) => {\n        const initials = user.name.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase();\n        \n        const InitialsAvatar = () => (\n            <div style={{\n                width: size,\n                height: size,\n                borderRadius: '50%',\n                backgroundColor: roleColors[user.role] === 'warning' ? '#ffc107' : \n                               roleColors[user.role] === 'success' ? '#28a745' :\n                               roleColors[user.role] === 'primary' ? '#007bff' : '#6c757d',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: size * 0.4,\n                fontWeight: 'bold',\n                color: 'white'\n            }}>\n                {initials}\n            </div>\n        );\n\n        if (user.photo) {\n            return (\n                <img \n                    src={user.photo} \n                    alt={user.name}\n                    style={{\n                        width: size,\n                        height: size,\n                        borderRadius: '50%',\n                        objectFit: 'cover',\n                        border: '2px solid #fff',\n                        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                    }}\n                    onError={(e) => {\n                        console.error('Error loading image:', user.photo);\n                        e.target.style.display = 'none';\n                        // Créer et insérer l'avatar avec initiales\n                        const parent = e.target.parentNode;\n                        if (parent && !parent.querySelector('.initials-avatar')) {\n                            const initialsDiv = document.createElement('div');\n                            initialsDiv.className = 'initials-avatar';\n                            initialsDiv.style.cssText = `\n                                width: ${size}px;\n                                height: ${size}px;\n                                border-radius: 50%;\n                                background-color: ${roleColors[user.role] === 'warning' ? '#ffc107' : \n                                                   roleColors[user.role] === 'success' ? '#28a745' :\n                                                   roleColors[user.role] === 'primary' ? '#007bff' : '#6c757d'};\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-size: ${size * 0.4}px;\n                                font-weight: bold;\n                                color: white;\n                            `;\n                            initialsDiv.textContent = initials;\n                            parent.appendChild(initialsDiv);\n                        }\n                    }}\n                />\n            );\n        } else {\n            return <InitialsAvatar />;\n        }\n    };\n\n    // Fonction pour gérer la sélection de photo\n    const handlePhotoSelected = (photoUrl) => {\n        setFormData({...formData, photo: photoUrl});\n        setShowPhotoCapture(false);\n    };\n\n    const handleShowModal = (mode, user = null) => {\n        setModalMode(mode);\n        setSelectedUser(user);\n        \n        if (mode === 'create') {\n            setFormData({\n                name: '',\n                email: '',\n                contact: '',\n                photo: '',\n                role: 'accountant',\n                qualification: '',\n                is_active: true,\n                generate_password: true\n            });\n        } else if (mode === 'edit' && user) {\n            setFormData({\n                name: user.name,\n                email: user.email,\n                contact: user.contact || '',\n                photo: user.photo || '',\n                role: user.role,\n                qualification: user.qualification || '',\n                is_active: user.is_active,\n                generate_password: false\n            });\n        }\n        \n        setShowModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setShowModal(false);\n        setSelectedUser(null);\n        setError('');\n    };\n\n    const validateForm = () => {\n        const errors = {};\n        \n        if (!formData.name.trim()) {\n            errors.name = 'Le nom complet est obligatoire';\n        } else if (formData.name.length > 255) {\n            errors.name = 'Le nom ne peut pas dépasser 255 caractères';\n        }\n        \n        if (!formData.email.trim()) {\n            errors.email = 'L\\'adresse e-mail est obligatoire';\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n            errors.email = 'L\\'adresse e-mail doit être valide';\n        }\n        \n        if (formData.contact && formData.contact.length > 20) {\n            errors.contact = 'Le numéro de téléphone ne peut pas dépasser 20 caractères';\n        }\n        \n        if (!formData.role) {\n            errors.role = 'Le rôle est obligatoire';\n        }\n        \n        return errors;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Validation côté client\n        const validationErrors = validateForm();\n        if (Object.keys(validationErrors).length > 0) {\n            const errorMessages = Object.entries(validationErrors).map(([field, message]) => {\n                const fieldLabel = getFieldLabel(field);\n                return `<strong>${fieldLabel}:</strong> ${message}`;\n            }).join('<br>');\n            \n            await Swal.fire({\n                title: 'Erreurs de validation',\n                html: `\n                    <div class=\"text-left\">\n                        <p>Veuillez corriger les erreurs suivantes :</p>\n                        <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                            ${errorMessages}\n                        </div>\n                    </div>\n                `,\n                icon: 'error',\n                confirmButtonText: 'Corriger'\n            });\n            return;\n        }\n        \n        setLoading(true);\n        \n        try {\n            let response;\n            \n            if (modalMode === 'create') {\n                response = await secureApiEndpoints.userManagement.create(formData);\n            } else if (modalMode === 'edit') {\n                response = await secureApiEndpoints.userManagement.update(selectedUser.id, formData);\n            }\n\n            if (response.success) {\n                if (modalMode === 'create' && response.data.password) {\n                    await Swal.fire({\n                        title: 'Utilisateur créé !',\n                        html: `\n                            <p>L'utilisateur <strong>${response.data.user.name}</strong> a été créé avec succès.</p>\n                            <div class=\"alert alert-warning mt-3\">\n                                <strong>Mot de passe généré :</strong><br>\n                                <code style=\"font-size: 1.2em;\">${response.data.password}</code><br>\n                                <small>Notez ce mot de passe car il ne sera plus affiché.</small>\n                            </div>\n                        `,\n                        icon: 'success',\n                        confirmButtonText: 'Compris'\n                    });\n                } else {\n                    Swal.fire('Succès', response.message, 'success');\n                }\n                \n                handleCloseModal();\n                await loadData();\n            } else {\n                // Gérer les erreurs de validation détaillées\n                if (response.errors && Object.keys(response.errors).length > 0) {\n                    const errorMessages = Object.entries(response.errors).map(([field, messages]) => {\n                        const fieldLabel = getFieldLabel(field);\n                        const message = Array.isArray(messages) ? messages[0] : messages;\n                        return `<strong>${fieldLabel}:</strong> ${message}`;\n                    }).join('<br>');\n                    \n                    await Swal.fire({\n                        title: 'Erreurs de validation',\n                        html: `\n                            <div class=\"text-left\">\n                                <p>Veuillez corriger les erreurs suivantes :</p>\n                                <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                                    ${errorMessages}\n                                </div>\n                            </div>\n                        `,\n                        icon: 'error',\n                        confirmButtonText: 'Corriger'\n                    });\n                } else {\n                    // Pas d'erreurs de validation spécifiques, afficher le message d'erreur général\n                    await Swal.fire({\n                        title: 'Erreur',\n                        text: response.message || 'Erreur lors de la sauvegarde',\n                        icon: 'error',\n                        confirmButtonText: 'Fermer'\n                    });\n                }\n                \n                // Ne pas utiliser setError ici car on affiche déjà avec SweetAlert2\n            }\n        } catch (error) {\n            console.error('Error saving user:', error);\n            \n            // Gérer les différents types d'erreurs\n            let errorMessage = 'Erreur lors de la sauvegarde';\n            let errorDetails = '';\n            \n            if (error.response) {\n                // Erreur de réponse du serveur\n                const { status, data } = error.response;\n                \n                if (status === 422 && data.errors && Object.keys(data.errors).length > 0) {\n                    // Erreurs de validation Laravel\n                    const errorMessages = Object.entries(data.errors).map(([field, messages]) => {\n                        const fieldLabel = getFieldLabel(field);\n                        const message = Array.isArray(messages) ? messages[0] : messages;\n                        return `<strong>${fieldLabel}:</strong> ${message}`;\n                    }).join('<br>');\n                    \n                    await Swal.fire({\n                        title: 'Erreurs de validation',\n                        html: `\n                            <div class=\"text-left\">\n                                <p>Veuillez corriger les erreurs suivantes :</p>\n                                <div class=\"alert alert-danger mt-3\" style=\"text-align: left;\">\n                                    ${errorMessages}\n                                </div>\n                            </div>\n                        `,\n                        icon: 'error',\n                        confirmButtonText: 'Corriger'\n                    });\n                    return; // Ne pas afficher l'erreur générale\n                } else if (status === 409) {\n                    errorMessage = 'Conflit de données';\n                    errorDetails = data.message || 'Un utilisateur avec ces informations existe déjà.';\n                } else if (status === 500) {\n                    errorMessage = 'Erreur serveur';\n                    errorDetails = 'Une erreur interne s\\'est produite. Veuillez réessayer plus tard.';\n                } else {\n                    errorMessage = data.message || `Erreur ${status}`;\n                    errorDetails = data.error || 'Une erreur inattendue s\\'est produite.';\n                }\n            } else if (error.request) {\n                // Erreur de réseau\n                errorMessage = 'Erreur de connexion';\n                errorDetails = 'Impossible de joindre le serveur. Vérifiez votre connexion internet.';\n            } else {\n                // Autre erreur\n                errorMessage = 'Erreur inattendue';\n                errorDetails = error.message || 'Une erreur inattendue s\\'est produite.';\n            }\n            \n            // Afficher l'erreur avec SweetAlert2 pour plus de visibilité\n            await Swal.fire({\n                title: errorMessage,\n                text: errorDetails,\n                icon: 'error',\n                confirmButtonText: 'Fermer'\n            });\n            \n            setError(errorMessage);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleResetPassword = async (user) => {\n        const result = await Swal.fire({\n            title: 'Réinitialiser le mot de passe ?',\n            text: `Voulez-vous vraiment réinitialiser le mot de passe de ${user.name} ?`,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Oui, réinitialiser',\n            cancelButtonText: 'Annuler'\n        });\n\n        if (result.isConfirmed) {\n            try {\n                const response = await secureApiEndpoints.userManagement.resetPassword(user.id);\n                \n                if (response.success) {\n                    await Swal.fire({\n                        title: 'Mot de passe réinitialisé !',\n                        html: `\n                            <p>Le mot de passe de <strong>${user.name}</strong> a été réinitialisé.</p>\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Nouveau mot de passe :</strong><br>\n                                <code style=\"font-size: 1.2em;\">${response.data.new_password}</code><br>\n                                <small>Notez ce mot de passe car il ne sera plus affiché.</small>\n                            </div>\n                        `,\n                        icon: 'success',\n                        confirmButtonText: 'Compris'\n                    });\n                } else {\n                    Swal.fire('Erreur', response.message, 'error');\n                }\n            } catch (error) {\n                Swal.fire('Erreur', 'Erreur lors de la réinitialisation du mot de passe', 'error');\n            }\n        }\n    };\n\n    const handleToggleStatus = async (user) => {\n        try {\n            const response = await secureApiEndpoints.userManagement.toggleStatus(user.id);\n            \n            if (response.success) {\n                Swal.fire('Succès', response.message, 'success');\n                await loadData();\n            } else {\n                Swal.fire('Erreur', response.message, 'error');\n            }\n        } catch (error) {\n            Swal.fire('Erreur', 'Erreur lors du changement de statut', 'error');\n        }\n    };\n\n    const handleDelete = async (user) => {\n        const result = await Swal.fire({\n            title: 'Supprimer l\\'utilisateur ?',\n            text: `Voulez-vous vraiment supprimer ${user.name} ? Cette action est irréversible.`,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Oui, supprimer',\n            cancelButtonText: 'Annuler'\n        });\n\n        if (result.isConfirmed) {\n            try {\n                const response = await secureApiEndpoints.userManagement.delete(user.id);\n                \n                if (response.success) {\n                    Swal.fire('Supprimé !', response.message, 'success');\n                    await loadData();\n                } else {\n                    Swal.fire('Erreur', response.message, 'error');\n                }\n            } catch (error) {\n                Swal.fire('Erreur', 'Erreur lors de la suppression', 'error');\n            }\n        }\n    };\n\n    const handleGenerateProfessionalCard = async (user) => {\n        try {\n            setLoading(true);\n            \n            const pdfBlob = await secureApiEndpoints.userManagement.generateProfessionalCard(user.id);\n            \n            // Créer un lien de téléchargement\n            const url = window.URL.createObjectURL(pdfBlob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `carte_professionnelle_${user.name.replace(/\\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            link.remove();\n            window.URL.revokeObjectURL(url);\n            \n            await Swal.fire({\n                title: 'Carte générée !',\n                text: `La carte d'identité professionnelle de ${user.name} a été générée et téléchargée.`,\n                icon: 'success',\n                confirmButtonText: 'OK'\n            });\n            \n        } catch (error) {\n            console.error('Error generating professional card:', error);\n            await Swal.fire({\n                title: 'Erreur',\n                text: 'Erreur lors de la génération de la carte professionnelle: ' + error.message,\n                icon: 'error',\n                confirmButtonText: 'Fermer'\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n\n    const handlePrintBadge = async (user) => {\n        try {\n            setLoading(true);\n            \n            // Vérifier que l'utilisateur est un membre du personnel\n            if (!staffRoles.includes(user.role)) {\n                await Swal.fire({\n                    title: 'Information',\n                    text: 'L\\'impression de badges QR n\\'est disponible que pour les membres du personnel (enseignants, comptables, surveillants, etc.)',\n                    icon: 'info',\n                    confirmButtonText: 'Compris'\n                });\n                return;\n            }\n\n            // Utiliser l'API du StaffAttendanceController pour générer le badge\n            const response = await secureApiEndpoints.staff.downloadBadgePDF({\n                user_id: user.id\n            });\n\n            // Télécharger le PDF\n            const blob = await response.blob();\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.download = `badge_${user.name.replace(/\\s+/g, '_')}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(downloadUrl);\n            \n            await Swal.fire({\n                title: 'Badge généré !',\n                text: `Badge PDF téléchargé pour ${user.name}`,\n                icon: 'success',\n                timer: 2000,\n                showConfirmButton: false\n            });\n            \n        } catch (error) {\n            console.error('Error generating badge:', error);\n            await Swal.fire({\n                title: 'Erreur',\n                text: 'Erreur lors de la génération du badge: ' + (error.message || 'Une erreur inattendue s\\'est produite'),\n                icon: 'error',\n                confirmButtonText: 'Fermer'\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fonctions pour la sélection multiple\n    const handleSelectUser = (userId, isSelected) => {\n        if (isSelected) {\n            setSelectedUsers(prev => [...prev, userId]);\n        } else {\n            setSelectedUsers(prev => prev.filter(id => id !== userId));\n        }\n    };\n\n    const handleSelectAll = () => {\n        const eligibleUsers = filteredUsers.filter(user => staffRoles.includes(user.role));\n        \n        if (selectedUsers.length === eligibleUsers.length) {\n            // Tout désélectionner\n            setSelectedUsers([]);\n        } else {\n            // Tout sélectionner\n            setSelectedUsers(eligibleUsers.map(user => user.id));\n        }\n    };\n\n    const handlePrintMultipleBadges = async () => {\n        if (selectedUsers.length === 0) {\n            await Swal.fire({\n                title: 'Aucune sélection',\n                text: 'Veuillez sélectionner au moins un utilisateur pour imprimer les badges.',\n                icon: 'warning',\n                confirmButtonText: 'OK'\n            });\n            return;\n        }\n\n        const result = await Swal.fire({\n            title: 'Confirmer l\\'impression',\n            text: `Voulez-vous imprimer les badges de ${selectedUsers.length} utilisateur(s) sélectionné(s) ?`,\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Oui, imprimer',\n            cancelButtonText: 'Annuler'\n        });\n\n        if (!result.isConfirmed) return;\n\n        try {\n            setIsGeneratingMultipleBadges(true);\n\n            const response = await secureApiEndpoints.staff.generateMultipleBadges(selectedUsers);\n\n            // Télécharger le PDF\n            const blob = await response.blob();\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.download = `badges_multiples_${new Date().toISOString().split('T')[0]}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(downloadUrl);\n            \n            await Swal.fire({\n                title: 'Badges générés !',\n                text: `PDF avec ${selectedUsers.length} badge(s) téléchargé avec succès.`,\n                icon: 'success',\n                timer: 3000,\n                showConfirmButton: false\n            });\n\n            // Réinitialiser la sélection\n            setSelectedUsers([]);\n            \n        } catch (error) {\n            console.error('Error generating multiple badges:', error);\n            await Swal.fire({\n                title: 'Erreur',\n                text: 'Erreur lors de la génération des badges: ' + (error.message || 'Une erreur inattendue s\\'est produite'),\n                icon: 'error',\n                confirmButtonText: 'Fermer'\n            });\n        } finally {\n            setIsGeneratingMultipleBadges(false);\n        }\n    };\n\n    const handleImportAdministrativeStaff = async () => {\n        await Swal.fire({\n            title: 'Fonctionnalité non disponible',\n            text: 'L\\'import du personnel administratif sera disponible prochainement.',\n            icon: 'info',\n            confirmButtonText: 'OK'\n        });\n    };\n\n    const handleExportAdministrativeStaff = async () => {\n        const result = await Swal.fire({\n            title: 'Confirmer l\\'export',\n            text: 'Voulez-vous exporter la liste du personnel administratif en PDF ?',\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Oui, exporter',\n            cancelButtonText: 'Annuler'\n        });\n\n        if (!result.isConfirmed) return;\n\n        try {\n            const response = await secureApiEndpoints.userManagement.exportAdministrativeStaffPdf();\n\n            // Télécharger le PDF\n            const blob = await response;\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.download = `Fichier_Personnel_Administratif_${new Date().toISOString().split('T')[0]}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(downloadUrl);\n            \n            await Swal.fire({\n                title: 'Export réussi !',\n                text: 'Le fichier du personnel administratif a été téléchargé avec succès.',\n                icon: 'success',\n                timer: 3000,\n                showConfirmButton: false\n            });\n            \n        } catch (error) {\n            console.error('Error exporting administrative staff:', error);\n            await Swal.fire({\n                title: 'Erreur',\n                text: 'Erreur lors de l\\'export: ' + (error.message || 'Une erreur inattendue s\\'est produite'),\n                icon: 'error',\n                confirmButtonText: 'Fermer'\n            });\n        }\n    };\n\n    const renderStatsCards = () => (\n        <Row className=\"mb-4\">\n            <Col md={3}>\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <People size={40} className=\"text-primary mb-2\" />\n                        <h3>{stats.total_users}</h3>\n                        <p className=\"text-muted mb-0\">Total Utilisateurs</p>\n                    </Card.Body>\n                </Card>\n            </Col>\n            <Col md={3}>\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <PersonCheck size={40} className=\"text-success mb-2\" />\n                        <h3>{stats.active_users}</h3>\n                        <p className=\"text-muted mb-0\">Actifs</p>\n                    </Card.Body>\n                </Card>\n            </Col>\n            <Col md={3}>\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <PersonX size={40} className=\"text-warning mb-2\" />\n                        <h3>{stats.inactive_users}</h3>\n                        <p className=\"text-muted mb-0\">Inactifs</p>\n                    </Card.Body>\n                </Card>\n            </Col>\n            <Col md={3}>\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <PersonFill size={40} className=\"text-info mb-2\" />\n                        <h3>{stats.by_role?.teacher || 0}</h3>\n                        <p className=\"text-muted mb-0\">Enseignants</p>\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n    );\n\n    const renderUserModal = () => (\n        <Modal show={showModal} onHide={handleCloseModal} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {modalMode === 'create' && 'Créer un utilisateur'}\n                    {modalMode === 'edit' && 'Modifier l\\'utilisateur'}\n                    {modalMode === 'view' && 'Détails de l\\'utilisateur'}\n                </Modal.Title>\n            </Modal.Header>\n            <Form onSubmit={handleSubmit}>\n                <Modal.Body>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    \n                    <Row>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Nom complet *</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    value={formData.name}\n                                    onChange={(e) => setFormData({...formData, name: e.target.value})}\n                                    required\n                                    disabled={modalMode === 'view'}\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Email *</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    value={formData.email}\n                                    onChange={(e) => setFormData({...formData, email: e.target.value})}\n                                    required\n                                    disabled={modalMode === 'view'}\n                                />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Contact</Form.Label>\n                                <Form.Control\n                                    type=\"tel\"\n                                    value={formData.contact}\n                                    onChange={(e) => setFormData({...formData, contact: e.target.value})}\n                                    placeholder=\"Ex: +237 6XX XXX XXX\"\n                                    disabled={modalMode === 'view'}\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Photo</Form.Label>\n                                <div className=\"d-flex align-items-center gap-3\">\n                                    <Button \n                                        variant={formData.photo ? \"outline-success\" : \"outline-primary\"}\n                                        onClick={() => setShowPhotoCapture(true)}\n                                        disabled={modalMode === 'view'}\n                                    >\n                                        <i className={`bi bi-${formData.photo ? 'check-circle' : 'camera'} me-2`}></i>\n                                        {formData.photo ? 'Photo sélectionnée' : 'Choisir une photo'}\n                                    </Button>\n                                    {formData.photo && (\n                                        <img \n                                            src={formData.photo} \n                                            alt=\"Aperçu\"\n                                            style={{\n                                                width: '50px',\n                                                height: '50px',\n                                                borderRadius: '50%',\n                                                objectFit: 'cover',\n                                                border: '2px solid #28a745'\n                                            }}\n                                            onError={(e) => {\n                                                e.target.style.display = 'none';\n                                            }}\n                                        />\n                                    )}\n                                </div>\n                                {!formData.photo && (\n                                    <Form.Text className=\"text-muted\">\n                                        Optionnel - Prenez une photo avec la caméra ou sélectionnez un fichier\n                                    </Form.Text>\n                                )}\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Rôle *</Form.Label>\n                                <Form.Select\n                                    value={formData.role}\n                                    onChange={(e) => setFormData({...formData, role: e.target.value})}\n                                    required\n                                    disabled={modalMode === 'view'}\n                                >\n                                    <optgroup label=\"Rôles administratifs principaux\">\n                                        <option value=\"principal\">Principal</option>\n                                        <option value=\"surveillant_general\">Surveillant Général</option>\n                                        <option value=\"general_accountant\">Comptable Général</option>\n                                        <option value=\"comptable_superieur\">Comptable Supérieur</option>\n                                        <option value=\"accountant\">Comptable</option>\n                                        <option value=\"secretaire\">Secrétaire</option>\n                                        <option value=\"user\">Utilisateur</option>\n                                        <option value=\"bibliothecaire\">Bibliothécaire</option>\n                                    </optgroup>\n                                    <optgroup label=\"Nouveaux rôles\">\n                                        <option value=\"responsable_pedagogique\">Responsable Pédagogique</option>\n                                        <option value=\"dean_of_studies\">Dean of Studies</option>\n                                        <option value=\"censeur_esg\">Censeur ESG</option>\n                                        <option value=\"censeur\">Censeur</option>\n                                        <option value=\"surveillant_secteur\">Surveillant de Secteur</option>\n                                        <option value=\"caissiere\">Caissière</option>\n                                        <option value=\"bibliothecaire\">Bibliothécaire</option>\n                                        <option value=\"chef_travaux\">Chef des Travaux</option>\n                                        <option value=\"chef_securite\">Chef de Sécurité</option>\n                                        <option value=\"reprographe\">Reprographe</option>\n                                    </optgroup>\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Qualification</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Ex: BAC, BTS, Licence, Maîtrise...\"\n                                    value={formData.qualification}\n                                    onChange={(e) => setFormData({...formData, qualification: e.target.value})}\n                                    disabled={modalMode === 'view'}\n                                />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Statut</Form.Label>\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"is_active\"\n                                    label={formData.is_active ? \"Actif\" : \"Inactif\"}\n                                    checked={formData.is_active}\n                                    onChange={(e) => setFormData({...formData, is_active: e.target.checked})}\n                                    disabled={modalMode === 'view'}\n                                />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    {modalMode === 'create' && (\n                        <Form.Group className=\"mb-3\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                id=\"generate_password\"\n                                label=\"Générer automatiquement un mot de passe\"\n                                checked={formData.generate_password}\n                                onChange={(e) => setFormData({...formData, generate_password: e.target.checked})}\n                            />\n                        </Form.Group>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>\n                        Annuler\n                    </Button>\n                    {modalMode !== 'view' && (\n                        <Button \n                            variant=\"primary\" \n                            type=\"submit\" \n                            disabled={loading}\n                        >\n                            {loading ? (\n                                <>\n                                    <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                                    Sauvegarde...\n                                </>\n                            ) : (\n                                modalMode === 'create' ? 'Créer' : 'Modifier'\n                            )}\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n\n    return (\n        <Container fluid className=\"py-4\">\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h2>\n                                <People className=\"me-3\" />\n                                Gestion des Utilisateurs\n                            </h2>\n                            <p className=\"text-muted\">\n                                Gérer les comptes des surveillants généraux, comptables et secrétaires (enseignants créés via gestion des utilisateurs)\n                            </p>\n                        </div>\n                        <ButtonGroup>\n                            <Button\n                                variant=\"success\"\n                                onClick={handleExportAdministrativeStaff}\n                                className=\"d-flex align-items-center\"\n                                title=\"Exporter le personnel administratif\"\n                            >\n                                <FileEarmarkPdf className=\"me-2\" />\n                                Export Personnel Admin\n                            </Button>\n                            <Button\n                                variant=\"info\"\n                                onClick={handleImportAdministrativeStaff}\n                                className=\"d-flex align-items-center\"\n                                title=\"Importer le personnel administratif\"\n                            >\n                                <Upload className=\"me-2\" />\n                                Import Personnel Admin\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                onClick={() => handleShowModal('create')}\n                                className=\"d-flex align-items-center\"\n                            >\n                                <PersonPlus className=\"me-2\" />\n                                Nouvel Utilisateur\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Col>\n            </Row>\n\n            {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                    {error}\n                </Alert>\n            )}\n\n            {renderStatsCards()}\n\n            {/* Barre de recherche et filtres */}\n            <Card className=\"mb-4\">\n                <Card.Body>\n                    <Row>\n                        <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Rechercher</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Nom, email, contact ou rôle...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Filtrer par rôle</Form.Label>\n                                <Form.Select\n                                    value={roleFilter}\n                                    onChange={(e) => setRoleFilter(e.target.value)}\n                                >\n                                    <option value=\"all\">Tous les rôles</option>\n                                    <optgroup label=\"Rôles principaux\">\n                                        <option value=\"surveillant_general\">Surveillants Généraux</option>\n                                        <option value=\"general_accountant\">Comptables Généraux</option>\n                                        <option value=\"comptable_superieur\">Comptables Supérieurs</option>\n                                        <option value=\"comptable\">Comptables</option>\n                                        <option value=\"secretaire\">Secrétaires</option>\n                                        <option value=\"enseignant\">Enseignants</option>\n                                        <option value=\"teacher\">Enseignants (anciens)</option>\n                                        <option value=\"accountant\">Comptables (anciens)</option>\n                                    </optgroup>\n                                    <optgroup label=\"Nouveaux rôles\">\n                                        <option value=\"responsable_pedagogique\">Responsables Pédagogiques</option>\n                                        <option value=\"dean_of_studies\">Dean of Studies</option>\n                                        <option value=\"censeur_esg\">Censeurs ESG</option>\n                                        <option value=\"censeur\">Censeurs</option>\n                                        <option value=\"surveillant_secteur\">Surveillants de Secteur</option>\n                                        <option value=\"caissiere\">Caissières</option>\n                                        <option value=\"bibliothecaire\">Bibliothécaires</option>\n                                        <option value=\"chef_travaux\">Chefs des Travaux</option>\n                                        <option value=\"chef_securite\">Chefs de Sécurité</option>\n                                        <option value=\"reprographe\">Reprographes</option>\n                                    </optgroup>\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Filtrer par statut</Form.Label>\n                                <Form.Select\n                                    value={statusFilter}\n                                    onChange={(e) => setStatusFilter(e.target.value)}\n                                >\n                                    <option value=\"all\">Tous</option>\n                                    <option value=\"active\">Actifs</option>\n                                    <option value=\"inactive\">Inactifs</option>\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div className=\"d-flex align-items-center gap-3\">\n                            <small className=\"text-muted\">\n                                {filteredUsers.length} utilisateur(s) trouvé(s) sur {users.length} total\n                            </small>\n                            {selectedUsers.length > 0 && (\n                                <Badge bg=\"primary\" className=\"d-flex align-items-center gap-1\">\n                                    <i className=\"bi bi-check-square\"></i>\n                                    {selectedUsers.length} sélectionné(s)\n                                </Badge>\n                            )}\n                        </div>\n                        <div className=\"d-flex gap-2\">\n                            {/* Boutons de sélection multiple */}\n                            {(() => {\n                                const eligibleUsers = filteredUsers.filter(user => staffRoles.includes(user.role));\n                                \n                                if (eligibleUsers.length > 0) {\n                                    return (\n                                        <>\n                                            <Button\n                                                variant=\"outline-info\"\n                                                size=\"sm\"\n                                                onClick={handleSelectAll}\n                                                className=\"d-flex align-items-center gap-1\"\n                                            >\n                                                <i className={`bi bi-${selectedUsers.length === eligibleUsers.length ? 'square' : 'check-square'}`}></i>\n                                                {selectedUsers.length === eligibleUsers.length ? 'Tout désélectionner' : 'Tout sélectionner'}\n                                            </Button>\n                                            {selectedUsers.length > 0 && (\n                                                <Button\n                                                    variant=\"success\"\n                                                    size=\"sm\"\n                                                    onClick={handlePrintMultipleBadges}\n                                                    disabled={isGeneratingMultipleBadges}\n                                                    className=\"d-flex align-items-center gap-1\"\n                                                >\n                                                    {isGeneratingMultipleBadges ? (\n                                                        <>\n                                                            <Spinner animation=\"border\" size=\"sm\" />\n                                                            Génération...\n                                                        </>\n                                                    ) : (\n                                                        <>\n                                                            <PrinterFill />\n                                                            Imprimer badges ({selectedUsers.length})\n                                                        </>\n                                                    )}\n                                                </Button>\n                                            )}\n                                        </>\n                                    );\n                                }\n                                return null;\n                            })()}\n                            \n                            <Button\n                                variant=\"outline-secondary\"\n                                size=\"sm\"\n                                onClick={() => {\n                                    setSearchTerm('');\n                                    setRoleFilter('all');\n                                    setStatusFilter('all');\n                                    setSelectedUsers([]);\n                                }}\n                            >\n                                Réinitialiser les filtres\n                            </Button>\n                        </div>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <Card>\n                <Card.Header>\n                    <h5 className=\"mb-0\">Liste des Utilisateurs</h5>\n                </Card.Header>\n                <Card.Body>\n                    {loading ? (\n                        <div className=\"text-center py-4\">\n                            <Spinner animation=\"border\" />\n                        </div>\n                    ) : (\n                        <Table responsive hover>\n                            <thead>\n                                <tr>\n                                    <th style={{ width: '40px' }}>\n                                        {(() => {\n                                            const eligibleUsers = filteredUsers.filter(user => staffRoles.includes(user.role));\n                                            \n                                            if (eligibleUsers.length > 0) {\n                                                return (\n                                                    <Form.Check\n                                                        type=\"checkbox\"\n                                                        checked={selectedUsers.length === eligibleUsers.length && eligibleUsers.length > 0}\n                                                        onChange={handleSelectAll}\n                                                        title=\"Sélectionner/Désélectionner tout\"\n                                                    />\n                                                );\n                                            }\n                                            return null;\n                                        })()}\n                                    </th>\n                                    <th>Photo</th>\n                                    <th>Nom</th>\n                                    <th>Email</th>\n                                    <th>Contact</th>\n                                    <th>Rôle</th>\n                                    <th>Qualification</th>\n                                    <th>Statut</th>\n                                    <th>Date de création</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredUsers.map(user => {\n                                    const isStaff = staffRoles.includes(user.role);\n                                    const isSelected = selectedUsers.includes(user.id);\n                                    \n                                    return (\n                                        <tr key={user.id}>\n                                            <td style={{ textAlign: 'center' }}>\n                                                {isStaff ? (\n                                                    <Form.Check\n                                                        type=\"checkbox\"\n                                                        checked={isSelected}\n                                                        onChange={(e) => handleSelectUser(user.id, e.target.checked)}\n                                                        title={`Sélectionner ${user.name}`}\n                                                    />\n                                                ) : (\n                                                    <span \n                                                        style={{ \n                                                            color: '#6c757d', \n                                                            fontSize: '12px',\n                                                            cursor: 'help'\n                                                        }}\n                                                        title=\"Non éligible pour l'impression de badges\"\n                                                    >\n                                                        N/A\n                                                    </span>\n                                                )}\n                                            </td>\n                                            <td style={{ textAlign: 'center' }}>\n                                                {getUserAvatar(user, 35)}\n                                            </td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.contact || '-'}</td>\n                                        <td>\n                                            <Badge bg={roleColors[user.role]}>\n                                                {roleLabels[user.role]}\n                                            </Badge>\n                                        </td>\n                                        <td>{user.qualification || '-'}</td>\n                                        <td>\n                                            <Badge bg={user.is_active ? 'success' : 'secondary'}>\n                                                {user.is_active ? 'Actif' : 'Inactif'}\n                                            </Badge>\n                                        </td>\n                                        <td>\n                                            {new Date(user.created_at).toLocaleDateString('fr-FR')}\n                                        </td>\n                                        <td>\n                                            <Dropdown as={ButtonGroup}>\n                                                <Button\n                                                    variant=\"outline-primary\"\n                                                    size=\"sm\"\n                                                    onClick={() => handleShowModal('view', user)}\n                                                >\n                                                    <EyeFill />\n                                                </Button>\n                                                <Dropdown.Toggle \n                                                    split \n                                                    variant=\"outline-primary\" \n                                                    size=\"sm\"\n                                                />\n                                                <Dropdown.Menu>\n                                                    <Dropdown.Item \n                                                        onClick={() => handleShowModal('edit', user)}\n                                                    >\n                                                        <PencilSquare className=\"me-2\" />\n                                                        Modifier\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item \n                                                        onClick={() => handleResetPassword(user)}\n                                                    >\n                                                        <Key className=\"me-2\" />\n                                                        Réinitialiser mot de passe\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item \n                                                        onClick={() => handleToggleStatus(user)}\n                                                    >\n                                                        {user.is_active ? <PersonX className=\"me-2\" /> : <PersonCheck className=\"me-2\" />}\n                                                        {user.is_active ? 'Désactiver' : 'Activer'}\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Divider />\n                                                    {/* <Dropdown.Item \n                                                        onClick={() => handleShowQRCode(user)}\n                                                        className=\"text-info\"\n                                                    >\n                                                        <QrCode className=\"me-2\" />\n                                                        Voir code QR\n                                                    </Dropdown.Item>\n                                                    <Dropdown.Item \n                                                        onClick={() => handleGenerateProfessionalCard(user)}\n                                                        className=\"text-success\"\n                                                    >\n                                                        <CreditCard2Back className=\"me-2\" />\n                                                        Générer carte professionnelle\n                                                    </Dropdown.Item> */}\n                                                    <Dropdown.Item \n                                                        onClick={() => handlePrintBadge(user)}\n                                                        className=\"text-primary\"\n                                                    >\n                                                        <PrinterFill className=\"me-2\" />\n                                                        Imprimer badge QR\n                                                    </Dropdown.Item>\n                                                    {user.role !== 'admin' && (\n                                                        <>\n                                                            <Dropdown.Divider />\n                                                            <Dropdown.Item \n                                                                className=\"text-danger\"\n                                                                onClick={() => handleDelete(user)}\n                                                            >\n                                                                <Trash className=\"me-2\" />\n                                                                Supprimer\n                                                            </Dropdown.Item>\n                                                        </>\n                                                    )}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </td>\n                                    </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    )}\n                </Card.Body>\n            </Card>\n\n            {renderUserModal()}\n            \n            {/* Modal QR Code Preview */}\n            <Modal show={showQRModal} onHide={() => setShowQRModal(false)} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <QrCode className=\"me-2\" />\n                        Code QR - {selectedUserQR?.user_name}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"text-center\">\n                    {selectedUserQR && (\n                        <>\n                            <div className=\"mb-3\">\n                                <img \n                                    src={selectedUserQR.qr_url} \n                                    alt=\"QR Code\" \n                                    style={{ \n                                        width: '200px', \n                                        height: '200px',\n                                        border: '2px solid #dee2e6',\n                                        borderRadius: '8px'\n                                    }}\n                                />\n                            </div>\n                            <div className=\"mb-3\">\n                                <h6>Informations du QR Code</h6>\n                                <div className=\"text-start\">\n                                    <p><strong>Nom:</strong> {selectedUserQR.user_name}</p>\n                                    <p><strong>Rôle:</strong> {roleLabels[selectedUserQR.user_role] || selectedUserQR.user_role}</p>\n                                    <p><strong>Code:</strong> <code>{selectedUserQR.qr_content}</code></p>\n                                </div>\n                            </div>\n                            <Alert variant=\"info\" className=\"text-start\">\n                                <small>\n                                    <strong>Note:</strong> Ce code QR est unique pour cet utilisateur et peut être utilisé \n                                    pour l'identification et l'authentification dans le système.\n                                </small>\n                            </Alert>\n                        </>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowQRModal(false)}>\n                        Fermer\n                    </Button>\n                    {selectedUserQR && (\n                        <Button \n                            variant=\"success\" \n                            onClick={() => {\n                                setShowQRModal(false);\n                                handleGenerateProfessionalCard({\n                                    id: selectedUserQR.user_id,\n                                    name: selectedUserQR.user_name\n                                });\n                            }}\n                        >\n                            <CreditCard2Back className=\"me-2\" />\n                            Générer la carte\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n            \n            <PhotoCapture\n                show={showPhotoCapture}\n                onHide={() => setShowPhotoCapture(false)}\n                onPhotoSelected={handlePhotoSelected}\n            />\n        </Container>\n    );\n};\n\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}