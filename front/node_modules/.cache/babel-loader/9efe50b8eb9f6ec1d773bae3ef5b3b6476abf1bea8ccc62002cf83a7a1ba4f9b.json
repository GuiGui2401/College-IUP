{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{useAuth as useAuthContext}from'../contexts/AuthContext';import{tokenManager}from'../utils/tokenManager';/**\n * Hook principal pour l'authentification\n * Expose toutes les fonctionnalités du contexte d'authentification\n */export const useAuth=()=>{return useAuthContext();};/**\n * Hook pour la gestion du login avec état local\n */export const useLogin=()=>{const{login,isLoading,error,clearError}=useAuth();const[loginState,setLoginState]=useState({isSubmitting:false,error:null,success:false});const handleLogin=useCallback(async function(credentials){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};setLoginState({isSubmitting:true,error:null,success:false});clearError();try{const result=await login(credentials);setLoginState({isSubmitting:false,error:null,success:true});// Callback de succès optionnel\nif(options.onSuccess){options.onSuccess(result);}return result;}catch(error){const errorMessage=error.message||'Erreur de connexion';setLoginState({isSubmitting:false,error:errorMessage,success:false});// Callback d'erreur optionnel\nif(options.onError){options.onError(error);}throw error;}},[login,clearError]);const resetLoginState=useCallback(()=>{setLoginState({isSubmitting:false,error:null,success:false});clearError();},[clearError]);return{handleLogin,resetLoginState,isSubmitting:loginState.isSubmitting||isLoading,error:loginState.error||error,success:loginState.success};};/**\n * Hook pour les permissions et rôles\n */export const usePermissions=()=>{const{user,hasRole,hasAnyRole}=useAuth();const isAdmin=useCallback(()=>hasRole('admin'),[hasRole]);const isTeacher=useCallback(()=>hasRole('teacher'),[hasRole]);const isAccountant=useCallback(()=>hasRole('accountant')||hasRole('comptable_superieur'),[hasRole]);const isUser=useCallback(()=>hasRole('user'),[hasRole]);const canAccess=useCallback(requiredRoles=>{if(!requiredRoles||requiredRoles.length===0)return true;return hasAnyRole(requiredRoles);},[hasAnyRole]);const canManageUsers=useCallback(()=>{return hasAnyRole(['admin']);},[hasAnyRole]);const canManageStudents=useCallback(()=>{return hasAnyRole(['admin','teacher']);},[hasAnyRole]);const canManageFinances=useCallback(()=>{return hasAnyRole(['admin','accountant','comptable_superieur']);},[hasAnyRole]);const canViewReports=useCallback(()=>{return hasAnyRole(['admin','teacher','accountant','comptable_superieur']);},[hasAnyRole]);const canManageNeeds=useCallback(()=>{return hasAnyRole(['admin','comptable_superieur']);},[hasAnyRole]);const canManageInventory=useCallback(()=>{return hasAnyRole(['admin','accountant','comptable_superieur']);},[hasAnyRole]);return{user,userRole:user===null||user===void 0?void 0:user.role,isAdmin,isTeacher,isAccountant,isUser,canAccess,canManageUsers,canManageStudents,canManageFinances,canViewReports,canManageNeeds,canManageInventory};};/**\n * Hook pour surveiller l'état du token\n */export const useTokenStatus=()=>{const{token}=useAuth();const[tokenInfo,setTokenInfo]=useState(null);useEffect(()=>{if(!token){setTokenInfo(null);return;}const updateTokenInfo=()=>{const info=tokenManager.getTokenInfo(token);setTokenInfo(info);};updateTokenInfo();// Mettre à jour toutes les 30 secondes\nconst interval=setInterval(updateTokenInfo,30000);return()=>clearInterval(interval);},[token]);return{tokenInfo,isTokenExpired:(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.isExpired)||false,timeUntilExpiry:(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.timeUntilExpiry)||0,isTokenValid:(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.isValid)||false};};/**\n * Hook pour la déconnexion avec nettoyage\n */export const useLogout=()=>{const{logout}=useAuth();const[isLoggingOut,setIsLoggingOut]=useState(false);const handleLogout=useCallback(async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setIsLoggingOut(true);try{await logout();// Nettoyage supplémentaire si nécessaire\nif(options.clearCache){// Nettoyer le cache local, cookies, etc.\nif('caches'in window){const cacheNames=await caches.keys();await Promise.all(cacheNames.map(cacheName=>caches.delete(cacheName)));}}// Callback de succès optionnel\nif(options.onSuccess){options.onSuccess();}}catch(error){console.error('Erreur lors de la déconnexion:',error);// Callback d'erreur optionnel\nif(options.onError){options.onError(error);}}finally{setIsLoggingOut(false);}},[logout]);return{handleLogout,isLoggingOut};};/**\n * Hook pour la redirection basée sur l'authentification\n */export const useAuthRedirect=function(){let redirectPath=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'/login';let dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const{isAuthenticated,isLoading}=useAuth();const[shouldRedirect,setShouldRedirect]=useState(false);useEffect(()=>{if(!isLoading&&!isAuthenticated){setShouldRedirect(true);}else{setShouldRedirect(false);}},[isAuthenticated,isLoading,...dependencies]);return{shouldRedirect,redirectPath,isReady:!isLoading};};/**\n * Hook pour les notifications d'authentification\n */export const useAuthNotifications=()=>{const{error,clearError}=useAuth();const[notifications,setNotifications]=useState([]);useEffect(()=>{if(error){const notification={id:Date.now(),type:'error',title:'Erreur d\\'authentification',message:error,timestamp:new Date()};setNotifications(prev=>[notification,...prev].slice(0,5));// Garder max 5 notifications\n}},[error]);const dismissNotification=useCallback(id=>{setNotifications(prev=>prev.filter(notif=>notif.id!==id));},[]);const clearAllNotifications=useCallback(()=>{setNotifications([]);clearError();},[clearError]);return{notifications,dismissNotification,clearAllNotifications,hasNotifications:notifications.length>0};};/**\n * Hook pour persister l'état d'authentification\n */export const useAuthPersistence=()=>{const{isAuthenticated,user}=useAuth();const[preference,setPreference]=useState(()=>{try{return localStorage.getItem('auth_persistence_preference')==='true';}catch{return false;}});const updatePersistencePreference=useCallback(persist=>{setPreference(persist);try{localStorage.setItem('auth_persistence_preference',persist.toString());}catch(error){console.error('Erreur lors de la sauvegarde de la préférence:',error);}},[]);useEffect(()=>{if(isAuthenticated&&user){// Sauvegarder l'état selon la préférence\nconst storage=preference?localStorage:sessionStorage;try{storage.setItem('last_auth_state',JSON.stringify({timestamp:Date.now(),userId:user.id,username:user.username}));}catch(error){console.error('Erreur lors de la sauvegarde de l\\'état:',error);}}},[isAuthenticated,user,preference]);return{persistenceEnabled:preference,updatePersistencePreference};};/**\n * Hook pour l'authentification automatique (auto-login)\n */export const useAutoAuth=()=>{const{getCurrentUser,isLoading}=useAuth();const[autoAuthAttempted,setAutoAuthAttempted]=useState(false);useEffect(()=>{const attemptAutoAuth=async()=>{if(autoAuthAttempted||isLoading)return;const token=tokenManager.getToken();if(token&&!tokenManager.isTokenExpired(token)){try{await getCurrentUser();}catch(error){console.error('Échec de l\\'authentification automatique:',error);tokenManager.removeToken();}}setAutoAuthAttempted(true);};attemptAutoAuth();},[getCurrentUser,isLoading,autoAuthAttempted]);return{autoAuthCompleted:autoAuthAttempted,isInitializing:!autoAuthAttempted&&isLoading};};","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","useAuthContext","tokenManager","useLogin","login","isLoading","error","clearError","loginState","setLoginState","isSubmitting","success","handleLogin","credentials","options","arguments","length","undefined","result","onSuccess","errorMessage","message","onError","resetLoginState","usePermissions","user","hasRole","hasAnyRole","isAdmin","isTeacher","isAccountant","isUser","canAccess","requiredRoles","canManageUsers","canManageStudents","canManageFinances","canViewReports","canManageNeeds","canManageInventory","userRole","role","useTokenStatus","token","tokenInfo","setTokenInfo","updateTokenInfo","info","getTokenInfo","interval","setInterval","clearInterval","isTokenExpired","isExpired","timeUntilExpiry","isTokenValid","isValid","useLogout","logout","isLoggingOut","setIsLoggingOut","handleLogout","clearCache","window","cacheNames","caches","keys","Promise","all","map","cacheName","delete","console","useAuthRedirect","redirectPath","dependencies","isAuthenticated","shouldRedirect","setShouldRedirect","isReady","useAuthNotifications","notifications","setNotifications","notification","id","Date","now","type","title","timestamp","prev","slice","dismissNotification","filter","notif","clearAllNotifications","hasNotifications","useAuthPersistence","preference","setPreference","localStorage","getItem","updatePersistencePreference","persist","setItem","toString","storage","sessionStorage","JSON","stringify","userId","username","persistenceEnabled","useAutoAuth","getCurrentUser","autoAuthAttempted","setAutoAuthAttempted","attemptAutoAuth","getToken","removeToken","autoAuthCompleted","isInitializing"],"sources":["/var/www/College-IUP/front/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useAuth as useAuthContext } from '../contexts/AuthContext';\nimport { tokenManager } from '../utils/tokenManager';\n\n/**\n * Hook principal pour l'authentification\n * Expose toutes les fonctionnalités du contexte d'authentification\n */\nexport const useAuth = () => {\n    return useAuthContext();\n};\n\n/**\n * Hook pour la gestion du login avec état local\n */\nexport const useLogin = () => {\n    const { login, isLoading, error, clearError } = useAuth();\n    const [loginState, setLoginState] = useState({\n        isSubmitting: false,\n        error: null,\n        success: false\n    });\n\n    const handleLogin = useCallback(async (credentials, options = {}) => {\n        setLoginState({ isSubmitting: true, error: null, success: false });\n        clearError();\n\n        try {\n            const result = await login(credentials);\n            setLoginState({ isSubmitting: false, error: null, success: true });\n            \n            // Callback de succès optionnel\n            if (options.onSuccess) {\n                options.onSuccess(result);\n            }\n            \n            return result;\n        } catch (error) {\n            const errorMessage = error.message || 'Erreur de connexion';\n            setLoginState({ isSubmitting: false, error: errorMessage, success: false });\n            \n            // Callback d'erreur optionnel\n            if (options.onError) {\n                options.onError(error);\n            }\n            \n            throw error;\n        }\n    }, [login, clearError]);\n\n    const resetLoginState = useCallback(() => {\n        setLoginState({ isSubmitting: false, error: null, success: false });\n        clearError();\n    }, [clearError]);\n\n    return {\n        handleLogin,\n        resetLoginState,\n        isSubmitting: loginState.isSubmitting || isLoading,\n        error: loginState.error || error,\n        success: loginState.success\n    };\n};\n\n/**\n * Hook pour les permissions et rôles\n */\nexport const usePermissions = () => {\n    const { user, hasRole, hasAnyRole } = useAuth();\n\n    const isAdmin = useCallback(() => hasRole('admin'), [hasRole]);\n    const isTeacher = useCallback(() => hasRole('teacher'), [hasRole]);\n    const isAccountant = useCallback(() => hasRole('accountant') || hasRole('comptable_superieur'), [hasRole]);\n    const isUser = useCallback(() => hasRole('user'), [hasRole]);\n\n    const canAccess = useCallback((requiredRoles) => {\n        if (!requiredRoles || requiredRoles.length === 0) return true;\n        return hasAnyRole(requiredRoles);\n    }, [hasAnyRole]);\n\n    const canManageUsers = useCallback(() => {\n        return hasAnyRole(['admin']);\n    }, [hasAnyRole]);\n\n    const canManageStudents = useCallback(() => {\n        return hasAnyRole(['admin', 'teacher']);\n    }, [hasAnyRole]);\n\n    const canManageFinances = useCallback(() => {\n        return hasAnyRole(['admin', 'accountant', 'comptable_superieur']);\n    }, [hasAnyRole]);\n\n    const canViewReports = useCallback(() => {\n        return hasAnyRole(['admin', 'teacher', 'accountant', 'comptable_superieur']);\n    }, [hasAnyRole]);\n\n    const canManageNeeds = useCallback(() => {\n        return hasAnyRole(['admin', 'comptable_superieur']);\n    }, [hasAnyRole]);\n\n    const canManageInventory = useCallback(() => {\n        return hasAnyRole(['admin', 'accountant', 'comptable_superieur']);\n    }, [hasAnyRole]);\n\n    return {\n        user,\n        userRole: user?.role,\n        isAdmin,\n        isTeacher,\n        isAccountant,\n        isUser,\n        canAccess,\n        canManageUsers,\n        canManageStudents,\n        canManageFinances,\n        canViewReports,\n        canManageNeeds,\n        canManageInventory\n    };\n};\n\n/**\n * Hook pour surveiller l'état du token\n */\nexport const useTokenStatus = () => {\n    const { token } = useAuth();\n    const [tokenInfo, setTokenInfo] = useState(null);\n\n    useEffect(() => {\n        if (!token) {\n            setTokenInfo(null);\n            return;\n        }\n\n        const updateTokenInfo = () => {\n            const info = tokenManager.getTokenInfo(token);\n            setTokenInfo(info);\n        };\n\n        updateTokenInfo();\n\n        // Mettre à jour toutes les 30 secondes\n        const interval = setInterval(updateTokenInfo, 30000);\n\n        return () => clearInterval(interval);\n    }, [token]);\n\n    return {\n        tokenInfo,\n        isTokenExpired: tokenInfo?.isExpired || false,\n        timeUntilExpiry: tokenInfo?.timeUntilExpiry || 0,\n        isTokenValid: tokenInfo?.isValid || false\n    };\n};\n\n/**\n * Hook pour la déconnexion avec nettoyage\n */\nexport const useLogout = () => {\n    const { logout } = useAuth();\n    const [isLoggingOut, setIsLoggingOut] = useState(false);\n\n    const handleLogout = useCallback(async (options = {}) => {\n        setIsLoggingOut(true);\n\n        try {\n            await logout();\n            \n            // Nettoyage supplémentaire si nécessaire\n            if (options.clearCache) {\n                // Nettoyer le cache local, cookies, etc.\n                if ('caches' in window) {\n                    const cacheNames = await caches.keys();\n                    await Promise.all(\n                        cacheNames.map(cacheName => caches.delete(cacheName))\n                    );\n                }\n            }\n\n            // Callback de succès optionnel\n            if (options.onSuccess) {\n                options.onSuccess();\n            }\n        } catch (error) {\n            console.error('Erreur lors de la déconnexion:', error);\n            \n            // Callback d'erreur optionnel\n            if (options.onError) {\n                options.onError(error);\n            }\n        } finally {\n            setIsLoggingOut(false);\n        }\n    }, [logout]);\n\n    return {\n        handleLogout,\n        isLoggingOut\n    };\n};\n\n/**\n * Hook pour la redirection basée sur l'authentification\n */\nexport const useAuthRedirect = (redirectPath = '/login', dependencies = []) => {\n    const { isAuthenticated, isLoading } = useAuth();\n    const [shouldRedirect, setShouldRedirect] = useState(false);\n\n    useEffect(() => {\n        if (!isLoading && !isAuthenticated) {\n            setShouldRedirect(true);\n        } else {\n            setShouldRedirect(false);\n        }\n    }, [isAuthenticated, isLoading, ...dependencies]);\n\n    return {\n        shouldRedirect,\n        redirectPath,\n        isReady: !isLoading\n    };\n};\n\n/**\n * Hook pour les notifications d'authentification\n */\nexport const useAuthNotifications = () => {\n    const { error, clearError } = useAuth();\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        if (error) {\n            const notification = {\n                id: Date.now(),\n                type: 'error',\n                title: 'Erreur d\\'authentification',\n                message: error,\n                timestamp: new Date()\n            };\n\n            setNotifications(prev => [notification, ...prev].slice(0, 5)); // Garder max 5 notifications\n        }\n    }, [error]);\n\n    const dismissNotification = useCallback((id) => {\n        setNotifications(prev => prev.filter(notif => notif.id !== id));\n    }, []);\n\n    const clearAllNotifications = useCallback(() => {\n        setNotifications([]);\n        clearError();\n    }, [clearError]);\n\n    return {\n        notifications,\n        dismissNotification,\n        clearAllNotifications,\n        hasNotifications: notifications.length > 0\n    };\n};\n\n/**\n * Hook pour persister l'état d'authentification\n */\nexport const useAuthPersistence = () => {\n    const { isAuthenticated, user } = useAuth();\n    const [preference, setPreference] = useState(() => {\n        try {\n            return localStorage.getItem('auth_persistence_preference') === 'true';\n        } catch {\n            return false;\n        }\n    });\n\n    const updatePersistencePreference = useCallback((persist) => {\n        setPreference(persist);\n        try {\n            localStorage.setItem('auth_persistence_preference', persist.toString());\n        } catch (error) {\n            console.error('Erreur lors de la sauvegarde de la préférence:', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (isAuthenticated && user) {\n            // Sauvegarder l'état selon la préférence\n            const storage = preference ? localStorage : sessionStorage;\n            try {\n                storage.setItem('last_auth_state', JSON.stringify({\n                    timestamp: Date.now(),\n                    userId: user.id,\n                    username: user.username\n                }));\n            } catch (error) {\n                console.error('Erreur lors de la sauvegarde de l\\'état:', error);\n            }\n        }\n    }, [isAuthenticated, user, preference]);\n\n    return {\n        persistenceEnabled: preference,\n        updatePersistencePreference\n    };\n};\n\n/**\n * Hook pour l'authentification automatique (auto-login)\n */\nexport const useAutoAuth = () => {\n    const { getCurrentUser, isLoading } = useAuth();\n    const [autoAuthAttempted, setAutoAuthAttempted] = useState(false);\n\n    useEffect(() => {\n        const attemptAutoAuth = async () => {\n            if (autoAuthAttempted || isLoading) return;\n\n            const token = tokenManager.getToken();\n            if (token && !tokenManager.isTokenExpired(token)) {\n                try {\n                    await getCurrentUser();\n                } catch (error) {\n                    console.error('Échec de l\\'authentification automatique:', error);\n                    tokenManager.removeToken();\n                }\n            }\n            \n            setAutoAuthAttempted(true);\n        };\n\n        attemptAutoAuth();\n    }, [getCurrentUser, isLoading, autoAuthAttempted]);\n\n    return {\n        autoAuthCompleted: autoAuthAttempted,\n        isInitializing: !autoAuthAttempted && isLoading\n    };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}