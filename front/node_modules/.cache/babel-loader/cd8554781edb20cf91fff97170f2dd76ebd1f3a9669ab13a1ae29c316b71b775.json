{"ast":null,"code":"import React,{useState}from'react';import{Modal,Button,Form,Alert,ProgressBar,Row,Col}from'react-bootstrap';import{Download,Upload,FileText,FileSpreadsheet,FilePdf}from'react-bootstrap-icons';import{api}from'../utils/api';import{authService}from'../services/authService';import{host}from'../utils/fetch';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ImportExportModal=_ref=>{let{show,onHide,title,apiBasePath,onImportSuccess,filters={},templateFileName=\"template.csv\",seriesId=null// Nouveau paramètre pour l'ID de série\n}=_ref;const[activeTab,setActiveTab]=useState('export');const[exportFormat,setExportFormat]=useState('excel');const[importFile,setImportFile]=useState(null);const[isLoading,setIsLoading]=useState(false);const[alert,setAlert]=useState(null);const[importProgress,setImportProgress]=useState(null);const showAlert=(type,message)=>{setAlert({type,message});setTimeout(()=>setAlert(null),5000);};const handleExport=async()=>{setIsLoading(true);try{const token=authService.getToken();if(!token){throw new Error('Session expirée. Veuillez vous reconnecter.');}const queryParams=new URLSearchParams(filters);const url=`${host}${apiBasePath}/export/${exportFormat}?${queryParams}`;const response=await fetch(url,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'}});if(!response.ok){throw new Error('Erreur lors de l\\'export');}// Créer un blob avec la réponse\nconst blob=await response.blob();// Créer un lien de téléchargement\nconst downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;// Déterminer l'extension du fichier\nconst extensions={'excel':'xlsx','csv':'csv','pdf':'pdf'};link.download=`${title.toLowerCase()}_${new Date().toISOString().slice(0,10)}.${extensions[exportFormat]}`;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(downloadUrl);showAlert('success',`Export ${exportFormat.toUpperCase()} réussi`);}catch(error){console.error('Export error:',error);showAlert('danger',`Erreur lors de l'export: ${error.message}`);}finally{setIsLoading(false);}};const handleImport=async()=>{if(!importFile){showAlert('warning','Veuillez sélectionner un fichier');return;}setIsLoading(true);setImportProgress({current:0,total:100});try{const formData=new FormData();formData.append('file',importFile);const token=authService.getToken();if(!token){throw new Error('Session expirée. Veuillez vous reconnecter.');}// Utiliser la nouvelle route si seriesId est fourni\nconst importUrl=seriesId?`${host}/api/students/series/${seriesId}/import`:`${host}${apiBasePath}/import/csv`;const response=await fetch(importUrl,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'},body:formData});const result=await response.json();if(!response.ok){throw new Error(result.message||'Erreur lors de l\\'import');}setImportProgress({current:100,total:100});const{created=0,updated=0,errors=[]}=result.data;let message=`Import terminé: ${created} créé(s), ${updated} mis à jour`;if(errors.length>0){message+=`, ${errors.length} erreur(s)`;console.warn('Import errors:',errors);}showAlert(errors.length>0?'warning':'success',message);// Réinitialiser le formulaire\nsetImportFile(null);const fileInput=document.getElementById('importFile');if(fileInput)fileInput.value='';// Notifier le parent du succès\nif(onImportSuccess){onImportSuccess(result.data);}}catch(error){console.error('Import error:',error);showAlert('danger',`Erreur lors de l'import: ${error.message}`);}finally{setIsLoading(false);setImportProgress(null);}};const downloadTemplate=async()=>{try{const token=authService.getToken();if(!token){throw new Error('Session expirée. Veuillez vous reconnecter.');}const response=await fetch(`${host}${apiBasePath}/template/download`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'}});if(!response.ok){throw new Error('Erreur lors du téléchargement du template');}const blob=await response.blob();const downloadUrl=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=downloadUrl;link.download=templateFileName;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(downloadUrl);showAlert('success','Template téléchargé avec succès');}catch(error){console.error('Template download error:',error);showAlert('danger',`Erreur lors du téléchargement: ${error.message}`);}};const handleFileChange=e=>{const file=e.target.files[0];if(file){// Vérifier le type de fichier\nif(!file.name.endsWith('.csv')&&file.type!=='text/csv'){showAlert('warning','Veuillez sélectionner un fichier CSV');return;}setImportFile(file);}};const formatIcons={excel:/*#__PURE__*/_jsx(FileSpreadsheet,{className:\"me-2\"}),csv:/*#__PURE__*/_jsx(FileText,{className:\"me-2\"}),pdf:/*#__PURE__*/_jsx(FilePdf,{className:\"me-2\"})};return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:onHide,size:\"lg\",centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[activeTab==='export'?'Exporter':'Importer',\" \",title]})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[alert&&/*#__PURE__*/_jsx(Alert,{variant:alert.type,className:\"mb-3\",children:alert.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group w-100 mb-4\",role:\"group\",children:[/*#__PURE__*/_jsxs(Button,{variant:activeTab==='export'?'primary':'outline-primary',onClick:()=>setActiveTab('export'),disabled:isLoading,children:[/*#__PURE__*/_jsx(Download,{className:\"me-2\"}),\"Exporter\"]}),/*#__PURE__*/_jsxs(Button,{variant:activeTab==='import'?'primary':'outline-primary',onClick:()=>setActiveTab('import'),disabled:isLoading,children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Importer\"]})]}),activeTab==='export'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Format d'export\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex gap-2\",children:['excel','csv','pdf'].map(format=>/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:`format-${format}`,name:\"exportFormat\",label:/*#__PURE__*/_jsxs(\"span\",{children:[formatIcons[format],format.toUpperCase()]}),checked:exportFormat===format,onChange:()=>setExportFormat(format),disabled:isLoading},format))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-grid\",children:/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"lg\",onClick:handleExport,disabled:isLoading,children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\"}),\"Export en cours...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Download,{className:\"me-2\"}),\"Exporter en \",exportFormat.toUpperCase()]})})})]}),activeTab==='import'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Row,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-info\",onClick:downloadTemplate,className:\"w-100\",children:[/*#__PURE__*/_jsx(Download,{className:\"me-2\"}),\"T\\xE9l\\xE9charger le template CSV\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted d-block mt-1\",children:\"T\\xE9l\\xE9chargez d'abord le template pour voir le format attendu\"})]})}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Fichier CSV \\xE0 importer\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",id:\"importFile\",accept:\".csv,text/csv\",onChange:handleFileChange,disabled:isLoading}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Formats accept\\xE9s: .csv (taille max: 2MB)\"})]}),importFile&&/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fichier s\\xE9lectionn\\xE9:\"}),\" \",importFile.name,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Taille:\"}),\" \",(importFile.size/1024).toFixed(2),\" KB\"]}),importProgress&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(ProgressBar,{now:importProgress.current,max:importProgress.total,label:`${Math.round(importProgress.current/importProgress.total*100)}%`,animated:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"d-grid\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"lg\",onClick:handleImport,disabled:isLoading||!importFile,children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\"}),\"Import en cours...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Importer le fichier CSV\"]})})})]})]}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onHide,disabled:isLoading,children:\"Fermer\"})})]});};export default ImportExportModal;","map":{"version":3,"names":["React","useState","Modal","Button","Form","Alert","ProgressBar","Row","Col","Download","Upload","FileText","FileSpreadsheet","FilePdf","api","authService","host","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ImportExportModal","_ref","show","onHide","title","apiBasePath","onImportSuccess","filters","templateFileName","seriesId","activeTab","setActiveTab","exportFormat","setExportFormat","importFile","setImportFile","isLoading","setIsLoading","alert","setAlert","importProgress","setImportProgress","showAlert","type","message","setTimeout","handleExport","token","getToken","Error","queryParams","URLSearchParams","url","response","fetch","method","headers","ok","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","extensions","download","toLowerCase","Date","toISOString","slice","body","appendChild","click","removeChild","revokeObjectURL","toUpperCase","error","console","handleImport","current","total","formData","FormData","append","importUrl","result","json","created","updated","errors","data","length","warn","fileInput","getElementById","value","downloadTemplate","handleFileChange","e","file","target","files","name","endsWith","formatIcons","excel","className","csv","pdf","size","centered","children","Header","closeButton","Title","Body","variant","role","onClick","disabled","Group","Label","map","format","Check","id","label","checked","onChange","Control","accept","Text","toFixed","now","max","Math","round","animated","Footer"],"sources":["/var/www/College-IUP/front/src/components/ImportExportModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Form, Alert, ProgressBar, Row, Col } from 'react-bootstrap';\nimport { Download, Upload, FileText, FileSpreadsheet, FilePdf } from 'react-bootstrap-icons';\nimport { api } from '../utils/api';\nimport { authService } from '../services/authService';\nimport { host } from '../utils/fetch';\n\nconst ImportExportModal = ({ \n    show, \n    onHide, \n    title, \n    apiBasePath, \n    onImportSuccess,\n    filters = {},\n    templateFileName = \"template.csv\",\n    seriesId = null // Nouveau paramètre pour l'ID de série\n}) => {\n    const [activeTab, setActiveTab] = useState('export');\n    const [exportFormat, setExportFormat] = useState('excel');\n    const [importFile, setImportFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [alert, setAlert] = useState(null);\n    const [importProgress, setImportProgress] = useState(null);\n\n    const showAlert = (type, message) => {\n        setAlert({ type, message });\n        setTimeout(() => setAlert(null), 5000);\n    };\n\n    const handleExport = async () => {\n        setIsLoading(true);\n        try {\n            const token = authService.getToken();\n            if (!token) {\n                throw new Error('Session expirée. Veuillez vous reconnecter.');\n            }\n\n            const queryParams = new URLSearchParams(filters);\n            const url = `${host}${apiBasePath}/export/${exportFormat}?${queryParams}`;\n            \n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Erreur lors de l\\'export');\n            }\n\n            // Créer un blob avec la réponse\n            const blob = await response.blob();\n            \n            // Créer un lien de téléchargement\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            \n            // Déterminer l'extension du fichier\n            const extensions = {\n                'excel': 'xlsx',\n                'csv': 'csv',\n                'pdf': 'pdf'\n            };\n            \n            link.download = `${title.toLowerCase()}_${new Date().toISOString().slice(0, 10)}.${extensions[exportFormat]}`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(downloadUrl);\n\n            showAlert('success', `Export ${exportFormat.toUpperCase()} réussi`);\n        } catch (error) {\n            console.error('Export error:', error);\n            showAlert('danger', `Erreur lors de l'export: ${error.message}`);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleImport = async () => {\n        if (!importFile) {\n            showAlert('warning', 'Veuillez sélectionner un fichier');\n            return;\n        }\n\n        setIsLoading(true);\n        setImportProgress({ current: 0, total: 100 });\n\n        try {\n            const formData = new FormData();\n            formData.append('file', importFile);\n\n            const token = authService.getToken();\n            if (!token) {\n                throw new Error('Session expirée. Veuillez vous reconnecter.');\n            }\n\n            // Utiliser la nouvelle route si seriesId est fourni\n            const importUrl = seriesId \n                ? `${host}/api/students/series/${seriesId}/import`\n                : `${host}${apiBasePath}/import/csv`;\n                \n            const response = await fetch(importUrl, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                },\n                body: formData\n            });\n\n            const result = await response.json();\n\n            if (!response.ok) {\n                throw new Error(result.message || 'Erreur lors de l\\'import');\n            }\n\n            setImportProgress({ current: 100, total: 100 });\n\n            const { created = 0, updated = 0, errors = [] } = result.data;\n            \n            let message = `Import terminé: ${created} créé(s), ${updated} mis à jour`;\n            if (errors.length > 0) {\n                message += `, ${errors.length} erreur(s)`;\n                console.warn('Import errors:', errors);\n            }\n\n            showAlert(errors.length > 0 ? 'warning' : 'success', message);\n            \n            // Réinitialiser le formulaire\n            setImportFile(null);\n            const fileInput = document.getElementById('importFile');\n            if (fileInput) fileInput.value = '';\n\n            // Notifier le parent du succès\n            if (onImportSuccess) {\n                onImportSuccess(result.data);\n            }\n\n        } catch (error) {\n            console.error('Import error:', error);\n            showAlert('danger', `Erreur lors de l'import: ${error.message}`);\n        } finally {\n            setIsLoading(false);\n            setImportProgress(null);\n        }\n    };\n\n    const downloadTemplate = async () => {\n        try {\n            const token = authService.getToken();\n            if (!token) {\n                throw new Error('Session expirée. Veuillez vous reconnecter.');\n            }\n\n            const response = await fetch(`${host}${apiBasePath}/template/download`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error('Erreur lors du téléchargement du template');\n            }\n\n            const blob = await response.blob();\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.download = templateFileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(downloadUrl);\n\n            showAlert('success', 'Template téléchargé avec succès');\n        } catch (error) {\n            console.error('Template download error:', error);\n            showAlert('danger', `Erreur lors du téléchargement: ${error.message}`);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            // Vérifier le type de fichier\n            if (!file.name.endsWith('.csv') && file.type !== 'text/csv') {\n                showAlert('warning', 'Veuillez sélectionner un fichier CSV');\n                return;\n            }\n            setImportFile(file);\n        }\n    };\n\n    const formatIcons = {\n        excel: <FileSpreadsheet className=\"me-2\" />,\n        csv: <FileText className=\"me-2\" />,\n        pdf: <FilePdf className=\"me-2\" />\n    };\n\n    return (\n        <Modal show={show} onHide={onHide} size=\"lg\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {activeTab === 'export' ? 'Exporter' : 'Importer'} {title}\n                </Modal.Title>\n            </Modal.Header>\n            \n            <Modal.Body>\n                {alert && (\n                    <Alert variant={alert.type} className=\"mb-3\">\n                        {alert.message}\n                    </Alert>\n                )}\n\n                {/* Onglets */}\n                <div className=\"btn-group w-100 mb-4\" role=\"group\">\n                    <Button \n                        variant={activeTab === 'export' ? 'primary' : 'outline-primary'}\n                        onClick={() => setActiveTab('export')}\n                        disabled={isLoading}\n                    >\n                        <Download className=\"me-2\" />\n                        Exporter\n                    </Button>\n                    <Button \n                        variant={activeTab === 'import' ? 'primary' : 'outline-primary'}\n                        onClick={() => setActiveTab('import')}\n                        disabled={isLoading}\n                    >\n                        <Upload className=\"me-2\" />\n                        Importer\n                    </Button>\n                </div>\n\n                {/* Contenu Export */}\n                {activeTab === 'export' && (\n                    <div>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Format d'export</Form.Label>\n                            <div className=\"d-flex gap-2\">\n                                {['excel', 'csv', 'pdf'].map(format => (\n                                    <Form.Check\n                                        key={format}\n                                        type=\"radio\"\n                                        id={`format-${format}`}\n                                        name=\"exportFormat\"\n                                        label={\n                                            <span>\n                                                {formatIcons[format]}\n                                                {format.toUpperCase()}\n                                            </span>\n                                        }\n                                        checked={exportFormat === format}\n                                        onChange={() => setExportFormat(format)}\n                                        disabled={isLoading}\n                                    />\n                                ))}\n                            </div>\n                        </Form.Group>\n\n                        <div className=\"d-grid\">\n                            <Button \n                                variant=\"success\" \n                                size=\"lg\"\n                                onClick={handleExport}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <span className=\"spinner-border spinner-border-sm me-2\" />\n                                        Export en cours...\n                                    </>\n                                ) : (\n                                    <>\n                                        <Download className=\"me-2\" />\n                                        Exporter en {exportFormat.toUpperCase()}\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n\n                {/* Contenu Import */}\n                {activeTab === 'import' && (\n                    <div>\n                        <Row className=\"mb-3\">\n                            <Col>\n                                <Button \n                                    variant=\"outline-info\" \n                                    onClick={downloadTemplate}\n                                    className=\"w-100\"\n                                >\n                                    <Download className=\"me-2\" />\n                                    Télécharger le template CSV\n                                </Button>\n                                <small className=\"text-muted d-block mt-1\">\n                                    Téléchargez d'abord le template pour voir le format attendu\n                                </small>\n                            </Col>\n                        </Row>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Fichier CSV à importer</Form.Label>\n                            <Form.Control\n                                type=\"file\"\n                                id=\"importFile\"\n                                accept=\".csv,text/csv\"\n                                onChange={handleFileChange}\n                                disabled={isLoading}\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Formats acceptés: .csv (taille max: 2MB)\n                            </Form.Text>\n                        </Form.Group>\n\n                        {importFile && (\n                            <Alert variant=\"info\" className=\"mb-3\">\n                                <strong>Fichier sélectionné:</strong> {importFile.name}\n                                <br />\n                                <strong>Taille:</strong> {(importFile.size / 1024).toFixed(2)} KB\n                            </Alert>\n                        )}\n\n                        {importProgress && (\n                            <div className=\"mb-3\">\n                                <ProgressBar \n                                    now={importProgress.current} \n                                    max={importProgress.total}\n                                    label={`${Math.round((importProgress.current / importProgress.total) * 100)}%`}\n                                    animated\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"d-grid\">\n                            <Button \n                                variant=\"primary\" \n                                size=\"lg\"\n                                onClick={handleImport}\n                                disabled={isLoading || !importFile}\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <span className=\"spinner-border spinner-border-sm me-2\" />\n                                        Import en cours...\n                                    </>\n                                ) : (\n                                    <>\n                                        <Upload className=\"me-2\" />\n                                        Importer le fichier CSV\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide} disabled={isLoading}>\n                    Fermer\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ImportExportModal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,KAAK,CAAEC,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,WAAW,CAAEC,GAAG,CAAEC,GAAG,KAAQ,iBAAiB,CACnF,OAASC,QAAQ,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,eAAe,CAAEC,OAAO,KAAQ,uBAAuB,CAC5F,OAASC,GAAG,KAAQ,cAAc,CAClC,OAASC,WAAW,KAAQ,yBAAyB,CACrD,OAASC,IAAI,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEtC,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EASpB,IATqB,CACvBC,IAAI,CACJC,MAAM,CACNC,KAAK,CACLC,WAAW,CACXC,eAAe,CACfC,OAAO,CAAG,CAAC,CAAC,CACZC,gBAAgB,CAAG,cAAc,CACjCC,QAAQ,CAAG,IAAK;AACpB,CAAC,CAAAR,IAAA,CACG,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGjC,QAAQ,CAAC,QAAQ,CAAC,CACpD,KAAM,CAACkC,YAAY,CAAEC,eAAe,CAAC,CAAGnC,QAAQ,CAAC,OAAO,CAAC,CACzD,KAAM,CAACoC,UAAU,CAAEC,aAAa,CAAC,CAAGrC,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACsC,SAAS,CAAEC,YAAY,CAAC,CAAGvC,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACwC,KAAK,CAAEC,QAAQ,CAAC,CAAGzC,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC0C,cAAc,CAAEC,iBAAiB,CAAC,CAAG3C,QAAQ,CAAC,IAAI,CAAC,CAE1D,KAAM,CAAA4C,SAAS,CAAGA,CAACC,IAAI,CAAEC,OAAO,GAAK,CACjCL,QAAQ,CAAC,CAAEI,IAAI,CAAEC,OAAQ,CAAC,CAAC,CAC3BC,UAAU,CAAC,IAAMN,QAAQ,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAO,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7BT,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACA,KAAM,CAAAU,KAAK,CAAGnC,WAAW,CAACoC,QAAQ,CAAC,CAAC,CACpC,GAAI,CAACD,KAAK,CAAE,CACR,KAAM,IAAI,CAAAE,KAAK,CAAC,6CAA6C,CAAC,CAClE,CAEA,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACxB,OAAO,CAAC,CAChD,KAAM,CAAAyB,GAAG,CAAG,GAAGvC,IAAI,GAAGY,WAAW,WAAWO,YAAY,IAAIkB,WAAW,EAAE,CAEzE,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,GAAG,CAAE,CAC9BG,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,eAAe,CAAE,UAAUT,KAAK,EAAE,CAClC,QAAQ,CAAE,kBACd,CACJ,CAAC,CAAC,CAEF,GAAI,CAACM,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAR,KAAK,CAAC,0BAA0B,CAAC,CAC/C,CAEA;AACA,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAElC;AACA,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CACpD,KAAM,CAAAK,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,WAAW,CAEvB;AACA,KAAM,CAAAQ,UAAU,CAAG,CACf,OAAO,CAAE,MAAM,CACf,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,KACX,CAAC,CAEDJ,IAAI,CAACK,QAAQ,CAAG,GAAG5C,KAAK,CAAC6C,WAAW,CAAC,CAAC,IAAI,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,IAAIL,UAAU,CAACnC,YAAY,CAAC,EAAE,CAC7GgC,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,IAAI,CAAC,CAC/BA,IAAI,CAACY,KAAK,CAAC,CAAC,CACZX,QAAQ,CAACS,IAAI,CAACG,WAAW,CAACb,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACgB,eAAe,CAAClB,WAAW,CAAC,CAEvCjB,SAAS,CAAC,SAAS,CAAE,UAAUV,YAAY,CAAC8C,WAAW,CAAC,CAAC,SAAS,CAAC,CACvE,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCrC,SAAS,CAAC,QAAQ,CAAE,4BAA4BqC,KAAK,CAACnC,OAAO,EAAE,CAAC,CACpE,CAAC,OAAS,CACNP,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,KAAM,CAAA4C,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAAC/C,UAAU,CAAE,CACbQ,SAAS,CAAC,SAAS,CAAE,kCAAkC,CAAC,CACxD,OACJ,CAEAL,YAAY,CAAC,IAAI,CAAC,CAClBI,iBAAiB,CAAC,CAAEyC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAC,CAAC,CAE7C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEpD,UAAU,CAAC,CAEnC,KAAM,CAAAa,KAAK,CAAGnC,WAAW,CAACoC,QAAQ,CAAC,CAAC,CACpC,GAAI,CAACD,KAAK,CAAE,CACR,KAAM,IAAI,CAAAE,KAAK,CAAC,6CAA6C,CAAC,CAClE,CAEA;AACA,KAAM,CAAAsC,SAAS,CAAG1D,QAAQ,CACpB,GAAGhB,IAAI,wBAAwBgB,QAAQ,SAAS,CAChD,GAAGhB,IAAI,GAAGY,WAAW,aAAa,CAExC,KAAM,CAAA4B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACiC,SAAS,CAAE,CACpChC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,eAAe,CAAE,UAAUT,KAAK,EAAE,CAClC,QAAQ,CAAE,kBACd,CAAC,CACD0B,IAAI,CAAEW,QACV,CAAC,CAAC,CAEF,KAAM,CAAAI,MAAM,CAAG,KAAM,CAAAnC,QAAQ,CAACoC,IAAI,CAAC,CAAC,CAEpC,GAAI,CAACpC,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAR,KAAK,CAACuC,MAAM,CAAC5C,OAAO,EAAI,0BAA0B,CAAC,CACjE,CAEAH,iBAAiB,CAAC,CAAEyC,OAAO,CAAE,GAAG,CAAEC,KAAK,CAAE,GAAI,CAAC,CAAC,CAE/C,KAAM,CAAEO,OAAO,CAAG,CAAC,CAAEC,OAAO,CAAG,CAAC,CAAEC,MAAM,CAAG,EAAG,CAAC,CAAGJ,MAAM,CAACK,IAAI,CAE7D,GAAI,CAAAjD,OAAO,CAAG,mBAAmB8C,OAAO,aAAaC,OAAO,aAAa,CACzE,GAAIC,MAAM,CAACE,MAAM,CAAG,CAAC,CAAE,CACnBlD,OAAO,EAAI,KAAKgD,MAAM,CAACE,MAAM,YAAY,CACzCd,OAAO,CAACe,IAAI,CAAC,gBAAgB,CAAEH,MAAM,CAAC,CAC1C,CAEAlD,SAAS,CAACkD,MAAM,CAACE,MAAM,CAAG,CAAC,CAAG,SAAS,CAAG,SAAS,CAAElD,OAAO,CAAC,CAE7D;AACAT,aAAa,CAAC,IAAI,CAAC,CACnB,KAAM,CAAA6D,SAAS,CAAGhC,QAAQ,CAACiC,cAAc,CAAC,YAAY,CAAC,CACvD,GAAID,SAAS,CAAEA,SAAS,CAACE,KAAK,CAAG,EAAE,CAEnC;AACA,GAAIxE,eAAe,CAAE,CACjBA,eAAe,CAAC8D,MAAM,CAACK,IAAI,CAAC,CAChC,CAEJ,CAAE,MAAOd,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCrC,SAAS,CAAC,QAAQ,CAAE,4BAA4BqC,KAAK,CAACnC,OAAO,EAAE,CAAC,CACpE,CAAC,OAAS,CACNP,YAAY,CAAC,KAAK,CAAC,CACnBI,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CACJ,CAAC,CAED,KAAM,CAAA0D,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAApD,KAAK,CAAGnC,WAAW,CAACoC,QAAQ,CAAC,CAAC,CACpC,GAAI,CAACD,KAAK,CAAE,CACR,KAAM,IAAI,CAAAE,KAAK,CAAC,6CAA6C,CAAC,CAClE,CAEA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGzC,IAAI,GAAGY,WAAW,oBAAoB,CAAE,CACpE8B,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,eAAe,CAAE,UAAUT,KAAK,EAAE,CAClC,QAAQ,CAAE,kBACd,CACJ,CAAC,CAAC,CAEF,GAAI,CAACM,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAR,KAAK,CAAC,2CAA2C,CAAC,CAChE,CAEA,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CACpD,KAAM,CAAAK,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGP,WAAW,CACvBI,IAAI,CAACK,QAAQ,CAAGxC,gBAAgB,CAChCoC,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,IAAI,CAAC,CAC/BA,IAAI,CAACY,KAAK,CAAC,CAAC,CACZX,QAAQ,CAACS,IAAI,CAACG,WAAW,CAACb,IAAI,CAAC,CAC/BH,MAAM,CAACC,GAAG,CAACgB,eAAe,CAAClB,WAAW,CAAC,CAEvCjB,SAAS,CAAC,SAAS,CAAE,iCAAiC,CAAC,CAC3D,CAAE,MAAOqC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDrC,SAAS,CAAC,QAAQ,CAAE,kCAAkCqC,KAAK,CAACnC,OAAO,EAAE,CAAC,CAC1E,CACJ,CAAC,CAED,KAAM,CAAAwD,gBAAgB,CAAIC,CAAC,EAAK,CAC5B,KAAM,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9B,GAAIF,IAAI,CAAE,CACN;AACA,GAAI,CAACA,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAIJ,IAAI,CAAC3D,IAAI,GAAK,UAAU,CAAE,CACzDD,SAAS,CAAC,SAAS,CAAE,sCAAsC,CAAC,CAC5D,OACJ,CACAP,aAAa,CAACmE,IAAI,CAAC,CACvB,CACJ,CAAC,CAED,KAAM,CAAAK,WAAW,CAAG,CAChBC,KAAK,cAAE7F,IAAA,CAACN,eAAe,EAACoG,SAAS,CAAC,MAAM,CAAE,CAAC,CAC3CC,GAAG,cAAE/F,IAAA,CAACP,QAAQ,EAACqG,SAAS,CAAC,MAAM,CAAE,CAAC,CAClCE,GAAG,cAAEhG,IAAA,CAACL,OAAO,EAACmG,SAAS,CAAC,MAAM,CAAE,CACpC,CAAC,CAED,mBACI5F,KAAA,CAAClB,KAAK,EAACuB,IAAI,CAAEA,IAAK,CAACC,MAAM,CAAEA,MAAO,CAACyF,IAAI,CAAC,IAAI,CAACC,QAAQ,MAAAC,QAAA,eACjDnG,IAAA,CAAChB,KAAK,CAACoH,MAAM,EAACC,WAAW,MAAAF,QAAA,cACrBjG,KAAA,CAAClB,KAAK,CAACsH,KAAK,EAAAH,QAAA,EACPpF,SAAS,GAAK,QAAQ,CAAG,UAAU,CAAG,UAAU,CAAC,GAAC,CAACN,KAAK,EAChD,CAAC,CACJ,CAAC,cAEfP,KAAA,CAAClB,KAAK,CAACuH,IAAI,EAAAJ,QAAA,EACN5E,KAAK,eACFvB,IAAA,CAACb,KAAK,EAACqH,OAAO,CAAEjF,KAAK,CAACK,IAAK,CAACkE,SAAS,CAAC,MAAM,CAAAK,QAAA,CACvC5E,KAAK,CAACM,OAAO,CACX,CACV,cAGD3B,KAAA,QAAK4F,SAAS,CAAC,sBAAsB,CAACW,IAAI,CAAC,OAAO,CAAAN,QAAA,eAC9CjG,KAAA,CAACjB,MAAM,EACHuH,OAAO,CAAEzF,SAAS,GAAK,QAAQ,CAAG,SAAS,CAAG,iBAAkB,CAChE2F,OAAO,CAAEA,CAAA,GAAM1F,YAAY,CAAC,QAAQ,CAAE,CACtC2F,QAAQ,CAAEtF,SAAU,CAAA8E,QAAA,eAEpBnG,IAAA,CAACT,QAAQ,EAACuG,SAAS,CAAC,MAAM,CAAE,CAAC,WAEjC,EAAQ,CAAC,cACT5F,KAAA,CAACjB,MAAM,EACHuH,OAAO,CAAEzF,SAAS,GAAK,QAAQ,CAAG,SAAS,CAAG,iBAAkB,CAChE2F,OAAO,CAAEA,CAAA,GAAM1F,YAAY,CAAC,QAAQ,CAAE,CACtC2F,QAAQ,CAAEtF,SAAU,CAAA8E,QAAA,eAEpBnG,IAAA,CAACR,MAAM,EAACsG,SAAS,CAAC,MAAM,CAAE,CAAC,WAE/B,EAAQ,CAAC,EACR,CAAC,CAGL/E,SAAS,GAAK,QAAQ,eACnBb,KAAA,QAAAiG,QAAA,eACIjG,KAAA,CAAChB,IAAI,CAAC0H,KAAK,EAACd,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBnG,IAAA,CAACd,IAAI,CAAC2H,KAAK,EAAAV,QAAA,CAAC,iBAAe,CAAY,CAAC,cACxCnG,IAAA,QAAK8F,SAAS,CAAC,cAAc,CAAAK,QAAA,CACxB,CAAC,OAAO,CAAE,KAAK,CAAE,KAAK,CAAC,CAACW,GAAG,CAACC,MAAM,eAC/B/G,IAAA,CAACd,IAAI,CAAC8H,KAAK,EAEPpF,IAAI,CAAC,OAAO,CACZqF,EAAE,CAAE,UAAUF,MAAM,EAAG,CACvBrB,IAAI,CAAC,cAAc,CACnBwB,KAAK,cACDhH,KAAA,SAAAiG,QAAA,EACKP,WAAW,CAACmB,MAAM,CAAC,CACnBA,MAAM,CAAChD,WAAW,CAAC,CAAC,EACnB,CACT,CACDoD,OAAO,CAAElG,YAAY,GAAK8F,MAAO,CACjCK,QAAQ,CAAEA,CAAA,GAAMlG,eAAe,CAAC6F,MAAM,CAAE,CACxCJ,QAAQ,CAAEtF,SAAU,EAZf0F,MAaR,CACJ,CAAC,CACD,CAAC,EACE,CAAC,cAEb/G,IAAA,QAAK8F,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACnBnG,IAAA,CAACf,MAAM,EACHuH,OAAO,CAAC,SAAS,CACjBP,IAAI,CAAC,IAAI,CACTS,OAAO,CAAE3E,YAAa,CACtB4E,QAAQ,CAAEtF,SAAU,CAAA8E,QAAA,CAEnB9E,SAAS,cACNnB,KAAA,CAAAE,SAAA,EAAA+F,QAAA,eACInG,IAAA,SAAM8F,SAAS,CAAC,uCAAuC,CAAE,CAAC,qBAE9D,EAAE,CAAC,cAEH5F,KAAA,CAAAE,SAAA,EAAA+F,QAAA,eACInG,IAAA,CAACT,QAAQ,EAACuG,SAAS,CAAC,MAAM,CAAE,CAAC,eACjB,CAAC7E,YAAY,CAAC8C,WAAW,CAAC,CAAC,EACzC,CACL,CACG,CAAC,CACR,CAAC,EACL,CACR,CAGAhD,SAAS,GAAK,QAAQ,eACnBb,KAAA,QAAAiG,QAAA,eACInG,IAAA,CAACX,GAAG,EAACyG,SAAS,CAAC,MAAM,CAAAK,QAAA,cACjBjG,KAAA,CAACZ,GAAG,EAAA6G,QAAA,eACAjG,KAAA,CAACjB,MAAM,EACHuH,OAAO,CAAC,cAAc,CACtBE,OAAO,CAAEtB,gBAAiB,CAC1BU,SAAS,CAAC,OAAO,CAAAK,QAAA,eAEjBnG,IAAA,CAACT,QAAQ,EAACuG,SAAS,CAAC,MAAM,CAAE,CAAC,oCAEjC,EAAQ,CAAC,cACT9F,IAAA,UAAO8F,SAAS,CAAC,yBAAyB,CAAAK,QAAA,CAAC,mEAE3C,CAAO,CAAC,EACP,CAAC,CACL,CAAC,cAENjG,KAAA,CAAChB,IAAI,CAAC0H,KAAK,EAACd,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBnG,IAAA,CAACd,IAAI,CAAC2H,KAAK,EAAAV,QAAA,CAAC,2BAAsB,CAAY,CAAC,cAC/CnG,IAAA,CAACd,IAAI,CAACmI,OAAO,EACTzF,IAAI,CAAC,MAAM,CACXqF,EAAE,CAAC,YAAY,CACfK,MAAM,CAAC,eAAe,CACtBF,QAAQ,CAAE/B,gBAAiB,CAC3BsB,QAAQ,CAAEtF,SAAU,CACvB,CAAC,cACFrB,IAAA,CAACd,IAAI,CAACqI,IAAI,EAACzB,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,6CAElC,CAAW,CAAC,EACJ,CAAC,CAEZhF,UAAU,eACPjB,KAAA,CAACf,KAAK,EAACqH,OAAO,CAAC,MAAM,CAACV,SAAS,CAAC,MAAM,CAAAK,QAAA,eAClCnG,IAAA,WAAAmG,QAAA,CAAQ,4BAAoB,CAAQ,CAAC,IAAC,CAAChF,UAAU,CAACuE,IAAI,cACtD1F,IAAA,QAAK,CAAC,cACNA,IAAA,WAAAmG,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAC,CAAChF,UAAU,CAAC8E,IAAI,CAAG,IAAI,EAAEuB,OAAO,CAAC,CAAC,CAAC,CAAC,KAClE,EAAO,CACV,CAEA/F,cAAc,eACXzB,IAAA,QAAK8F,SAAS,CAAC,MAAM,CAAAK,QAAA,cACjBnG,IAAA,CAACZ,WAAW,EACRqI,GAAG,CAAEhG,cAAc,CAAC0C,OAAQ,CAC5BuD,GAAG,CAAEjG,cAAc,CAAC2C,KAAM,CAC1B8C,KAAK,CAAE,GAAGS,IAAI,CAACC,KAAK,CAAEnG,cAAc,CAAC0C,OAAO,CAAG1C,cAAc,CAAC2C,KAAK,CAAI,GAAG,CAAC,GAAI,CAC/EyD,QAAQ,MACX,CAAC,CACD,CACR,cAED7H,IAAA,QAAK8F,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACnBnG,IAAA,CAACf,MAAM,EACHuH,OAAO,CAAC,SAAS,CACjBP,IAAI,CAAC,IAAI,CACTS,OAAO,CAAExC,YAAa,CACtByC,QAAQ,CAAEtF,SAAS,EAAI,CAACF,UAAW,CAAAgF,QAAA,CAElC9E,SAAS,cACNnB,KAAA,CAAAE,SAAA,EAAA+F,QAAA,eACInG,IAAA,SAAM8F,SAAS,CAAC,uCAAuC,CAAE,CAAC,qBAE9D,EAAE,CAAC,cAEH5F,KAAA,CAAAE,SAAA,EAAA+F,QAAA,eACInG,IAAA,CAACR,MAAM,EAACsG,SAAS,CAAC,MAAM,CAAE,CAAC,0BAE/B,EAAE,CACL,CACG,CAAC,CACR,CAAC,EACL,CACR,EACO,CAAC,cAEb9F,IAAA,CAAChB,KAAK,CAAC8I,MAAM,EAAA3B,QAAA,cACTnG,IAAA,CAACf,MAAM,EAACuH,OAAO,CAAC,WAAW,CAACE,OAAO,CAAElG,MAAO,CAACmG,QAAQ,CAAEtF,SAAU,CAAA8E,QAAA,CAAC,QAElE,CAAQ,CAAC,CACC,CAAC,EACZ,CAAC,CAEhB,CAAC,CAED,cAAe,CAAA9F,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}