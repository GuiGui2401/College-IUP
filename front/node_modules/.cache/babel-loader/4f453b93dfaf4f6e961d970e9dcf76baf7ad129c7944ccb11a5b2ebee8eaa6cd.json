{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Modal,Button}from'react-bootstrap';import{Plus,Trash2,CreditCard}from'react-bootstrap-icons';import{secureApiEndpoints}from'../../utils/apiMigration';import Swal from'sweetalert2';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const EditSchoolClass=_ref=>{let{show,onHide,onSuccess,classData,sections,levels}=_ref;const[formData,setFormData]=useState({name:'',level_id:'',description:'',is_active:true,series:[],payment_amounts:[]});const[paymentTranches,setPaymentTranches]=useState([]);const[selectedSectionId,setSelectedSectionId]=useState('');const[loading,setLoading]=useState(false);useEffect(()=>{if(show&&classData){loadPaymentTranches();initializeFormData();}},[show,classData]);const initializeFormData=()=>{var _classData$series,_classData$payment_am;setFormData({name:classData.name||'',level_id:classData.level_id||'',description:classData.description||'',is_active:classData.is_active!==undefined?classData.is_active:true,series:((_classData$series=classData.series)===null||_classData$series===void 0?void 0:_classData$series.map(serie=>({id:serie.id,name:serie.name||'',code:serie.code||'',capacity:serie.capacity||'',is_active:serie.is_active!==undefined?serie.is_active:true})))||[],payment_amounts:((_classData$payment_am=classData.payment_amounts)===null||_classData$payment_am===void 0?void 0:_classData$payment_am.map(amount=>({id:amount.id,payment_tranche_id:amount.payment_tranche_id,amount:amount.amount||'',is_required:amount.is_required!==undefined?amount.is_required:true})))||[]});// Set section ID for level filtering\nconst level=levels.find(l=>l.id===classData.level_id);setSelectedSectionId((level===null||level===void 0?void 0:level.section_id)||'');};const loadPaymentTranches=async()=>{try{const response=await secureApiEndpoints.paymentTranches.getAll();if(response.success){setPaymentTranches(response.data);}else{console.error('Erreur lors du chargement des tranches:',response.message);setPaymentTranches([]);}}catch(error){console.error('Erreur lors du chargement des tranches:',error);setPaymentTranches([]);}};useEffect(()=>{// Update payment amounts when payment tranches are loaded\nif(paymentTranches.length>0&&classData){console.log('Updating payment amounts with tranches loaded');console.log('paymentTranches:',paymentTranches);console.log('classData.payment_amounts:',classData.payment_amounts);const existingAmounts=classData.payment_amounts||[];const updatedAmounts=paymentTranches.map(tranche=>{const existing=existingAmounts.find(amount=>amount.payment_tranche_id===tranche.id);console.log(`For tranche ${tranche.id} (${tranche.name}), found existing:`,existing);if(existing){return{id:existing.id,payment_tranche_id:tranche.id,amount:existing.amount||'',is_required:existing.is_required!==undefined?existing.is_required:true};}else{return{payment_tranche_id:tranche.id,amount:'',is_required:true};}});console.log('Final updatedAmounts:',updatedAmounts);setFormData(prev=>({...prev,payment_amounts:updatedAmounts}));}},[paymentTranches,classData]);const handleLevelChange=levelId=>{const level=levels.find(l=>l.id===parseInt(levelId));setSelectedSectionId((level===null||level===void 0?void 0:level.section_id)||'');setFormData(prev=>({...prev,level_id:levelId}));};const handleSeriesChange=(index,field,value)=>{setFormData(prev=>({...prev,series:prev.series.map((serie,i)=>i===index?{...serie,[field]:value}:serie)}));};const addSeries=()=>{setFormData(prev=>({...prev,series:[...prev.series,{name:'',code:'',capacity:'',is_active:true}]}));};const removeSeries=index=>{const serie=formData.series[index];if(serie.id){// Show confirmation for existing series\nSwal.fire({title:'Confirmer la suppression',text:'Êtes-vous sûr de vouloir supprimer cette série ? Cette action est irréversible.',icon:'warning',showCancelButton:true,confirmButtonColor:'#dc3545',cancelButtonColor:'#6c757d',confirmButtonText:'Supprimer',cancelButtonText:'Annuler'}).then(result=>{if(result.isConfirmed){setFormData(prev=>({...prev,series:prev.series.filter((_,i)=>i!==index)}));}});}else{// Remove new series without confirmation\nsetFormData(prev=>({...prev,series:prev.series.filter((_,i)=>i!==index)}));}};const handlePaymentAmountChange=(trancheId,field,value)=>{setFormData(prev=>({...prev,payment_amounts:prev.payment_amounts.map(amount=>amount.payment_tranche_id===trancheId?{...amount,[field]:value}:amount)}));};const handleSubmit=async e=>{e.preventDefault();try{// Validation\nif(!formData.name.trim()){Swal.fire('Erreur','Le nom de la classe est requis','error');return;}if(!formData.level_id){Swal.fire('Erreur','Veuillez sélectionner un niveau','error');return;}// Validate series\nfor(let i=0;i<formData.series.length;i++){const serie=formData.series[i];if(!serie.name.trim()){Swal.fire('Erreur',`Le nom de la série ${i+1} est requis`,'error');return;}}// Validate payment amounts\nfor(const amount of formData.payment_amounts){if(amount.amount&&isNaN(amount.amount)){Swal.fire('Erreur','Les montants doivent être des nombres','error');return;}}const submissionData={...formData,payment_amounts:formData.payment_amounts.filter(amount=>amount.amount)};setLoading(true);const response=await secureApiEndpoints.schoolClasses.update(classData.id,submissionData);if(response.success){Swal.fire('Succès',response.message||'Classe modifiée avec succès','success');onSuccess();}else{Swal.fire('Erreur',response.message||'Erreur lors de la modification de la classe','error');}}catch(error){console.error('Error updating class:',error);Swal.fire('Erreur','Erreur lors de la modification de la classe','error');}finally{setLoading(false);}};const getFilteredLevels=()=>{return levels.filter(level=>level.is_active);};return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:onHide,size:\"lg\",scrollable:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Modifier la Classe\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-primary mb-3\",children:\"Informations de Base\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Nom de la classe *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:formData.name,onChange:e=>setFormData(prev=>({...prev,name:e.target.value})),placeholder:\"Ex: 6\\xE8me A, CP1 B...\",required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Niveau *\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:formData.level_id,onChange:e=>handleLevelChange(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner un niveau\"}),getFilteredLevels().map(level=>{var _level$section;return/*#__PURE__*/_jsxs(\"option\",{value:level.id,children:[(_level$section=level.section)===null||_level$section===void 0?void 0:_level$section.name,\" - \",level.name]},level.id);})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",rows:\"3\",value:formData.description,onChange:e=>setFormData(prev=>({...prev,description:e.target.value})),placeholder:\"Description de la classe...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",checked:formData.is_active,onChange:e=>setFormData(prev=>({...prev,is_active:e.target.checked})),id:\"classActive\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"classActive\",children:\"Classe active\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-primary mb-0\",children:\"S\\xE9ries de la Classe\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-sm btn-outline-primary\",onClick:addSeries,children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"me-1\"}),\"Ajouter S\\xE9rie\"]})]}),formData.series.map((serie,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"card-title mb-0\",children:[\"S\\xE9rie \",index+1,serie.id&&/*#__PURE__*/_jsx(\"small\",{className:\"text-muted ms-2\",children:\"(Existante)\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-sm btn-outline-danger\",onClick:()=>removeSeries(index),children:/*#__PURE__*/_jsx(Trash2,{size:14})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Nom *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:serie.name,onChange:e=>handleSeriesChange(index,'name',e.target.value),placeholder:\"Ex: A, B, C...\",required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:serie.code,onChange:e=>handleSeriesChange(index,'code',e.target.value),placeholder:\"Code optionnel\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Capacit\\xE9\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:serie.capacity,onChange:e=>handleSeriesChange(index,'capacity',e.target.value),placeholder:\"Nombre max d'\\xE9l\\xE8ves\",min:\"1\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",checked:serie.is_active,onChange:e=>handleSeriesChange(index,'is_active',e.target.checked),id:`serieActive${index}`}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:`serieActive${index}`,children:\"S\\xE9rie active\"})]})]})},index)),formData.series.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-3\",children:\"Aucune s\\xE9rie configur\\xE9e\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-outline-primary\",onClick:addSeries,children:[/*#__PURE__*/_jsx(Plus,{size:16,className:\"me-1\"}),\"Ajouter la premi\\xE8re s\\xE9rie\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"text-success mb-3\",children:[/*#__PURE__*/_jsx(CreditCard,{size:16,className:\"me-2\"}),\"Montants de Paiement\",/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-info ms-2\",children:[paymentTranches.length,\" tranche\",paymentTranches.length>1?'s':'']})]}),paymentTranches.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Aucune tranche de paiement configur\\xE9e.\"})}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Les tranches de paiement doivent \\xEAtre cr\\xE9\\xE9es avant de pouvoir configurer les montants des classes. Allez dans la section \\\"Tranches de Paiement\\\" pour en cr\\xE9er.\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-3\",children:\"Configurez les montants pour chaque tranche de paiement. Laissez vide pour ne pas configurer une tranche.\"}),paymentTranches.map(tranche=>{const paymentAmount=formData.payment_amounts.find(pa=>pa.payment_tranche_id===tranche.id);return/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"card-title\",children:tranche.name}),tranche.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-muted small mb-3\",children:tranche.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Montant (FCFA)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:(paymentAmount===null||paymentAmount===void 0?void 0:paymentAmount.amount)||'',onChange:e=>handlePaymentAmountChange(tranche.id,'amount',e.target.value),placeholder:\"Montant pour cette tranche\",min:\"0\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Obligatoire\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:`required-edit-${tranche.id}`,checked:(paymentAmount===null||paymentAmount===void 0?void 0:paymentAmount.is_required)!==false,onChange:e=>handlePaymentAmountChange(tranche.id,'is_required',e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:`required-edit-${tranche.id}`,children:\"Requis\"})]})]})})]})]})},tranche.id);})]})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onHide,children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleSubmit,disabled:loading,children:loading?'Modification...':'Modifier la Classe'})]})]});};export default EditSchoolClass;","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Plus","Trash2","CreditCard","secureApiEndpoints","Swal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditSchoolClass","_ref","show","onHide","onSuccess","classData","sections","levels","formData","setFormData","name","level_id","description","is_active","series","payment_amounts","paymentTranches","setPaymentTranches","selectedSectionId","setSelectedSectionId","loading","setLoading","loadPaymentTranches","initializeFormData","_classData$series","_classData$payment_am","undefined","map","serie","id","code","capacity","amount","payment_tranche_id","is_required","level","find","l","section_id","response","getAll","success","data","console","error","message","length","log","existingAmounts","updatedAmounts","tranche","existing","prev","handleLevelChange","levelId","parseInt","handleSeriesChange","index","field","value","i","addSeries","removeSeries","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","filter","_","handlePaymentAmountChange","trancheId","handleSubmit","e","preventDefault","trim","isNaN","submissionData","schoolClasses","update","getFilteredLevels","size","scrollable","children","Header","closeButton","Title","Body","onSubmit","className","type","onChange","target","placeholder","required","_level$section","section","rows","checked","htmlFor","onClick","min","paymentAmount","pa","Footer","variant","disabled"],"sources":["/var/www/College-IUP/front/src/pages/SchoolClasses/EditSchoolClass.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Plus, Trash2, CreditCard } from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\nimport Swal from 'sweetalert2';\n\nconst EditSchoolClass = ({ show, onHide, onSuccess, classData, sections, levels }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        level_id: '',\n        description: '',\n        is_active: true,\n        series: [],\n        payment_amounts: []\n    });\n    \n    const [paymentTranches, setPaymentTranches] = useState([]);\n    const [selectedSectionId, setSelectedSectionId] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (show && classData) {\n            loadPaymentTranches();\n            initializeFormData();\n        }\n    }, [show, classData]);\n\n    const initializeFormData = () => {\n        setFormData({\n            name: classData.name || '',\n            level_id: classData.level_id || '',\n            description: classData.description || '',\n            is_active: classData.is_active !== undefined ? classData.is_active : true,\n            series: classData.series?.map(serie => ({\n                id: serie.id,\n                name: serie.name || '',\n                code: serie.code || '',\n                capacity: serie.capacity || '',\n                is_active: serie.is_active !== undefined ? serie.is_active : true\n            })) || [],\n            payment_amounts: classData.payment_amounts?.map(amount => ({\n                id: amount.id,\n                payment_tranche_id: amount.payment_tranche_id,\n                amount: amount.amount || '',\n                is_required: amount.is_required !== undefined ? amount.is_required : true\n            })) || []\n        });\n\n        // Set section ID for level filtering\n        const level = levels.find(l => l.id === classData.level_id);\n        setSelectedSectionId(level?.section_id || '');\n    };\n\n    const loadPaymentTranches = async () => {\n        try {\n            const response = await secureApiEndpoints.paymentTranches.getAll();\n            if (response.success) {\n                setPaymentTranches(response.data);\n            } else {\n                console.error('Erreur lors du chargement des tranches:', response.message);\n                setPaymentTranches([]);\n            }\n        } catch (error) {\n            console.error('Erreur lors du chargement des tranches:', error);\n            setPaymentTranches([]);\n        }\n    };\n\n    useEffect(() => {\n        // Update payment amounts when payment tranches are loaded\n        if (paymentTranches.length > 0 && classData) {\n            console.log('Updating payment amounts with tranches loaded');\n            console.log('paymentTranches:', paymentTranches);\n            console.log('classData.payment_amounts:', classData.payment_amounts);\n            \n            const existingAmounts = classData.payment_amounts || [];\n            const updatedAmounts = paymentTranches.map(tranche => {\n                const existing = existingAmounts.find(amount => amount.payment_tranche_id === tranche.id);\n                console.log(`For tranche ${tranche.id} (${tranche.name}), found existing:`, existing);\n                \n                if (existing) {\n                    return {\n                        id: existing.id,\n                        payment_tranche_id: tranche.id,\n                        amount: existing.amount || '',\n                        is_required: existing.is_required !== undefined ? existing.is_required : true\n                    };\n                } else {\n                    return {\n                        payment_tranche_id: tranche.id,\n                        amount: '',\n                        is_required: true\n                    };\n                }\n            });\n            \n            console.log('Final updatedAmounts:', updatedAmounts);\n            \n            setFormData(prev => ({\n                ...prev,\n                payment_amounts: updatedAmounts\n            }));\n        }\n    }, [paymentTranches, classData]);\n\n    const handleLevelChange = (levelId) => {\n        const level = levels.find(l => l.id === parseInt(levelId));\n        setSelectedSectionId(level?.section_id || '');\n        setFormData(prev => ({ ...prev, level_id: levelId }));\n    };\n\n    const handleSeriesChange = (index, field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            series: prev.series.map((serie, i) => \n                i === index ? { ...serie, [field]: value } : serie\n            )\n        }));\n    };\n\n    const addSeries = () => {\n        setFormData(prev => ({\n            ...prev,\n            series: [...prev.series, { name: '', code: '', capacity: '', is_active: true }]\n        }));\n    };\n\n    const removeSeries = (index) => {\n        const serie = formData.series[index];\n        \n        if (serie.id) {\n            // Show confirmation for existing series\n            Swal.fire({\n                title: 'Confirmer la suppression',\n                text: 'Êtes-vous sûr de vouloir supprimer cette série ? Cette action est irréversible.',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#dc3545',\n                cancelButtonColor: '#6c757d',\n                confirmButtonText: 'Supprimer',\n                cancelButtonText: 'Annuler'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    setFormData(prev => ({\n                        ...prev,\n                        series: prev.series.filter((_, i) => i !== index)\n                    }));\n                }\n            });\n        } else {\n            // Remove new series without confirmation\n            setFormData(prev => ({\n                ...prev,\n                series: prev.series.filter((_, i) => i !== index)\n            }));\n        }\n    };\n\n    const handlePaymentAmountChange = (trancheId, field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            payment_amounts: prev.payment_amounts.map(amount =>\n                amount.payment_tranche_id === trancheId \n                    ? { ...amount, [field]: value }\n                    : amount\n            )\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        try {\n            // Validation\n            if (!formData.name.trim()) {\n                Swal.fire('Erreur', 'Le nom de la classe est requis', 'error');\n                return;\n            }\n            \n            if (!formData.level_id) {\n                Swal.fire('Erreur', 'Veuillez sélectionner un niveau', 'error');\n                return;\n            }\n\n            // Validate series\n            for (let i = 0; i < formData.series.length; i++) {\n                const serie = formData.series[i];\n                if (!serie.name.trim()) {\n                    Swal.fire('Erreur', `Le nom de la série ${i + 1} est requis`, 'error');\n                    return;\n                }\n            }\n\n            // Validate payment amounts\n            for (const amount of formData.payment_amounts) {\n                if (amount.amount && isNaN(amount.amount)) {\n                    Swal.fire('Erreur', 'Les montants doivent être des nombres', 'error');\n                    return;\n                }\n            }\n\n            const submissionData = {\n                ...formData,\n                payment_amounts: formData.payment_amounts.filter(amount => \n                    amount.amount\n                )\n            };\n\n            setLoading(true);\n            const response = await secureApiEndpoints.schoolClasses.update(classData.id, submissionData);\n            \n            if (response.success) {\n                Swal.fire('Succès', response.message || 'Classe modifiée avec succès', 'success');\n                onSuccess();\n            } else {\n                Swal.fire('Erreur', response.message || 'Erreur lors de la modification de la classe', 'error');\n            }\n        } catch (error) {\n            console.error('Error updating class:', error);\n            Swal.fire('Erreur', 'Erreur lors de la modification de la classe', 'error');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const getFilteredLevels = () => {\n        return levels.filter(level => level.is_active);\n    };\n\n    return (\n        <Modal show={show} onHide={onHide} size=\"lg\" scrollable>\n            <Modal.Header closeButton>\n                <Modal.Title>Modifier la Classe</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit}>\n                    {/* Informations de base */}\n                    <div className=\"mb-4\">\n                        <h6 className=\"text-primary mb-3\">Informations de Base</h6>\n                        \n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Nom de la classe *</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={formData.name}\n                                        onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                                        placeholder=\"Ex: 6ème A, CP1 B...\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Niveau *</label>\n                                    <select\n                                        className=\"form-select\"\n                                        value={formData.level_id}\n                                        onChange={(e) => handleLevelChange(e.target.value)}\n                                        required\n                                    >\n                                        <option value=\"\">Sélectionner un niveau</option>\n                                        {getFilteredLevels().map(level => (\n                                            <option key={level.id} value={level.id}>\n                                                {level.section?.name} - {level.name}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Description</label>\n                            <textarea\n                                className=\"form-control\"\n                                rows=\"3\"\n                                value={formData.description}\n                                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                                placeholder=\"Description de la classe...\"\n                            />\n                        </div>\n\n                        <div className=\"form-check\">\n                            <input\n                                className=\"form-check-input\"\n                                \n                                type=\"checkbox\"\n                                checked={formData.is_active}\n                                onChange={(e) => setFormData(prev => ({ ...prev, is_active: e.target.checked }))}\n                                id=\"classActive\"\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"classActive\">\n                                Classe active\n                            </label>\n                        </div>\n                    </div>\n\n                    {/* Séries */}\n                    <div className=\"mb-4\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                            <h6 className=\"text-primary mb-0\">\n                                {/* <Users size={16} className=\"me-2\" /> */}\n                                Séries de la Classe\n                            </h6>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-outline-primary\"\n                                onClick={addSeries}\n                            >\n                                <Plus size={16} className=\"me-1\" />\n                                Ajouter Série\n                            </button>\n                        </div>\n\n                        {formData.series.map((serie, index) => (\n                            <div key={index} className=\"card mb-3\">\n                                <div className=\"card-body\">\n                                    <div className=\"d-flex justify-content-between align-items-start mb-3\">\n                                        <h6 className=\"card-title mb-0\">\n                                            Série {index + 1}\n                                            {serie.id && <small className=\"text-muted ms-2\">(Existante)</small>}\n                                        </h6>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-sm btn-outline-danger\"\n                                            onClick={() => removeSeries(index)}\n                                        >\n                                            <Trash2 size={14} />\n                                        </button>\n                                    </div>\n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col-md-4\">\n                                            <div className=\"mb-3\">\n                                                <label className=\"form-label\">Nom *</label>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    value={serie.name}\n                                                    onChange={(e) => handleSeriesChange(index, 'name', e.target.value)}\n                                                    placeholder=\"Ex: A, B, C...\"\n                                                    required\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"mb-3\">\n                                                <label className=\"form-label\">Code</label>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    value={serie.code}\n                                                    onChange={(e) => handleSeriesChange(index, 'code', e.target.value)}\n                                                    placeholder=\"Code optionnel\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"mb-3\">\n                                                <label className=\"form-label\">Capacité</label>\n                                                <input\n                                                    type=\"number\"\n                                                    className=\"form-control\"\n                                                    value={serie.capacity}\n                                                    onChange={(e) => handleSeriesChange(index, 'capacity', e.target.value)}\n                                                    placeholder=\"Nombre max d'élèves\"\n                                                    min=\"1\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-check\">\n                                        <input\n                                            className=\"form-check-input\"\n                                            type=\"checkbox\"\n                                            checked={serie.is_active}\n                                            onChange={(e) => handleSeriesChange(index, 'is_active', e.target.checked)}\n                                            id={`serieActive${index}`}\n                                        />\n                                        <label className=\"form-check-label\" htmlFor={`serieActive${index}`}>\n                                            Série active\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n\n                        {formData.series.length === 0 && (\n                            <div className=\"text-center py-4\">\n                                <p className=\"text-muted mb-3\">Aucune série configurée</p>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-primary\"\n                                    onClick={addSeries}\n                                >\n                                    <Plus size={16} className=\"me-1\" />\n                                    Ajouter la première série\n                                </button>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Montants de paiement */}\n                    <div className=\"mb-4\">\n                        <h6 className=\"text-success mb-3\">\n                            <CreditCard size={16} className=\"me-2\" />\n                            Montants de Paiement\n                            <span className=\"badge bg-info ms-2\">\n                                {paymentTranches.length} tranche{paymentTranches.length > 1 ? 's' : ''}\n                            </span>\n                        </h6>\n                        \n                        {paymentTranches.length === 0 ? (\n                            <div className=\"alert alert-info\">\n                                <p className=\"mb-0\">\n                                    <strong>Aucune tranche de paiement configurée.</strong>\n                                </p>\n                                <small className=\"text-muted\">\n                                    Les tranches de paiement doivent être créées avant de pouvoir configurer les montants des classes.\n                                    Allez dans la section \"Tranches de Paiement\" pour en créer.\n                                </small>\n                            </div>\n                        ) : (\n                            <>\n                                <p className=\"text-muted mb-3\">\n                                    Configurez les montants pour chaque tranche de paiement. Laissez vide pour ne pas configurer une tranche.\n                                </p>\n\n                            {paymentTranches.map((tranche) => {\n                                const paymentAmount = formData.payment_amounts.find(pa => pa.payment_tranche_id === tranche.id);\n                                return (\n                                    <div key={tranche.id} className=\"card mb-3\">\n                                        <div className=\"card-body\">\n                                            <h6 className=\"card-title\">{tranche.name}</h6>\n                                            {tranche.description && (\n                                                <p className=\"text-muted small mb-3\">{tranche.description}</p>\n                                            )}\n                                            \n                                            <div className=\"row\">\n                                                <div className=\"col-md-8\">\n                                                    <div className=\"mb-3\">\n                                                        <label className=\"form-label\">Montant (FCFA)</label>\n                                                        <input\n                                                            type=\"number\"\n                                                            className=\"form-control\"\n                                                            value={paymentAmount?.amount || ''}\n                                                            onChange={(e) => handlePaymentAmountChange(tranche.id, 'amount', e.target.value)}\n                                                            placeholder=\"Montant pour cette tranche\"\n                                                            min=\"0\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-4\">\n                                                    <div className=\"mb-3\">\n                                                        <label className=\"form-label\">Obligatoire</label>\n                                                        <div className=\"form-check mt-2\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                className=\"form-check-input\"\n                                                                id={`required-edit-${tranche.id}`}\n                                                                checked={paymentAmount?.is_required !== false}\n                                                                onChange={(e) => handlePaymentAmountChange(tranche.id, 'is_required', e.target.checked)}\n                                                            />\n                                                            <label className=\"form-check-label\" htmlFor={`required-edit-${tranche.id}`}>\n                                                                Requis\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                            </>\n                        )}\n                    </div>\n                </form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Annuler\n                </Button>\n                <Button \n                    variant=\"primary\" \n                    onClick={handleSubmit}\n                    disabled={loading}\n                >\n                    {loading ? 'Modification...' : 'Modifier la Classe'}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default EditSchoolClass;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}