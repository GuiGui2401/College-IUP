{"ast":null,"code":"/**\n * Scanner de présences pour tout le personnel\n * Gestion unifiée des présences: enseignants, comptables, surveillant général\n */import React,{useState,useEffect,useRef}from'react';import{Card,Button,Alert,Container,Row,Col,Table,Badge,Spinner,ButtonGroup,Form,Modal,ProgressBar,Toast,ToastContainer,Tab,Tabs}from'react-bootstrap';import{QrCodeScan,CheckCircleFill,XCircleFill,Calendar,Clock,ArrowRightCircle,ArrowLeftCircle,PersonBadge,Wifi,WifiOff,CloudArrowUp,CloudArrowDown,ExclamationTriangle,InfoCircle,PersonCheck,PersonX,People,PersonWorkspace,ShieldCheck,Gear,PersonCircle,QrCode,BoxArrowInRight,BoxArrowRight,XCircle}from'react-bootstrap-icons';import{useAuth}from'../../hooks/useAuth';import{secureApiEndpoints}from'../../utils/apiMigration';import QrScanner from'qr-scanner';import Swal from'sweetalert2';// Styles pour les animations\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const styles=`\n@keyframes fadeIn {\n    from { opacity: 0; transform: translateY(-20px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n@keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n}\n.scan-success-card {\n    animation: fadeIn 0.5s ease-in-out;\n}\n.scan-avatar {\n    animation: pulse 0.8s ease-in-out;\n}\n`;const StaffAttendanceScanner=()=>{var _staffTypes$currentSc,_staffTypes$currentSc2,_staffTypes$currentSc3,_staffTypes$currentSc4,_currentScan$attendan;const[isScanning,setIsScanning]=useState(false);const[message,setMessage]=useState('');const[messageType,setMessageType]=useState('info');const[dailyAttendances,setDailyAttendances]=useState([]);const[stats,setStats]=useState({});const[loading,setLoading]=useState(false);const[selectedDate,setSelectedDate]=useState(new Date().toISOString().split('T')[0]);const[selectedStaffType,setSelectedStaffType]=useState('');const[showStatsModal,setShowStatsModal]=useState(false);const[currentScan,setCurrentScan]=useState(null);const[showToast,setShowToast]=useState(false);const[toastMessage,setToastMessage]=useState('');const[isProcessingScan,setIsProcessingScan]=useState(false);const videoRef=useRef(null);const scannerRef=useRef(null);const lastScanTime=useRef(0);const{user}=useAuth();const isOnline=true;// Types de personnel avec leurs icônes et couleurs\nconst staffTypes={teacher:{label:'Enseignants',icon:PersonWorkspace,color:'primary',bgColor:'bg-primary'},accountant:{label:'Comptables',icon:PersonCheck,color:'success',bgColor:'bg-success'},supervisor:{label:'Surveillants Généraux',icon:ShieldCheck,color:'warning',bgColor:'bg-warning'},admin:{label:'Administrateurs',icon:Gear,color:'danger',bgColor:'bg-danger'},bibliothecaire:{label:'Bibliothécaires',icon:PersonBadge,color:'info',bgColor:'bg-info'},secretaire:{label:'Secrétaires',icon:PersonCheck,color:'secondary',bgColor:'bg-secondary'}};useEffect(()=>{loadDailyAttendances();return()=>{if(scannerRef.current){scannerRef.current.destroy();}};},[selectedDate,selectedStaffType]);const loadDailyAttendances=async()=>{try{setLoading(true);const params={date:selectedDate,...(selectedStaffType&&{staff_type:selectedStaffType})};const response=await secureApiEndpoints.staff.getDailyAttendance(params);if(response.success){setDailyAttendances(response.data.attendances||[]);setStats(response.data.stats||{});}else{setMessage('Erreur lors du chargement des présences');setMessageType('danger');}}catch(error){console.error('Error loading attendances:',error);setMessage('Erreur lors du chargement des présences');setMessageType('danger');}finally{setLoading(false);}};const startScanning=async()=>{try{setIsScanning(true);setMessage('Démarrage du scanner...');setMessageType('info');const stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:'environment'}});if(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play();scannerRef.current=new QrScanner(videoRef.current,result=>handleScan(result.data),{highlightScanRegion:true,highlightCodeOutline:true});await scannerRef.current.start();setMessage('Scanner prêt - Pointez vers un QR code du personnel');setMessageType('success');}}catch(error){console.error('Erreur caméra:',error);setMessage('Impossible d\\'accéder à la caméra. Vérifiez les permissions.');setMessageType('danger');setIsScanning(false);}};const stopScanning=()=>{if(scannerRef.current){scannerRef.current.destroy();scannerRef.current=null;}if(videoRef.current&&videoRef.current.srcObject){const tracks=videoRef.current.srcObject.getTracks();tracks.forEach(track=>track.stop());videoRef.current.srcObject=null;}setIsScanning(false);setMessage('Scanner arrêté');setMessageType('info');};const handleScan=async qrCode=>{try{// PROTECTION CONTRE LES SCANS MULTIPLES\nconst currentTime=Date.now();const timeSinceLastScan=currentTime-lastScanTime.current;// Empêcher les scans dans un délai de 3 secondes\nif(timeSinceLastScan<3000){console.log('Scan ignoré - trop récent:',timeSinceLastScan+'ms');return;}// Empêcher les scans multiples si un scan est déjà en cours\nif(isProcessingScan){console.log('Scan ignoré - traitement en cours');return;}setIsProcessingScan(true);lastScanTime.current=currentTime;setMessage('Traitement du scan...');setMessageType('info');const response=await secureApiEndpoints.staff.scanQR({staff_qr_code:qrCode,supervisor_id:user.id,event_type:'auto'});if(response.success){var _staffTypes$staff_mem;const{staff_member,attendance,event_type}=response.data;setCurrentScan({staffMember:staff_member,attendance:attendance,eventType:event_type,scanTime:new Date()// Ajouter l'heure exacte du scan\n});// Auto-masquer après 10 secondes\nsetTimeout(()=>{setCurrentScan(null);},10000);const eventLabel=event_type==='entry'?'Entrée':'Sortie';const staffTypeLabel=((_staffTypes$staff_mem=staffTypes[staff_member.staff_type])===null||_staffTypes$staff_mem===void 0?void 0:_staffTypes$staff_mem.label)||staff_member.role;setToastMessage(`${eventLabel} enregistrée: ${staff_member.name} (${staffTypeLabel})`);setShowToast(true);// Recharger les données\nloadDailyAttendances();// Son de succès (optionnel)\nif('vibrate'in navigator){navigator.vibrate(200);}}else{setMessage(response.message||'Erreur lors du scan');setMessageType('danger');if('vibrate'in navigator){navigator.vibrate([100,100,100]);}}}catch(error){console.error('Erreur scan:',error);setMessage('Erreur lors du traitement du scan');setMessageType('danger');}finally{// Remettre à zéro l'état de traitement\nsetIsProcessingScan(false);}};const getStaffTypeIcon=staffType=>{const typeConfig=staffTypes[staffType];if(!typeConfig)return People;const IconComponent=typeConfig.icon;return/*#__PURE__*/_jsx(IconComponent,{size:16});};const getStaffTypeBadge=staffType=>{const typeConfig=staffTypes[staffType]||{label:staffType,color:'secondary'};return/*#__PURE__*/_jsxs(Badge,{bg:typeConfig.color,className:\"d-flex align-items-center gap-1\",children:[getStaffTypeIcon(staffType),typeConfig.label]});};const formatTime=timestamp=>{return new Date(timestamp).toLocaleTimeString('fr-FR',{hour:'2-digit',minute:'2-digit'});};const getEventBadge=eventType=>{if(eventType==='entry'){return/*#__PURE__*/_jsxs(Badge,{bg:\"success\",children:[/*#__PURE__*/_jsx(ArrowRightCircle,{size:12,className:\"me-1\"}),\"Entr\\xE9e\"]});}else if(eventType==='exit'){return/*#__PURE__*/_jsxs(Badge,{bg:\"danger\",children:[/*#__PURE__*/_jsx(ArrowLeftCircle,{size:12,className:\"me-1\"}),\"Sortie\"]});}return/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:eventType});};const renderStatsCards=()=>{return/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-primary\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-primary\",children:stats.total_present||0}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Pr\\xE9sents\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-danger\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-danger\",children:stats.total_absent||0}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Absents\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-warning\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-warning\",children:stats.total_late||0}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"En retard\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-center border-info\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-info\",children:stats.by_staff_type?Object.keys(stats.by_staff_type).length:0}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Types pr\\xE9sents\"})]})})})]});};// Fonction pour regrouper les présences par personne\nconst groupAttendancesByPerson=()=>{const grouped={};dailyAttendances.forEach(attendance=>{var _attendance$user;const userId=(_attendance$user=attendance.user)===null||_attendance$user===void 0?void 0:_attendance$user.id;if(!userId)return;if(!grouped[userId]){grouped[userId]={user:attendance.user,staff_type:attendance.staff_type,late_minutes:0,entries:[],exits:[],supervisor:attendance.supervisor};}if(attendance.event_type==='entry'){grouped[userId].entries.push(attendance);// Prendre le retard de la première entrée\nif(attendance.late_minutes>0&&grouped[userId].late_minutes===0){grouped[userId].late_minutes=attendance.late_minutes;}}else if(attendance.event_type==='exit'){grouped[userId].exits.push(attendance);}});return Object.values(grouped);};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(\"style\",{children:styles}),/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"d-flex align-items-center gap-2\",children:[/*#__PURE__*/_jsx(People,{size:32,className:\"text-primary\"}),\"Personnel Pr\\xE9sence\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Gestion des pr\\xE9sences du personnel - Surveillant G\\xE9n\\xE9ral\"})]})}),message&&/*#__PURE__*/_jsxs(Alert,{variant:messageType,className:\"mb-4\",children:[messageType==='danger'&&/*#__PURE__*/_jsx(ExclamationTriangle,{className:\"me-2\"}),messageType==='success'&&/*#__PURE__*/_jsx(CheckCircleFill,{className:\"me-2\"}),messageType==='info'&&/*#__PURE__*/_jsx(InfoCircle,{className:\"me-2\"}),isProcessingScan&&/*#__PURE__*/_jsx(Spinner,{size:\"sm\",className:\"me-2\"}),message,isProcessingScan&&/*#__PURE__*/_jsx(\"span\",{className:\"ms-2 text-muted\",children:\"(Traitement en cours...)\"})]}),renderStatsCards(),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value)})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type de personnel\"}),/*#__PURE__*/_jsxs(Form.Select,{value:selectedStaffType,onChange:e=>setSelectedStaffType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Tous les types\"}),Object.entries(staffTypes).map(_ref=>{let[key,config]=_ref;return/*#__PURE__*/_jsx(\"option\",{value:key,children:config.label},key);})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,className:\"d-flex align-items-end\",children:/*#__PURE__*/_jsx(ButtonGroup,{className:\"w-100\",children:!isScanning?/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:startScanning,className:\"d-flex align-items-center justify-content-center gap-2\",children:[/*#__PURE__*/_jsx(QrCodeScan,{size:20}),\"D\\xE9marrer Scanner\"]}):/*#__PURE__*/_jsxs(Button,{variant:\"danger\",onClick:stopScanning,className:\"d-flex align-items-center justify-content-center gap-2\",children:[/*#__PURE__*/_jsx(XCircleFill,{size:20}),\"Arr\\xEAter Scanner\"]})})})]}),isScanning&&/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{className:\"text-center\",children:/*#__PURE__*/_jsx(\"video\",{ref:videoRef,style:{width:'100%',maxWidth:'500px',height:'auto',borderRadius:'10px'}})})})})}),currentScan&&/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{className:\"border-success shadow-sm scan-success-card\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(CheckCircleFill,{className:\"me-2\"}),\"Personnel Scann\\xE9 - \",currentScan.eventType==='entry'?'Entrée':'Sortie']})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsx(Col,{md:3,className:\"text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:`rounded-circle ${((_staffTypes$currentSc=staffTypes[currentScan.staffMember.staff_type])===null||_staffTypes$currentSc===void 0?void 0:_staffTypes$currentSc.bgColor)||'bg-secondary'} d-flex align-items-center justify-content-center mx-auto scan-avatar`,style:{width:'80px',height:'80px'},children:/*#__PURE__*/React.createElement(((_staffTypes$currentSc2=staffTypes[currentScan.staffMember.staff_type])===null||_staffTypes$currentSc2===void 0?void 0:_staffTypes$currentSc2.icon)||PersonCircle,{size:40,className:'text-white'})}),/*#__PURE__*/_jsx(Badge,{bg:((_staffTypes$currentSc3=staffTypes[currentScan.staffMember.staff_type])===null||_staffTypes$currentSc3===void 0?void 0:_staffTypes$currentSc3.color)||'secondary',className:\"position-absolute top-0 start-100 translate-middle\",children:((_staffTypes$currentSc4=staffTypes[currentScan.staffMember.staff_type])===null||_staffTypes$currentSc4===void 0?void 0:_staffTypes$currentSc4.label)||currentScan.staffMember.role})]})}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-2\",children:currentScan.staffMember.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-1\",children:[/*#__PURE__*/_jsx(PersonBadge,{className:\"me-2\"}),\"R\\xF4le: \",currentScan.staffMember.role]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-1\",children:[/*#__PURE__*/_jsx(QrCode,{className:\"me-2\"}),\"Code QR: \",currentScan.staffMember.expected_qr]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-0\",children:[/*#__PURE__*/_jsx(Clock,{className:\"me-2\"}),\"Scann\\xE9 \\xE0: \",currentScan.scanTime?currentScan.scanTime.toLocaleTimeString('fr-FR'):'N/A']})]}),/*#__PURE__*/_jsxs(Col,{md:3,className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`alert alert-${currentScan.eventType==='entry'?'success':'warning'} mb-0`,children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-1\",children:[currentScan.eventType==='entry'?/*#__PURE__*/_jsx(BoxArrowInRight,{className:\"me-2\"}):/*#__PURE__*/_jsx(BoxArrowRight,{className:\"me-2\"}),currentScan.eventType==='entry'?'ENTRÉE':'SORTIE']}),/*#__PURE__*/_jsx(\"small\",{children:((_currentScan$attendan=currentScan.attendance)===null||_currentScan$attendan===void 0?void 0:_currentScan$attendan.late_minutes)>0&&currentScan.eventType==='entry'&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Retard: \",currentScan.attendance.late_minutes,\" min\"]})})]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-secondary\",size:\"sm\",className:\"mt-2\",onClick:()=>setCurrentScan(null),children:[/*#__PURE__*/_jsx(XCircle,{className:\"me-1\"}),\"Fermer\"]})]})]})})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"me-2\"}),\"Pr\\xE9sences du \",new Date(selectedDate).toLocaleDateString('fr-FR')]}),/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",size:\"sm\",onClick:loadDailyAttendances,disabled:loading,children:loading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\"}):'Actualiser'})]}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Chargement des pr\\xE9sences...\"})]}):dailyAttendances.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4 text-muted\",children:[/*#__PURE__*/_jsx(PersonX,{size:48,className:\"mb-3\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Aucune pr\\xE9sence enregistr\\xE9e pour cette date\"})]}):/*#__PURE__*/_jsxs(Table,{responsive:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Personnel\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Entr\\xE9e(s)\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Sortie(s)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Retard\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Superviseur\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:groupAttendancesByPerson().map(personData=>{var _personData$superviso;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(PersonBadge,{className:\"me-2 text-primary\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-bold\",children:personData.user.name}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:personData.user.email})]})]})}),/*#__PURE__*/_jsx(\"td\",{children:getStaffTypeBadge(personData.staff_type)}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:personData.entries.length>0?/*#__PURE__*/_jsx(\"div\",{children:personData.entries.map((entry,index)=>/*#__PURE__*/_jsxs(Badge,{bg:\"success\",className:\"me-1 mb-1\",children:[/*#__PURE__*/_jsx(ArrowRightCircle,{size:12,className:\"me-1\"}),formatTime(entry.scanned_at)]},index))}):/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"-\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:personData.exits.length>0?/*#__PURE__*/_jsx(\"div\",{children:personData.exits.map((exit,index)=>/*#__PURE__*/_jsxs(Badge,{bg:\"danger\",className:\"me-1 mb-1\",children:[/*#__PURE__*/_jsx(ArrowLeftCircle,{size:12,className:\"me-1\"}),formatTime(exit.scanned_at)]},index))}):/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"-\"})}),/*#__PURE__*/_jsx(\"td\",{children:personData.late_minutes>0?/*#__PURE__*/_jsxs(Badge,{bg:\"warning\",children:[\"+\",personData.late_minutes,\"min\"]}):/*#__PURE__*/_jsx(Badge,{bg:\"success\",children:\"\\xC0 l'heure\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:(_personData$superviso=personData.supervisor)===null||_personData$superviso===void 0?void 0:_personData$superviso.name})})]},personData.user.id);})})]})})]})})}),/*#__PURE__*/_jsx(ToastContainer,{position:\"top-end\",className:\"p-3\",children:/*#__PURE__*/_jsx(Toast,{show:showToast,onClose:()=>setShowToast(false),delay:3000,autohide:true,bg:\"success\",children:/*#__PURE__*/_jsxs(Toast.Body,{className:\"text-white\",children:[/*#__PURE__*/_jsx(CheckCircleFill,{className:\"me-2\"}),toastMessage]})})})]});};export default StaffAttendanceScanner;","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","Button","Alert","Container","Row","Col","Table","Badge","Spinner","ButtonGroup","Form","Modal","ProgressBar","Toast","ToastContainer","Tab","Tabs","QrCodeScan","CheckCircleFill","XCircleFill","Calendar","Clock","ArrowRightCircle","ArrowLeftCircle","PersonBadge","Wifi","WifiOff","CloudArrowUp","CloudArrowDown","ExclamationTriangle","InfoCircle","PersonCheck","PersonX","People","PersonWorkspace","ShieldCheck","Gear","PersonCircle","QrCode","BoxArrowInRight","BoxArrowRight","XCircle","useAuth","secureApiEndpoints","QrScanner","Swal","jsx","_jsx","jsxs","_jsxs","styles","StaffAttendanceScanner","_staffTypes$currentSc","_staffTypes$currentSc2","_staffTypes$currentSc3","_staffTypes$currentSc4","_currentScan$attendan","isScanning","setIsScanning","message","setMessage","messageType","setMessageType","dailyAttendances","setDailyAttendances","stats","setStats","loading","setLoading","selectedDate","setSelectedDate","Date","toISOString","split","selectedStaffType","setSelectedStaffType","showStatsModal","setShowStatsModal","currentScan","setCurrentScan","showToast","setShowToast","toastMessage","setToastMessage","isProcessingScan","setIsProcessingScan","videoRef","scannerRef","lastScanTime","user","isOnline","staffTypes","teacher","label","icon","color","bgColor","accountant","supervisor","admin","bibliothecaire","secretaire","loadDailyAttendances","current","destroy","params","date","staff_type","response","staff","getDailyAttendance","success","data","attendances","error","console","startScanning","stream","navigator","mediaDevices","getUserMedia","video","facingMode","srcObject","play","result","handleScan","highlightScanRegion","highlightCodeOutline","start","stopScanning","tracks","getTracks","forEach","track","stop","qrCode","currentTime","now","timeSinceLastScan","log","scanQR","staff_qr_code","supervisor_id","id","event_type","_staffTypes$staff_mem","staff_member","attendance","staffMember","eventType","scanTime","setTimeout","eventLabel","staffTypeLabel","role","name","vibrate","getStaffTypeIcon","staffType","typeConfig","IconComponent","size","getStaffTypeBadge","bg","className","children","formatTime","timestamp","toLocaleTimeString","hour","minute","getEventBadge","renderStatsCards","md","Body","total_present","total_absent","total_late","by_staff_type","Object","keys","length","groupAttendancesByPerson","grouped","_attendance$user","userId","late_minutes","entries","exits","push","values","fluid","variant","Group","Label","Control","type","value","onChange","e","target","Select","map","_ref","key","config","onClick","ref","style","width","maxWidth","height","borderRadius","Header","createElement","expected_qr","toLocaleDateString","disabled","animation","responsive","hover","personData","_personData$superviso","email","entry","index","scanned_at","exit","position","show","onClose","delay","autohide"],"sources":["/var/www/College-IUP/front/src/pages/Attendance/StaffAttendanceScanner.jsx"],"sourcesContent":["/**\n * Scanner de présences pour tout le personnel\n * Gestion unifiée des présences: enseignants, comptables, surveillant général\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { \n    Card, \n    Button, \n    Alert, \n    Container, \n    Row, \n    Col, \n    Table, \n    Badge, \n    Spinner, \n    ButtonGroup, \n    Form,\n    Modal,\n    ProgressBar,\n    Toast,\n    ToastContainer,\n    Tab,\n    Tabs\n} from 'react-bootstrap';\nimport { \n    QrCodeScan, \n    CheckCircleFill, \n    XCircleFill, \n    Calendar, \n    Clock, \n    ArrowRightCircle, \n    ArrowLeftCircle,\n    PersonBadge,\n    Wifi,\n    WifiOff,\n    CloudArrowUp,\n    CloudArrowDown,\n    ExclamationTriangle,\n    InfoCircle,\n    PersonCheck,\n    PersonX,\n    People,\n    PersonWorkspace,\n    ShieldCheck,\n    Gear,\n    PersonCircle,\n    QrCode,\n    BoxArrowInRight,\n    BoxArrowRight,\n    XCircle\n} from 'react-bootstrap-icons';\nimport { useAuth } from '../../hooks/useAuth';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\nimport QrScanner from 'qr-scanner';\nimport Swal from 'sweetalert2';\n\n// Styles pour les animations\nconst styles = `\n@keyframes fadeIn {\n    from { opacity: 0; transform: translateY(-20px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n@keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n}\n.scan-success-card {\n    animation: fadeIn 0.5s ease-in-out;\n}\n.scan-avatar {\n    animation: pulse 0.8s ease-in-out;\n}\n`;\n\nconst StaffAttendanceScanner = () => {\n    const [isScanning, setIsScanning] = useState(false);\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('info');\n    const [dailyAttendances, setDailyAttendances] = useState([]);\n    const [stats, setStats] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n    const [selectedStaffType, setSelectedStaffType] = useState('');\n    const [showStatsModal, setShowStatsModal] = useState(false);\n    const [currentScan, setCurrentScan] = useState(null);\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState('');\n    const [isProcessingScan, setIsProcessingScan] = useState(false);\n\n    const videoRef = useRef(null);\n    const scannerRef = useRef(null);\n    const lastScanTime = useRef(0);\n    const { user } = useAuth();\n    const isOnline = true;\n\n    // Types de personnel avec leurs icônes et couleurs\n    const staffTypes = {\n        teacher: { \n            label: 'Enseignants', \n            icon: PersonWorkspace, \n            color: 'primary',\n            bgColor: 'bg-primary'\n        },\n        accountant: { \n            label: 'Comptables', \n            icon: PersonCheck, \n            color: 'success',\n            bgColor: 'bg-success'\n        },\n        supervisor: { \n            label: 'Surveillants Généraux', \n            icon: ShieldCheck, \n            color: 'warning',\n            bgColor: 'bg-warning'\n        },\n        admin: { \n            label: 'Administrateurs', \n            icon: Gear, \n            color: 'danger',\n            bgColor: 'bg-danger'\n        },\n        bibliothecaire: { \n            label: 'Bibliothécaires', \n            icon: PersonBadge, \n            color: 'info',\n            bgColor: 'bg-info'\n        },\n        secretaire: { \n            label: 'Secrétaires', \n            icon: PersonCheck, \n            color: 'secondary',\n            bgColor: 'bg-secondary'\n        }\n    };\n\n    useEffect(() => {\n        loadDailyAttendances();\n        return () => {\n            if (scannerRef.current) {\n                scannerRef.current.destroy();\n            }\n        };\n    }, [selectedDate, selectedStaffType]);\n\n    const loadDailyAttendances = async () => {\n        try {\n            setLoading(true);\n            const params = {\n                date: selectedDate,\n                ...(selectedStaffType && { staff_type: selectedStaffType })\n            };\n\n            const response = await secureApiEndpoints.staff.getDailyAttendance(params);\n            \n            if (response.success) {\n                setDailyAttendances(response.data.attendances || []);\n                setStats(response.data.stats || {});\n            } else {\n                setMessage('Erreur lors du chargement des présences');\n                setMessageType('danger');\n            }\n        } catch (error) {\n            console.error('Error loading attendances:', error);\n            setMessage('Erreur lors du chargement des présences');\n            setMessageType('danger');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const startScanning = async () => {\n        try {\n            setIsScanning(true);\n            setMessage('Démarrage du scanner...');\n            setMessageType('info');\n\n            const stream = await navigator.mediaDevices.getUserMedia({ \n                video: { facingMode: 'environment' } \n            });\n            \n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                videoRef.current.play();\n\n                scannerRef.current = new QrScanner(\n                    videoRef.current,\n                    (result) => handleScan(result.data),\n                    {\n                        highlightScanRegion: true,\n                        highlightCodeOutline: true,\n                    }\n                );\n\n                await scannerRef.current.start();\n                setMessage('Scanner prêt - Pointez vers un QR code du personnel');\n                setMessageType('success');\n            }\n        } catch (error) {\n            console.error('Erreur caméra:', error);\n            setMessage('Impossible d\\'accéder à la caméra. Vérifiez les permissions.');\n            setMessageType('danger');\n            setIsScanning(false);\n        }\n    };\n\n    const stopScanning = () => {\n        if (scannerRef.current) {\n            scannerRef.current.destroy();\n            scannerRef.current = null;\n        }\n        \n        if (videoRef.current && videoRef.current.srcObject) {\n            const tracks = videoRef.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n        }\n        \n        setIsScanning(false);\n        setMessage('Scanner arrêté');\n        setMessageType('info');\n    };\n\n    const handleScan = async (qrCode) => {\n        try {\n            // PROTECTION CONTRE LES SCANS MULTIPLES\n            const currentTime = Date.now();\n            const timeSinceLastScan = currentTime - lastScanTime.current;\n            \n            // Empêcher les scans dans un délai de 3 secondes\n            if (timeSinceLastScan < 3000) {\n                console.log('Scan ignoré - trop récent:', timeSinceLastScan + 'ms');\n                return;\n            }\n            \n            // Empêcher les scans multiples si un scan est déjà en cours\n            if (isProcessingScan) {\n                console.log('Scan ignoré - traitement en cours');\n                return;\n            }\n            \n            setIsProcessingScan(true);\n            lastScanTime.current = currentTime;\n            \n            setMessage('Traitement du scan...');\n            setMessageType('info');\n            \n            const response = await secureApiEndpoints.staff.scanQR({\n                staff_qr_code: qrCode,\n                supervisor_id: user.id,\n                event_type: 'auto'\n            });\n\n            if (response.success) {\n                const { staff_member, attendance, event_type } = response.data;\n                \n                setCurrentScan({\n                    staffMember: staff_member,\n                    attendance: attendance,\n                    eventType: event_type,\n                    scanTime: new Date()  // Ajouter l'heure exacte du scan\n                });\n\n                // Auto-masquer après 10 secondes\n                setTimeout(() => {\n                    setCurrentScan(null);\n                }, 10000);\n\n                const eventLabel = event_type === 'entry' ? 'Entrée' : 'Sortie';\n                const staffTypeLabel = staffTypes[staff_member.staff_type]?.label || staff_member.role;\n                \n                setToastMessage(\n                    `${eventLabel} enregistrée: ${staff_member.name} (${staffTypeLabel})`\n                );\n                setShowToast(true);\n\n                // Recharger les données\n                loadDailyAttendances();\n                \n                // Son de succès (optionnel)\n                if ('vibrate' in navigator) {\n                    navigator.vibrate(200);\n                }\n\n            } else {\n                setMessage(response.message || 'Erreur lors du scan');\n                setMessageType('danger');\n                \n                if ('vibrate' in navigator) {\n                    navigator.vibrate([100, 100, 100]);\n                }\n            }\n        } catch (error) {\n            console.error('Erreur scan:', error);\n            setMessage('Erreur lors du traitement du scan');\n            setMessageType('danger');\n        } finally {\n            // Remettre à zéro l'état de traitement\n            setIsProcessingScan(false);\n        }\n    };\n\n    const getStaffTypeIcon = (staffType) => {\n        const typeConfig = staffTypes[staffType];\n        if (!typeConfig) return People;\n        \n        const IconComponent = typeConfig.icon;\n        return <IconComponent size={16} />;\n    };\n\n    const getStaffTypeBadge = (staffType) => {\n        const typeConfig = staffTypes[staffType] || { label: staffType, color: 'secondary' };\n        return (\n            <Badge bg={typeConfig.color} className=\"d-flex align-items-center gap-1\">\n                {getStaffTypeIcon(staffType)}\n                {typeConfig.label}\n            </Badge>\n        );\n    };\n\n    const formatTime = (timestamp) => {\n        return new Date(timestamp).toLocaleTimeString('fr-FR', {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const getEventBadge = (eventType) => {\n        if (eventType === 'entry') {\n            return <Badge bg=\"success\"><ArrowRightCircle size={12} className=\"me-1\" />Entrée</Badge>;\n        } else if (eventType === 'exit') {\n            return <Badge bg=\"danger\"><ArrowLeftCircle size={12} className=\"me-1\" />Sortie</Badge>;\n        }\n        return <Badge bg=\"info\">{eventType}</Badge>;\n    };\n\n    const renderStatsCards = () => {\n        return (\n            <Row className=\"mb-4\">\n                <Col md={3}>\n                    <Card className=\"text-center border-primary\">\n                        <Card.Body>\n                            <h5 className=\"text-primary\">{stats.total_present || 0}</h5>\n                            <small className=\"text-muted\">Présents</small>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3}>\n                    <Card className=\"text-center border-danger\">\n                        <Card.Body>\n                            <h5 className=\"text-danger\">{stats.total_absent || 0}</h5>\n                            <small className=\"text-muted\">Absents</small>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3}>\n                    <Card className=\"text-center border-warning\">\n                        <Card.Body>\n                            <h5 className=\"text-warning\">{stats.total_late || 0}</h5>\n                            <small className=\"text-muted\">En retard</small>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={3}>\n                    <Card className=\"text-center border-info\">\n                        <Card.Body>\n                            <h5 className=\"text-info\">\n                                {stats.by_staff_type ? Object.keys(stats.by_staff_type).length : 0}\n                            </h5>\n                            <small className=\"text-muted\">Types présents</small>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    };\n\n    // Fonction pour regrouper les présences par personne\n    const groupAttendancesByPerson = () => {\n        const grouped = {};\n        \n        dailyAttendances.forEach(attendance => {\n            const userId = attendance.user?.id;\n            if (!userId) return;\n            \n            if (!grouped[userId]) {\n                grouped[userId] = {\n                    user: attendance.user,\n                    staff_type: attendance.staff_type,\n                    late_minutes: 0,\n                    entries: [],\n                    exits: [],\n                    supervisor: attendance.supervisor\n                };\n            }\n            \n            if (attendance.event_type === 'entry') {\n                grouped[userId].entries.push(attendance);\n                // Prendre le retard de la première entrée\n                if (attendance.late_minutes > 0 && grouped[userId].late_minutes === 0) {\n                    grouped[userId].late_minutes = attendance.late_minutes;\n                }\n            } else if (attendance.event_type === 'exit') {\n                grouped[userId].exits.push(attendance);\n            }\n        });\n        \n        return Object.values(grouped);\n    };\n\n    return (\n        <Container fluid className=\"py-4\">\n            <style>{styles}</style>\n            {/* Header */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <h2 className=\"d-flex align-items-center gap-2\">\n                        <People size={32} className=\"text-primary\" />\n                        Personnel Présence\n                    </h2>\n                    <p className=\"text-muted\">\n                        Gestion des présences du personnel - Surveillant Général\n                    </p>\n                </Col>\n            </Row>\n\n            {/* Message d'état */}\n            {message && (\n                <Alert variant={messageType} className=\"mb-4\">\n                    {messageType === 'danger' && <ExclamationTriangle className=\"me-2\" />}\n                    {messageType === 'success' && <CheckCircleFill className=\"me-2\" />}\n                    {messageType === 'info' && <InfoCircle className=\"me-2\" />}\n                    {isProcessingScan && <Spinner size=\"sm\" className=\"me-2\" />}\n                    {message}\n                    {isProcessingScan && <span className=\"ms-2 text-muted\">(Traitement en cours...)</span>}\n                </Alert>\n            )}\n\n            {/* Statistiques */}\n            {renderStatsCards()}\n\n            {/* Contrôles */}\n            <Row className=\"mb-4\">\n                <Col md={4}>\n                    <Form.Group>\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control\n                            type=\"date\"\n                            value={selectedDate}\n                            onChange={(e) => setSelectedDate(e.target.value)}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={4}>\n                    <Form.Group>\n                        <Form.Label>Type de personnel</Form.Label>\n                        <Form.Select\n                            value={selectedStaffType}\n                            onChange={(e) => setSelectedStaffType(e.target.value)}\n                        >\n                            <option value=\"\">Tous les types</option>\n                            {Object.entries(staffTypes).map(([key, config]) => (\n                                <option key={key} value={key}>{config.label}</option>\n                            ))}\n                        </Form.Select>\n                    </Form.Group>\n                </Col>\n                <Col md={4} className=\"d-flex align-items-end\">\n                    <ButtonGroup className=\"w-100\">\n                        {!isScanning ? (\n                            <Button \n                                variant=\"primary\" \n                                onClick={startScanning}\n                                className=\"d-flex align-items-center justify-content-center gap-2\"\n                            >\n                                <QrCodeScan size={20} />\n                                Démarrer Scanner\n                            </Button>\n                        ) : (\n                            <Button \n                                variant=\"danger\" \n                                onClick={stopScanning}\n                                className=\"d-flex align-items-center justify-content-center gap-2\"\n                            >\n                                <XCircleFill size={20} />\n                                Arrêter Scanner\n                            </Button>\n                        )}\n                    </ButtonGroup>\n                </Col>\n            </Row>\n\n            {/* Scanner vidéo */}\n            {isScanning && (\n                <Row className=\"mb-4\">\n                    <Col>\n                        <Card>\n                            <Card.Body className=\"text-center\">\n                                <video\n                                    ref={videoRef}\n                                    style={{\n                                        width: '100%',\n                                        maxWidth: '500px',\n                                        height: 'auto',\n                                        borderRadius: '10px'\n                                    }}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n\n            {/* Informations du personnel scanné */}\n            {currentScan && (\n                <Row className=\"mb-4\">\n                    <Col>\n                        <Card className=\"border-success shadow-sm scan-success-card\">\n                            <Card.Header className=\"bg-success text-white\">\n                                <h5 className=\"mb-0\">\n                                    <CheckCircleFill className=\"me-2\" />\n                                    Personnel Scanné - {currentScan.eventType === 'entry' ? 'Entrée' : 'Sortie'}\n                                </h5>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row className=\"align-items-center\">\n                                    <Col md={3} className=\"text-center\">\n                                        <div className=\"position-relative\">\n                                            <div className={`rounded-circle ${staffTypes[currentScan.staffMember.staff_type]?.bgColor || 'bg-secondary'} d-flex align-items-center justify-content-center mx-auto scan-avatar`} \n                                                 style={{ width: '80px', height: '80px' }}>\n                                                {React.createElement(staffTypes[currentScan.staffMember.staff_type]?.icon || PersonCircle, \n                                                    { size: 40, className: 'text-white' })}\n                                            </div>\n                                            <Badge \n                                                bg={staffTypes[currentScan.staffMember.staff_type]?.color || 'secondary'} \n                                                className=\"position-absolute top-0 start-100 translate-middle\"\n                                            >\n                                                {staffTypes[currentScan.staffMember.staff_type]?.label || currentScan.staffMember.role}\n                                            </Badge>\n                                        </div>\n                                    </Col>\n                                    <Col md={6}>\n                                        <h4 className=\"mb-2\">{currentScan.staffMember.name}</h4>\n                                        <p className=\"text-muted mb-1\">\n                                            <PersonBadge className=\"me-2\" />\n                                            Rôle: {currentScan.staffMember.role}\n                                        </p>\n                                        <p className=\"text-muted mb-1\">\n                                            <QrCode className=\"me-2\" />\n                                            Code QR: {currentScan.staffMember.expected_qr}\n                                        </p>\n                                        <p className=\"text-muted mb-0\">\n                                            <Clock className=\"me-2\" />\n                                            Scanné à: {currentScan.scanTime ? currentScan.scanTime.toLocaleTimeString('fr-FR') : 'N/A'}\n                                        </p>\n                                    </Col>\n                                    <Col md={3} className=\"text-center\">\n                                        <div className={`alert alert-${currentScan.eventType === 'entry' ? 'success' : 'warning'} mb-0`}>\n                                            <h5 className=\"mb-1\">\n                                                {currentScan.eventType === 'entry' ? (\n                                                    <BoxArrowInRight className=\"me-2\" />\n                                                ) : (\n                                                    <BoxArrowRight className=\"me-2\" />\n                                                )}\n                                                {currentScan.eventType === 'entry' ? 'ENTRÉE' : 'SORTIE'}\n                                            </h5>\n                                            <small>\n                                                {currentScan.attendance?.late_minutes > 0 && currentScan.eventType === 'entry' && (\n                                                    <span className=\"text-danger\">\n                                                        Retard: {currentScan.attendance.late_minutes} min\n                                                    </span>\n                                                )}\n                                            </small>\n                                        </div>\n                                        <Button \n                                            variant=\"outline-secondary\" \n                                            size=\"sm\" \n                                            className=\"mt-2\"\n                                            onClick={() => setCurrentScan(null)}\n                                        >\n                                            <XCircle className=\"me-1\" />\n                                            Fermer\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n\n            {/* Liste des présences */}\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                            <h5 className=\"mb-0\">\n                                <Calendar className=\"me-2\" />\n                                Présences du {new Date(selectedDate).toLocaleDateString('fr-FR')}\n                            </h5>\n                            <Button \n                                variant=\"outline-primary\" \n                                size=\"sm\"\n                                onClick={loadDailyAttendances}\n                                disabled={loading}\n                            >\n                                {loading ? <Spinner size=\"sm\" /> : 'Actualiser'}\n                            </Button>\n                        </Card.Header>\n                        <Card.Body>\n                            {loading ? (\n                                <div className=\"text-center py-4\">\n                                    <Spinner animation=\"border\" />\n                                    <p className=\"mt-2\">Chargement des présences...</p>\n                                </div>\n                            ) : dailyAttendances.length === 0 ? (\n                                <div className=\"text-center py-4 text-muted\">\n                                    <PersonX size={48} className=\"mb-3\" />\n                                    <p>Aucune présence enregistrée pour cette date</p>\n                                </div>\n                            ) : (\n                                <Table responsive hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Personnel</th>\n                                            <th>Type</th>\n                                            <th className=\"text-center\">Entrée(s)</th>\n                                            <th className=\"text-center\">Sortie(s)</th>\n                                            <th>Retard</th>\n                                            <th>Superviseur</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {groupAttendancesByPerson().map((personData) => (\n                                            <tr key={personData.user.id}>\n                                                <td>\n                                                    <div className=\"d-flex align-items-center\">\n                                                        <PersonBadge className=\"me-2 text-primary\" />\n                                                        <div>\n                                                            <div className=\"fw-bold\">{personData.user.name}</div>\n                                                            <small className=\"text-muted\">{personData.user.email}</small>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td>{getStaffTypeBadge(personData.staff_type)}</td>\n                                                <td className=\"text-center\">\n                                                    {personData.entries.length > 0 ? (\n                                                        <div>\n                                                            {personData.entries.map((entry, index) => (\n                                                                <Badge key={index} bg=\"success\" className=\"me-1 mb-1\">\n                                                                    <ArrowRightCircle size={12} className=\"me-1\" />\n                                                                    {formatTime(entry.scanned_at)}\n                                                                </Badge>\n                                                            ))}\n                                                        </div>\n                                                    ) : (\n                                                        <span className=\"text-muted\">-</span>\n                                                    )}\n                                                </td>\n                                                <td className=\"text-center\">\n                                                    {personData.exits.length > 0 ? (\n                                                        <div>\n                                                            {personData.exits.map((exit, index) => (\n                                                                <Badge key={index} bg=\"danger\" className=\"me-1 mb-1\">\n                                                                    <ArrowLeftCircle size={12} className=\"me-1\" />\n                                                                    {formatTime(exit.scanned_at)}\n                                                                </Badge>\n                                                            ))}\n                                                        </div>\n                                                    ) : (\n                                                        <span className=\"text-muted\">-</span>\n                                                    )}\n                                                </td>\n                                                <td>\n                                                    {personData.late_minutes > 0 ? (\n                                                        <Badge bg=\"warning\">+{personData.late_minutes}min</Badge>\n                                                    ) : (\n                                                        <Badge bg=\"success\">À l'heure</Badge>\n                                                    )}\n                                                </td>\n                                                <td>\n                                                    <small className=\"text-muted\">\n                                                        {personData.supervisor?.name}\n                                                    </small>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* Toast notifications */}\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast \n                    show={showToast} \n                    onClose={() => setShowToast(false)} \n                    delay={3000} \n                    autohide\n                    bg=\"success\"\n                >\n                    <Toast.Body className=\"text-white\">\n                        <CheckCircleFill className=\"me-2\" />\n                        {toastMessage}\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </Container>\n    );\n};\n\nexport default StaffAttendanceScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}