{"ast":null,"code":"import{host}from'./fetch';import{withRateLimit}from'./rateLimiter';import{authService}from'../services/authService';/**\n * Configuration par défaut pour les requêtes API\n */const DEFAULT_CONFIG={timeout:30000,// 30 secondes\nretries:3,retryDelay:1000,// 1 seconde\nmaxRetryDelay:10000// 10 secondes maximuma\n};/**\n * Types d'erreurs personnalisées\n */export class NetworkError extends Error{constructor(message,status){super(message);this.name='NetworkError';this.status=status;}}export class TimeoutError extends Error{constructor(message){super(message);this.name='TimeoutError';}}export class ValidationError extends Error{constructor(message,errors){super(message);this.name='ValidationError';this.errors=errors;}}/**\n * Fonction utilitaire pour créer un délai\n */const delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));/**\n * Fonction utilitaire pour créer un timeout\n */const withTimeout=(promise,timeoutMs)=>{return Promise.race([promise,new Promise((_,reject)=>setTimeout(()=>reject(new TimeoutError(`Request timeout after ${timeoutMs}ms`)),timeoutMs))]);};/**\n * Gestionnaire d'erreurs centralisé\n */export const handleApiError=function(error){let showUserMessage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;console.error('API Error:',error);let userMessage='Une erreur inattendue s\\'est produite';if(error instanceof NetworkError){if(error.status===401){userMessage='Session expirée. Veuillez vous reconnecter.';// Rediriger vers la page de connexion\nif(typeof window!=='undefined'){authService.removeToken();window.location.href='/login';return;}}else if(error.status===403){userMessage='Vous n\\'avez pas les permissions nécessaires.';}else if(error.status===404){userMessage='Ressource non trouvée.';}else if(error.status===429){userMessage='Trop de requêtes. Veuillez patienter un moment avant de réessayer.';}else if(error.status===500){userMessage='Erreur du serveur. Veuillez réessayer plus tard.';}else if(error.status>=400){userMessage=error.message||'Erreur de requête.';}}else if(error instanceof TimeoutError){userMessage='La requête a pris trop de temps. Vérifiez votre connexion.';}else if(error instanceof ValidationError){userMessage=error.message||'Données invalides.';}else if(error.name==='TypeError'&&error.message.includes('fetch')){userMessage='Impossible de se connecter au serveur. Vérifiez votre connexion.';}if(showUserMessage&&typeof window!=='undefined'){// Utiliser une notification toast si disponible, sinon alert\nif(window.Swal){window.Swal.fire({title:'Erreur',text:userMessage,icon:'error',confirmButtonText:'OK'});}else{console.log(userMessage);}}return{error,userMessage};};/**\n * Fonction de fetch sécurisée avec gestion d'erreurs et retry\n */export const safeFetch=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const{timeout=DEFAULT_CONFIG.timeout,retries=DEFAULT_CONFIG.retries,retryDelay=DEFAULT_CONFIG.retryDelay,maxRetryDelay=DEFAULT_CONFIG.maxRetryDelay// showUserMessage = true\n}=config;// Configuration par défaut des headers\nconst token=authService.getToken();console.log('API Debug - Token found:',!!token);if(token){console.log('Token preview:',token.substring(0,20)+'...');}const defaultHeaders={'Content-Type':'application/json',...(token&&{'Authorization':`Bearer ${token}`})};const fetchOptions={...options,headers:{...defaultHeaders,...options.headers}};// Construire l'URL complète\nconst fullUrl=url.startsWith('http')?url:`${host}/api${url}`;let lastError;for(let attempt=0;attempt<=retries;attempt++){try{// Ajouter un délai entre les tentatives (sauf pour la première)\nif(attempt>0){// Délai exponentiel pour les erreurs 429, linéaire pour les autres\nconst isRateLimitError=lastError instanceof NetworkError&&lastError.status===429;const delayTime=isRateLimitError?Math.min(retryDelay*Math.pow(2,attempt),maxRetryDelay):retryDelay*attempt;console.log(`Waiting ${delayTime}ms before retry attempt ${attempt}...`);await delay(delayTime);}const response=await withTimeout(withRateLimit(()=>fetch(fullUrl,fetchOptions)),timeout);// Vérifier si la réponse est OK\nif(!response.ok){const errorData=await response.json().catch(()=>({}));throw new NetworkError(errorData.message||`HTTP ${response.status}: ${response.statusText}`,response.status);}// Tenter de parser en JSON\nconst data=await response.json();// Vérifier si l'API retourne une erreur dans les données\nif(data.success===false){throw new ValidationError(data.message||'Erreur de validation',data.errors);}return data;}catch(error){lastError=error;// Ne pas retry pour certains types d'erreurs (sauf 429)\nif(error instanceof NetworkError&&[401,403,404,422].includes(error.status)){break;}// Pour les erreurs 429, on continue à retry mais avec plus de délai\nif(error instanceof NetworkError&&error.status===429){console.warn(`Rate limit hit (429), will retry with exponential backoff...`);}if(error instanceof ValidationError){break;}// Si c'est la dernière tentative, on break\nif(attempt===retries){break;}console.warn(`Attempt ${attempt+1} failed, retrying...`,error.message);}}// Gérer l'erreur finale\n// const errorResult = handleApiError(lastError, showUserMessage);\nthrow lastError;};/**\n * Méthodes de convenance pour les requêtes HTTP\n */export const api={get:function(url){let config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return safeFetch(url,{method:'GET'},config);},post:function(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return safeFetch(url,{method:'POST',body:JSON.stringify(data)},config);},put:function(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return safeFetch(url,{method:'PUT',body:JSON.stringify(data)},config);},delete:function(url){let config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return safeFetch(url,{method:'DELETE'},config);},patch:function(url,data){let config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return safeFetch(url,{method:'PATCH',body:JSON.stringify(data)},config);}};/**\n * Fonctions spécifiques pour l'application\n */export const apiEndpoints={// Authentication\nlogin:credentials=>api.post('/auth/login',credentials),logout:()=>api.post('/auth/logout'),//users\ngetAdminOrTeacher:()=>api.get(`/users/getTeacherOrAdmin`),getUserInfos:()=>api.get('/users/getInfos'),getAllUsers:()=>api.get('/users/all'),// Teachers\ngetAllTeachers:()=>api.get('/teachers/getAll'),getTeacher:id=>api.get(`/teachers/${id}`),addTeacher:data=>api.post('/teachers/add',data),updateTeacher:(id,data)=>api.put(`/teachers/${id}`,data),deleteTeacher:id=>api.delete(`/teachers/${id}`),regenerateTeacherPasswords:()=>api.get('/teachers/regeneratePassword'),// Students\ngetAllStudents:()=>api.get('/students/getAll'),getStudentsByClass:classId=>api.get(`/students/${classId}`),getOrderedStudents:classId=>api.get(`/students/getOrdonnedStudents/${classId}`),getOneStudent:id=>api.get(`/students/one/${id}`),addStudent:(classId,data)=>api.post(`/students/add/${classId}`,data),updateStudent:(id,data)=>api.put(`/students/${id}`,data),deleteStudent:id=>api.delete(`/students/${id}`),getStudentSettings:()=>api.get('/students/gs'),// Classes\ngetAllClasses:()=>api.get('/class/getAll'),getOneClass:id=>api.get(`/class/${id}`),addClass:data=>api.post('/class/add',data),updateClass:(id,data)=>api.put(`/class/${id}`,data),deleteClass:id=>api.delete(`/class/${id}`),// Sections\ngetAllSections:()=>api.get('/sections'),getOneSection:id=>api.get(`/sections/${id}`),addSection:data=>api.post('/sections/store',data),updateSection:(id,data)=>api.put(`/sections/${id}`,data),deleteSection:id=>api.delete(`/sections/${id}`),exportSections:function(format){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const params=new URLSearchParams(filters);return api.get(`/sections/export/${format}?${params}`);},importSections:file=>{const formData=new FormData();formData.append('file',file);return api.post('/sections/import/csv',formData,{headers:{'Content-Type':'multipart/form-data'}});},// Sequences\ngetAllSequences:()=>api.get('/seq/getAll'),getOneSequence:id=>api.get(`/seq/${id}`),addSequence:data=>api.post('/seq/add',data),updateSequence:(id,data)=>api.put(`/seq/${id}`,data),deleteSequence:id=>api.delete(`/seq/${id}`),// Trimesters\ngetAllTrimesters:()=>api.get('/trim/getAll'),getOneTrimester:id=>api.get(`/trim/${id}`),addTrimester:data=>api.post('/trim/add',data),updateTrimester:(id,data)=>api.put(`/trim/${id}`,data),deleteTrimester:id=>api.delete(`/trim/${id}`),// Annual Exams\ngetAllAnnualExams:()=>api.get('/annuals/all'),getOneAnnualExam:id=>api.get(`/annuals/${id}`),addAnnualExam:data=>api.post('/annuals/add',data),updateAnnualExam:(id,data)=>api.put(`/annuals/${id}`,data),deleteAnnualExam:id=>api.delete(`/annuals/${id}`),// Settings\ngetSettings:()=>api.get('/settings/getSettings'),updateSettings:data=>api.post('/settings/setSettings',data),// Payment Tranches\ngetAllPaymentTranches:()=>api.get('/payment-tranches'),getPaymentTranche:id=>api.get(`/payment-tranches/${id}`),addPaymentTranche:data=>api.post('/payment-tranches',data),updatePaymentTranche:(id,data)=>api.put(`/payment-tranches/${id}`,data),deletePaymentTranche:id=>api.delete(`/payment-tranches/${id}`),reorderPaymentTranches:data=>api.post('/payment-tranches/reorder',data),// Levels\ngetAllLevels:function(){let sectionId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const url=sectionId?`/levels?section_id=${sectionId}`:'/levels';return api.get(url);},getLevel:id=>api.get(`/levels/${id}`),addLevel:data=>api.post('/levels',data),updateLevel:(id,data)=>api.put(`/levels/${id}`,data),deleteLevel:id=>api.delete(`/levels/${id}`),// School Classes\ngetAllSchoolClasses:function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();if(filters.section_id)params.append('section_id',filters.section_id);if(filters.level_id)params.append('level_id',filters.level_id);const url=params.toString()?`/school-classes?${params}`:'/school-classes';return api.get(url);},getSchoolClass:id=>api.get(`/school-classes/${id}`),addSchoolClass:data=>api.post('/school-classes',data),updateSchoolClass:(id,data)=>api.put(`/school-classes/${id}`,data),deleteSchoolClass:id=>api.delete(`/school-classes/${id}`),configureClassPayments:(id,data)=>api.post(`/school-classes/${id}/configure-payments`,data),exportSchoolClasses:function(format){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const params=new URLSearchParams(filters);return api.get(`/school-classes/export/${format}?${params}`);},importSchoolClasses:file=>{const formData=new FormData();formData.append('file',file);return api.post('/school-classes/import/csv',formData,{headers:{'Content-Type':'multipart/form-data'}});},// Levels \nexportLevels:function(format){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const params=new URLSearchParams(filters);return api.get(`/levels/export/${format}?${params}`);},importLevels:file=>{const formData=new FormData();formData.append('file',file);return api.post('/levels/import/csv',formData,{headers:{'Content-Type':'multipart/form-data'}});},// Students\nexportStudents:function(format,seriesId){let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams(filters);return api.get(`/students/export/${format}/${seriesId}?${params}`);},importStudents:file=>{const formData=new FormData();formData.append('file',file);return api.post('/students/import/csv',formData,{headers:{'Content-Type':'multipart/form-data'}});}};export default api;","map":{"version":3,"names":["host","withRateLimit","authService","DEFAULT_CONFIG","timeout","retries","retryDelay","maxRetryDelay","NetworkError","Error","constructor","message","status","name","TimeoutError","ValidationError","errors","delay","ms","Promise","resolve","setTimeout","withTimeout","promise","timeoutMs","race","_","reject","handleApiError","error","showUserMessage","arguments","length","undefined","console","userMessage","window","removeToken","location","href","includes","Swal","fire","title","text","icon","confirmButtonText","log","safeFetch","url","options","config","token","getToken","substring","defaultHeaders","fetchOptions","headers","fullUrl","startsWith","lastError","attempt","isRateLimitError","delayTime","Math","min","pow","response","fetch","ok","errorData","json","catch","statusText","data","success","warn","api","get","method","post","body","JSON","stringify","put","delete","patch","apiEndpoints","login","credentials","logout","getAdminOrTeacher","getUserInfos","getAllUsers","getAllTeachers","getTeacher","id","addTeacher","updateTeacher","deleteTeacher","regenerateTeacherPasswords","getAllStudents","getStudentsByClass","classId","getOrderedStudents","getOneStudent","addStudent","updateStudent","deleteStudent","getStudentSettings","getAllClasses","getOneClass","addClass","updateClass","deleteClass","getAllSections","getOneSection","addSection","updateSection","deleteSection","exportSections","format","filters","params","URLSearchParams","importSections","file","formData","FormData","append","getAllSequences","getOneSequence","addSequence","updateSequence","deleteSequence","getAllTrimesters","getOneTrimester","addTrimester","updateTrimester","deleteTrimester","getAllAnnualExams","getOneAnnualExam","addAnnualExam","updateAnnualExam","deleteAnnualExam","getSettings","updateSettings","getAllPaymentTranches","getPaymentTranche","addPaymentTranche","updatePaymentTranche","deletePaymentTranche","reorderPaymentTranches","getAllLevels","sectionId","getLevel","addLevel","updateLevel","deleteLevel","getAllSchoolClasses","section_id","level_id","toString","getSchoolClass","addSchoolClass","updateSchoolClass","deleteSchoolClass","configureClassPayments","exportSchoolClasses","importSchoolClasses","exportLevels","importLevels","exportStudents","seriesId","importStudents"],"sources":["/var/www/College-IUP/front/src/utils/api.js"],"sourcesContent":["import { host } from './fetch';\nimport { withRateLimit } from './rateLimiter';\nimport { authService } from '../services/authService';\n\n/**\n * Configuration par défaut pour les requêtes API\n */\nconst DEFAULT_CONFIG = {\n    timeout: 30000, // 30 secondes\n    retries: 3,\n    retryDelay: 1000, // 1 seconde\n    maxRetryDelay: 10000, // 10 secondes maximuma\n};\n\n/**\n * Types d'erreurs personnalisées\n */\nexport class NetworkError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.name = 'NetworkError';\n        this.status = status;\n    }\n}\n\nexport class TimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'TimeoutError';\n    }\n}\n\nexport class ValidationError extends Error {\n    constructor(message, errors) {\n        super(message);\n        this.name = 'ValidationError';\n        this.errors = errors;\n    }\n}\n\n/**\n * Fonction utilitaire pour créer un délai\n */\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * Fonction utilitaire pour créer un timeout\n */\nconst withTimeout = (promise, timeoutMs) => {\n    return Promise.race([\n        promise,\n        new Promise((_, reject) => \n            setTimeout(() => reject(new TimeoutError(`Request timeout after ${timeoutMs}ms`)), timeoutMs)\n        )\n    ]);\n};\n\n/**\n * Gestionnaire d'erreurs centralisé\n */\nexport const handleApiError = (error, showUserMessage = true) => {\n    console.error('API Error:', error);\n    \n    let userMessage = 'Une erreur inattendue s\\'est produite';\n    \n    if (error instanceof NetworkError) {\n        if (error.status === 401) {\n            userMessage = 'Session expirée. Veuillez vous reconnecter.';\n            // Rediriger vers la page de connexion\n            if (typeof window !== 'undefined') {\n                authService.removeToken();\n                window.location.href = '/login';\n                return;\n            }\n        } else if (error.status === 403) {\n            userMessage = 'Vous n\\'avez pas les permissions nécessaires.';\n        } else if (error.status === 404) {\n            userMessage = 'Ressource non trouvée.';\n        } else if (error.status === 429) {\n            userMessage = 'Trop de requêtes. Veuillez patienter un moment avant de réessayer.';\n        } else if (error.status === 500) {\n            userMessage = 'Erreur du serveur. Veuillez réessayer plus tard.';\n        } else if (error.status >= 400) {\n            userMessage = error.message || 'Erreur de requête.';\n        }\n    } else if (error instanceof TimeoutError) {\n        userMessage = 'La requête a pris trop de temps. Vérifiez votre connexion.';\n    } else if (error instanceof ValidationError) {\n        userMessage = error.message || 'Données invalides.';\n    } else if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        userMessage = 'Impossible de se connecter au serveur. Vérifiez votre connexion.';\n    }\n    \n    if (showUserMessage && typeof window !== 'undefined') {\n        // Utiliser une notification toast si disponible, sinon alert\n        if (window.Swal) {\n            window.Swal.fire({\n                title: 'Erreur',\n                text: userMessage,\n                icon: 'error',\n                confirmButtonText: 'OK'\n            });\n        } else {\n            console.log(userMessage);\n        }\n    }\n    \n    return { error, userMessage };\n};\n\n/**\n * Fonction de fetch sécurisée avec gestion d'erreurs et retry\n */\nexport const safeFetch = async (url, options = {}, config = {}) => {\n    const {\n        timeout = DEFAULT_CONFIG.timeout,\n        retries = DEFAULT_CONFIG.retries,\n        retryDelay = DEFAULT_CONFIG.retryDelay,\n        maxRetryDelay = DEFAULT_CONFIG.maxRetryDelay,\n        // showUserMessage = true\n    } = config;\n    \n    // Configuration par défaut des headers\n    const token = authService.getToken();\n    console.log('API Debug - Token found:', !!token);\n    if (token) {\n        console.log('Token preview:', token.substring(0, 20) + '...');\n    }\n    const defaultHeaders = {\n        'Content-Type': 'application/json',\n        ...(token && { 'Authorization': `Bearer ${token}` })\n    };\n    \n    const fetchOptions = {\n        ...options,\n        headers: {\n            ...defaultHeaders,\n            ...options.headers\n        }\n    };\n    \n    // Construire l'URL complète\n    const fullUrl = url.startsWith('http') ? url : `${host}/api${url}`;\n    \n    let lastError;\n    \n    for (let attempt = 0; attempt <= retries; attempt++) {\n        try {\n            // Ajouter un délai entre les tentatives (sauf pour la première)\n            if (attempt > 0) {\n                // Délai exponentiel pour les erreurs 429, linéaire pour les autres\n                const isRateLimitError = lastError instanceof NetworkError && lastError.status === 429;\n                const delayTime = isRateLimitError \n                    ? Math.min(retryDelay * Math.pow(2, attempt), maxRetryDelay)\n                    : retryDelay * attempt;\n                \n                console.log(`Waiting ${delayTime}ms before retry attempt ${attempt}...`);\n                await delay(delayTime);\n            }\n            \n            const response = await withTimeout(\n                withRateLimit(() => fetch(fullUrl, fetchOptions)),\n                timeout\n            );\n            \n            // Vérifier si la réponse est OK\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new NetworkError(\n                    errorData.message || `HTTP ${response.status}: ${response.statusText}`,\n                    response.status\n                );\n            }\n            \n            // Tenter de parser en JSON\n            const data = await response.json();\n            \n            // Vérifier si l'API retourne une erreur dans les données\n            if (data.success === false) {\n                throw new ValidationError(data.message || 'Erreur de validation', data.errors);\n            }\n            \n            return data;\n            \n        } catch (error) {\n            lastError = error;\n            \n            // Ne pas retry pour certains types d'erreurs (sauf 429)\n            if (error instanceof NetworkError && [401, 403, 404, 422].includes(error.status)) {\n                break;\n            }\n            \n            // Pour les erreurs 429, on continue à retry mais avec plus de délai\n            if (error instanceof NetworkError && error.status === 429) {\n                console.warn(`Rate limit hit (429), will retry with exponential backoff...`);\n            }\n            \n            if (error instanceof ValidationError) {\n                break;\n            }\n            \n            // Si c'est la dernière tentative, on break\n            if (attempt === retries) {\n                break;\n            }\n            \n            console.warn(`Attempt ${attempt + 1} failed, retrying...`, error.message);\n        }\n    }\n    \n    // Gérer l'erreur finale\n    // const errorResult = handleApiError(lastError, showUserMessage);\n    throw lastError;\n};\n\n/**\n * Méthodes de convenance pour les requêtes HTTP\n */\nexport const api = {\n    get: (url, config = {}) => safeFetch(url, { method: 'GET' }, config),\n    \n    post: (url, data, config = {}) => safeFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data)\n    }, config),\n    \n    put: (url, data, config = {}) => safeFetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(data)\n    }, config),\n    \n    delete: (url, config = {}) => safeFetch(url, { method: 'DELETE' }, config),\n    \n    patch: (url, data, config = {}) => safeFetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(data)\n    }, config)\n};\n\n/**\n * Fonctions spécifiques pour l'application\n */\nexport const apiEndpoints = {\n    // Authentication\n    login: (credentials) => api.post('/auth/login', credentials),\n    logout: () => api.post('/auth/logout'),\n    \n    //users\n    getAdminOrTeacher: () => api.get(`/users/getTeacherOrAdmin`),\n    getUserInfos: () => api.get('/users/getInfos'),\n    getAllUsers: () => api.get('/users/all'),\n\n    // Teachers\n    getAllTeachers: () => api.get('/teachers/getAll'),\n    getTeacher: (id) => api.get(`/teachers/${id}`),\n    addTeacher: (data) => api.post('/teachers/add', data),\n    updateTeacher: (id, data) => api.put(`/teachers/${id}`, data),\n    deleteTeacher: (id) => api.delete(`/teachers/${id}`),\n    regenerateTeacherPasswords: () => api.get('/teachers/regeneratePassword'),\n    \n    // Students\n    getAllStudents: () => api.get('/students/getAll'),\n    getStudentsByClass: (classId) => api.get(`/students/${classId}`),\n    getOrderedStudents: (classId) => api.get(`/students/getOrdonnedStudents/${classId}`),\n    getOneStudent: (id) => api.get(`/students/one/${id}`),\n    addStudent: (classId, data) => api.post(`/students/add/${classId}`, data),\n    updateStudent: (id, data) => api.put(`/students/${id}`, data),\n    deleteStudent: (id) => api.delete(`/students/${id}`),\n    getStudentSettings: () => api.get('/students/gs'),\n    \n    // Classes\n    getAllClasses: () => api.get('/class/getAll'),\n    getOneClass: (id) => api.get(`/class/${id}`),\n    addClass: (data) => api.post('/class/add', data),\n    updateClass: (id, data) => api.put(`/class/${id}`, data),\n    deleteClass: (id) => api.delete(`/class/${id}`),\n    \n    // Sections\n    getAllSections: () => api.get('/sections'),\n    getOneSection: (id) => api.get(`/sections/${id}`),\n    addSection: (data) => api.post('/sections/store', data),\n    updateSection: (id, data) => api.put(`/sections/${id}`, data),\n    deleteSection: (id) => api.delete(`/sections/${id}`),\n    exportSections: (format, filters = {}) => {\n        const params = new URLSearchParams(filters);\n        return api.get(`/sections/export/${format}?${params}`);\n    },\n    importSections: (file) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        return api.post('/sections/import/csv', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n        });\n    },\n    \n    // Sequences\n    getAllSequences: () => api.get('/seq/getAll'),\n    getOneSequence: (id) => api.get(`/seq/${id}`),\n    addSequence: (data) => api.post('/seq/add', data),\n    updateSequence: (id, data) => api.put(`/seq/${id}`, data),\n    deleteSequence: (id) => api.delete(`/seq/${id}`),\n    \n    // Trimesters\n    getAllTrimesters: () => api.get('/trim/getAll'),\n    getOneTrimester: (id) => api.get(`/trim/${id}`),\n    addTrimester: (data) => api.post('/trim/add', data),\n    updateTrimester: (id, data) => api.put(`/trim/${id}`, data),\n    deleteTrimester: (id) => api.delete(`/trim/${id}`),\n    \n    // Annual Exams\n    getAllAnnualExams: () => api.get('/annuals/all'),\n    getOneAnnualExam: (id) => api.get(`/annuals/${id}`),\n    addAnnualExam: (data) => api.post('/annuals/add', data),\n    updateAnnualExam: (id, data) => api.put(`/annuals/${id}`, data),\n    deleteAnnualExam: (id) => api.delete(`/annuals/${id}`),\n    \n    // Settings\n    getSettings: () => api.get('/settings/getSettings'),\n    updateSettings: (data) => api.post('/settings/setSettings', data),\n    \n    // Payment Tranches\n    getAllPaymentTranches: () => api.get('/payment-tranches'),\n    getPaymentTranche: (id) => api.get(`/payment-tranches/${id}`),\n    addPaymentTranche: (data) => api.post('/payment-tranches', data),\n    updatePaymentTranche: (id, data) => api.put(`/payment-tranches/${id}`, data),\n    deletePaymentTranche: (id) => api.delete(`/payment-tranches/${id}`),\n    reorderPaymentTranches: (data) => api.post('/payment-tranches/reorder', data),\n    \n    // Levels\n    getAllLevels: (sectionId = null) => {\n        const url = sectionId ? `/levels?section_id=${sectionId}` : '/levels';\n        return api.get(url);\n    },\n    getLevel: (id) => api.get(`/levels/${id}`),\n    addLevel: (data) => api.post('/levels', data),\n    updateLevel: (id, data) => api.put(`/levels/${id}`, data),\n    deleteLevel: (id) => api.delete(`/levels/${id}`),\n    \n    // School Classes\n    getAllSchoolClasses: (filters = {}) => {\n        const params = new URLSearchParams();\n        if (filters.section_id) params.append('section_id', filters.section_id);\n        if (filters.level_id) params.append('level_id', filters.level_id);\n        const url = params.toString() ? `/school-classes?${params}` : '/school-classes';\n        return api.get(url);\n    },\n    getSchoolClass: (id) => api.get(`/school-classes/${id}`),\n    addSchoolClass: (data) => api.post('/school-classes', data),\n    updateSchoolClass: (id, data) => api.put(`/school-classes/${id}`, data),\n    deleteSchoolClass: (id) => api.delete(`/school-classes/${id}`),\n    configureClassPayments: (id, data) => api.post(`/school-classes/${id}/configure-payments`, data),\n    exportSchoolClasses: (format, filters = {}) => {\n        const params = new URLSearchParams(filters);\n        return api.get(`/school-classes/export/${format}?${params}`);\n    },\n    importSchoolClasses: (file) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        return api.post('/school-classes/import/csv', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n        });\n    },\n\n    // Levels \n    exportLevels: (format, filters = {}) => {\n        const params = new URLSearchParams(filters);\n        return api.get(`/levels/export/${format}?${params}`);\n    },\n    importLevels: (file) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        return api.post('/levels/import/csv', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n        });\n    },\n\n    // Students\n    exportStudents: (format, seriesId, filters = {}) => {\n        const params = new URLSearchParams(filters);\n        return api.get(`/students/export/${format}/${seriesId}?${params}`);\n    },\n    importStudents: (file) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        return api.post('/students/import/csv', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n        });\n    }\n};\n\nexport default api;"],"mappings":"AAAA,OAASA,IAAI,KAAQ,SAAS,CAC9B,OAASC,aAAa,KAAQ,eAAe,CAC7C,OAASC,WAAW,KAAQ,yBAAyB,CAErD;AACA;AACA,GACA,KAAM,CAAAC,cAAc,CAAG,CACnBC,OAAO,CAAE,KAAK,CAAE;AAChBC,OAAO,CAAE,CAAC,CACVC,UAAU,CAAE,IAAI,CAAE;AAClBC,aAAa,CAAE,KAAO;AAC1B,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,YAAY,QAAS,CAAAC,KAAM,CACpCC,WAAWA,CAACC,OAAO,CAAEC,MAAM,CAAE,CACzB,KAAK,CAACD,OAAO,CAAC,CACd,IAAI,CAACE,IAAI,CAAG,cAAc,CAC1B,IAAI,CAACD,MAAM,CAAGA,MAAM,CACxB,CACJ,CAEA,MAAO,MAAM,CAAAE,YAAY,QAAS,CAAAL,KAAM,CACpCC,WAAWA,CAACC,OAAO,CAAE,CACjB,KAAK,CAACA,OAAO,CAAC,CACd,IAAI,CAACE,IAAI,CAAG,cAAc,CAC9B,CACJ,CAEA,MAAO,MAAM,CAAAE,eAAe,QAAS,CAAAN,KAAM,CACvCC,WAAWA,CAACC,OAAO,CAAEK,MAAM,CAAE,CACzB,KAAK,CAACL,OAAO,CAAC,CACd,IAAI,CAACE,IAAI,CAAG,iBAAiB,CAC7B,IAAI,CAACG,MAAM,CAAGA,MAAM,CACxB,CACJ,CAEA;AACA;AACA,GACA,KAAM,CAAAC,KAAK,CAAIC,EAAE,EAAK,GAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAEF,EAAE,CAAC,CAAC,CAErE;AACA;AACA,GACA,KAAM,CAAAI,WAAW,CAAGA,CAACC,OAAO,CAAEC,SAAS,GAAK,CACxC,MAAO,CAAAL,OAAO,CAACM,IAAI,CAAC,CAChBF,OAAO,CACP,GAAI,CAAAJ,OAAO,CAAC,CAACO,CAAC,CAAEC,MAAM,GAClBN,UAAU,CAAC,IAAMM,MAAM,CAAC,GAAI,CAAAb,YAAY,CAAC,yBAAyBU,SAAS,IAAI,CAAC,CAAC,CAAEA,SAAS,CAChG,CAAC,CACJ,CAAC,CACN,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAI,cAAc,CAAG,QAAAA,CAACC,KAAK,CAA6B,IAA3B,CAAAC,eAAe,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACxDG,OAAO,CAACL,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAElC,GAAI,CAAAM,WAAW,CAAG,uCAAuC,CAEzD,GAAIN,KAAK,WAAY,CAAArB,YAAY,CAAE,CAC/B,GAAIqB,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CACtBuB,WAAW,CAAG,6CAA6C,CAC3D;AACA,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,CAAE,CAC/BlC,WAAW,CAACmC,WAAW,CAAC,CAAC,CACzBD,MAAM,CAACE,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAC/B,OACJ,CACJ,CAAC,IAAM,IAAIV,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CAC7BuB,WAAW,CAAG,+CAA+C,CACjE,CAAC,IAAM,IAAIN,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CAC7BuB,WAAW,CAAG,wBAAwB,CAC1C,CAAC,IAAM,IAAIN,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CAC7BuB,WAAW,CAAG,oEAAoE,CACtF,CAAC,IAAM,IAAIN,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CAC7BuB,WAAW,CAAG,kDAAkD,CACpE,CAAC,IAAM,IAAIN,KAAK,CAACjB,MAAM,EAAI,GAAG,CAAE,CAC5BuB,WAAW,CAAGN,KAAK,CAAClB,OAAO,EAAI,oBAAoB,CACvD,CACJ,CAAC,IAAM,IAAIkB,KAAK,WAAY,CAAAf,YAAY,CAAE,CACtCqB,WAAW,CAAG,4DAA4D,CAC9E,CAAC,IAAM,IAAIN,KAAK,WAAY,CAAAd,eAAe,CAAE,CACzCoB,WAAW,CAAGN,KAAK,CAAClB,OAAO,EAAI,oBAAoB,CACvD,CAAC,IAAM,IAAIkB,KAAK,CAAChB,IAAI,GAAK,WAAW,EAAIgB,KAAK,CAAClB,OAAO,CAAC6B,QAAQ,CAAC,OAAO,CAAC,CAAE,CACtEL,WAAW,CAAG,kEAAkE,CACpF,CAEA,GAAIL,eAAe,EAAI,MAAO,CAAAM,MAAM,GAAK,WAAW,CAAE,CAClD;AACA,GAAIA,MAAM,CAACK,IAAI,CAAE,CACbL,MAAM,CAACK,IAAI,CAACC,IAAI,CAAC,CACbC,KAAK,CAAE,QAAQ,CACfC,IAAI,CAAET,WAAW,CACjBU,IAAI,CAAE,OAAO,CACbC,iBAAiB,CAAE,IACvB,CAAC,CAAC,CACN,CAAC,IAAM,CACHZ,OAAO,CAACa,GAAG,CAACZ,WAAW,CAAC,CAC5B,CACJ,CAEA,MAAO,CAAEN,KAAK,CAAEM,WAAY,CAAC,CACjC,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAa,SAAS,CAAG,cAAAA,CAAOC,GAAG,CAAgC,IAA9B,CAAAC,OAAO,CAAAnB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,IAAE,CAAAoB,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC1D,KAAM,CACF3B,OAAO,CAAGD,cAAc,CAACC,OAAO,CAChCC,OAAO,CAAGF,cAAc,CAACE,OAAO,CAChCC,UAAU,CAAGH,cAAc,CAACG,UAAU,CACtCC,aAAa,CAAGJ,cAAc,CAACI,aAC/B;AACJ,CAAC,CAAG4C,MAAM,CAEV;AACA,KAAM,CAAAC,KAAK,CAAGlD,WAAW,CAACmD,QAAQ,CAAC,CAAC,CACpCnB,OAAO,CAACa,GAAG,CAAC,0BAA0B,CAAE,CAAC,CAACK,KAAK,CAAC,CAChD,GAAIA,KAAK,CAAE,CACPlB,OAAO,CAACa,GAAG,CAAC,gBAAgB,CAAEK,KAAK,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAC,CACjE,CACA,KAAM,CAAAC,cAAc,CAAG,CACnB,cAAc,CAAE,kBAAkB,CAClC,IAAIH,KAAK,EAAI,CAAE,eAAe,CAAE,UAAUA,KAAK,EAAG,CAAC,CACvD,CAAC,CAED,KAAM,CAAAI,YAAY,CAAG,CACjB,GAAGN,OAAO,CACVO,OAAO,CAAE,CACL,GAAGF,cAAc,CACjB,GAAGL,OAAO,CAACO,OACf,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,OAAO,CAAGT,GAAG,CAACU,UAAU,CAAC,MAAM,CAAC,CAAGV,GAAG,CAAG,GAAGjD,IAAI,OAAOiD,GAAG,EAAE,CAElE,GAAI,CAAAW,SAAS,CAEb,IAAK,GAAI,CAAAC,OAAO,CAAG,CAAC,CAAEA,OAAO,EAAIxD,OAAO,CAAEwD,OAAO,EAAE,CAAE,CACjD,GAAI,CACA;AACA,GAAIA,OAAO,CAAG,CAAC,CAAE,CACb;AACA,KAAM,CAAAC,gBAAgB,CAAGF,SAAS,WAAY,CAAApD,YAAY,EAAIoD,SAAS,CAAChD,MAAM,GAAK,GAAG,CACtF,KAAM,CAAAmD,SAAS,CAAGD,gBAAgB,CAC5BE,IAAI,CAACC,GAAG,CAAC3D,UAAU,CAAG0D,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEL,OAAO,CAAC,CAAEtD,aAAa,CAAC,CAC1DD,UAAU,CAAGuD,OAAO,CAE1B3B,OAAO,CAACa,GAAG,CAAC,WAAWgB,SAAS,2BAA2BF,OAAO,KAAK,CAAC,CACxE,KAAM,CAAA5C,KAAK,CAAC8C,SAAS,CAAC,CAC1B,CAEA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAA7C,WAAW,CAC9BrB,aAAa,CAAC,IAAMmE,KAAK,CAACV,OAAO,CAAEF,YAAY,CAAC,CAAC,CACjDpD,OACJ,CAAC,CAED;AACA,GAAI,CAAC+D,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAhE,YAAY,CAClB8D,SAAS,CAAC3D,OAAO,EAAI,QAAQwD,QAAQ,CAACvD,MAAM,KAAKuD,QAAQ,CAACM,UAAU,EAAE,CACtEN,QAAQ,CAACvD,MACb,CAAC,CACL,CAEA;AACA,KAAM,CAAA8D,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACI,IAAI,CAAC,CAAC,CAElC;AACA,GAAIG,IAAI,CAACC,OAAO,GAAK,KAAK,CAAE,CACxB,KAAM,IAAI,CAAA5D,eAAe,CAAC2D,IAAI,CAAC/D,OAAO,EAAI,sBAAsB,CAAE+D,IAAI,CAAC1D,MAAM,CAAC,CAClF,CAEA,MAAO,CAAA0D,IAAI,CAEf,CAAE,MAAO7C,KAAK,CAAE,CACZ+B,SAAS,CAAG/B,KAAK,CAEjB;AACA,GAAIA,KAAK,WAAY,CAAArB,YAAY,EAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CAACgC,QAAQ,CAACX,KAAK,CAACjB,MAAM,CAAC,CAAE,CAC9E,MACJ,CAEA;AACA,GAAIiB,KAAK,WAAY,CAAArB,YAAY,EAAIqB,KAAK,CAACjB,MAAM,GAAK,GAAG,CAAE,CACvDsB,OAAO,CAAC0C,IAAI,CAAC,8DAA8D,CAAC,CAChF,CAEA,GAAI/C,KAAK,WAAY,CAAAd,eAAe,CAAE,CAClC,MACJ,CAEA;AACA,GAAI8C,OAAO,GAAKxD,OAAO,CAAE,CACrB,MACJ,CAEA6B,OAAO,CAAC0C,IAAI,CAAC,WAAWf,OAAO,CAAG,CAAC,sBAAsB,CAAEhC,KAAK,CAAClB,OAAO,CAAC,CAC7E,CACJ,CAEA;AACA;AACA,KAAM,CAAAiD,SAAS,CACnB,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAiB,GAAG,CAAG,CACfC,GAAG,CAAE,QAAAA,CAAC7B,GAAG,KAAE,CAAAE,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAiB,SAAS,CAACC,GAAG,CAAE,CAAE8B,MAAM,CAAE,KAAM,CAAC,CAAE5B,MAAM,CAAC,GAEpE6B,IAAI,CAAE,QAAAA,CAAC/B,GAAG,CAAEyB,IAAI,KAAE,CAAAvB,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAiB,SAAS,CAACC,GAAG,CAAE,CAC7C8B,MAAM,CAAE,MAAM,CACdE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAC7B,CAAC,CAAEvB,MAAM,CAAC,GAEViC,GAAG,CAAE,QAAAA,CAACnC,GAAG,CAAEyB,IAAI,KAAE,CAAAvB,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAiB,SAAS,CAACC,GAAG,CAAE,CAC5C8B,MAAM,CAAE,KAAK,CACbE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAC7B,CAAC,CAAEvB,MAAM,CAAC,GAEVkC,MAAM,CAAE,QAAAA,CAACpC,GAAG,KAAE,CAAAE,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAiB,SAAS,CAACC,GAAG,CAAE,CAAE8B,MAAM,CAAE,QAAS,CAAC,CAAE5B,MAAM,CAAC,GAE1EmC,KAAK,CAAE,QAAAA,CAACrC,GAAG,CAAEyB,IAAI,KAAE,CAAAvB,MAAM,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAiB,SAAS,CAACC,GAAG,CAAE,CAC9C8B,MAAM,CAAE,OAAO,CACfE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAC7B,CAAC,CAAEvB,MAAM,CAAC,EACd,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAoC,YAAY,CAAG,CACxB;AACAC,KAAK,CAAGC,WAAW,EAAKZ,GAAG,CAACG,IAAI,CAAC,aAAa,CAAES,WAAW,CAAC,CAC5DC,MAAM,CAAEA,CAAA,GAAMb,GAAG,CAACG,IAAI,CAAC,cAAc,CAAC,CAEtC;AACAW,iBAAiB,CAAEA,CAAA,GAAMd,GAAG,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAC5Dc,YAAY,CAAEA,CAAA,GAAMf,GAAG,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9Ce,WAAW,CAAEA,CAAA,GAAMhB,GAAG,CAACC,GAAG,CAAC,YAAY,CAAC,CAExC;AACAgB,cAAc,CAAEA,CAAA,GAAMjB,GAAG,CAACC,GAAG,CAAC,kBAAkB,CAAC,CACjDiB,UAAU,CAAGC,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,aAAakB,EAAE,EAAE,CAAC,CAC9CC,UAAU,CAAGvB,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,eAAe,CAAEN,IAAI,CAAC,CACrDwB,aAAa,CAAEA,CAACF,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,aAAaY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC7DyB,aAAa,CAAGH,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,aAAaW,EAAE,EAAE,CAAC,CACpDI,0BAA0B,CAAEA,CAAA,GAAMvB,GAAG,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAEzE;AACAuB,cAAc,CAAEA,CAAA,GAAMxB,GAAG,CAACC,GAAG,CAAC,kBAAkB,CAAC,CACjDwB,kBAAkB,CAAGC,OAAO,EAAK1B,GAAG,CAACC,GAAG,CAAC,aAAayB,OAAO,EAAE,CAAC,CAChEC,kBAAkB,CAAGD,OAAO,EAAK1B,GAAG,CAACC,GAAG,CAAC,iCAAiCyB,OAAO,EAAE,CAAC,CACpFE,aAAa,CAAGT,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,iBAAiBkB,EAAE,EAAE,CAAC,CACrDU,UAAU,CAAEA,CAACH,OAAO,CAAE7B,IAAI,GAAKG,GAAG,CAACG,IAAI,CAAC,iBAAiBuB,OAAO,EAAE,CAAE7B,IAAI,CAAC,CACzEiC,aAAa,CAAEA,CAACX,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,aAAaY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC7DkC,aAAa,CAAGZ,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,aAAaW,EAAE,EAAE,CAAC,CACpDa,kBAAkB,CAAEA,CAAA,GAAMhC,GAAG,CAACC,GAAG,CAAC,cAAc,CAAC,CAEjD;AACAgC,aAAa,CAAEA,CAAA,GAAMjC,GAAG,CAACC,GAAG,CAAC,eAAe,CAAC,CAC7CiC,WAAW,CAAGf,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,UAAUkB,EAAE,EAAE,CAAC,CAC5CgB,QAAQ,CAAGtC,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,YAAY,CAAEN,IAAI,CAAC,CAChDuC,WAAW,CAAEA,CAACjB,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,UAAUY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CACxDwC,WAAW,CAAGlB,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,UAAUW,EAAE,EAAE,CAAC,CAE/C;AACAmB,cAAc,CAAEA,CAAA,GAAMtC,GAAG,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1CsC,aAAa,CAAGpB,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,aAAakB,EAAE,EAAE,CAAC,CACjDqB,UAAU,CAAG3C,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,iBAAiB,CAAEN,IAAI,CAAC,CACvD4C,aAAa,CAAEA,CAACtB,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,aAAaY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC7D6C,aAAa,CAAGvB,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,aAAaW,EAAE,EAAE,CAAC,CACpDwB,cAAc,CAAE,QAAAA,CAACC,MAAM,CAAmB,IAAjB,CAAAC,OAAO,CAAA3F,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACjC,KAAM,CAAA4F,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAC3C,MAAO,CAAA7C,GAAG,CAACC,GAAG,CAAC,oBAAoB2C,MAAM,IAAIE,MAAM,EAAE,CAAC,CAC1D,CAAC,CACDE,cAAc,CAAGC,IAAI,EAAK,CACtB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7B,MAAO,CAAAjD,GAAG,CAACG,IAAI,CAAC,sBAAsB,CAAE+C,QAAQ,CAAE,CAC9CtE,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACrD,CAAC,CAAC,CACN,CAAC,CAED;AACAyE,eAAe,CAAEA,CAAA,GAAMrD,GAAG,CAACC,GAAG,CAAC,aAAa,CAAC,CAC7CqD,cAAc,CAAGnC,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,QAAQkB,EAAE,EAAE,CAAC,CAC7CoC,WAAW,CAAG1D,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,UAAU,CAAEN,IAAI,CAAC,CACjD2D,cAAc,CAAEA,CAACrC,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,QAAQY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CACzD4D,cAAc,CAAGtC,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,QAAQW,EAAE,EAAE,CAAC,CAEhD;AACAuC,gBAAgB,CAAEA,CAAA,GAAM1D,GAAG,CAACC,GAAG,CAAC,cAAc,CAAC,CAC/C0D,eAAe,CAAGxC,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,SAASkB,EAAE,EAAE,CAAC,CAC/CyC,YAAY,CAAG/D,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,WAAW,CAAEN,IAAI,CAAC,CACnDgE,eAAe,CAAEA,CAAC1C,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,SAASY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC3DiE,eAAe,CAAG3C,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,SAASW,EAAE,EAAE,CAAC,CAElD;AACA4C,iBAAiB,CAAEA,CAAA,GAAM/D,GAAG,CAACC,GAAG,CAAC,cAAc,CAAC,CAChD+D,gBAAgB,CAAG7C,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,YAAYkB,EAAE,EAAE,CAAC,CACnD8C,aAAa,CAAGpE,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,cAAc,CAAEN,IAAI,CAAC,CACvDqE,gBAAgB,CAAEA,CAAC/C,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,YAAYY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC/DsE,gBAAgB,CAAGhD,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,YAAYW,EAAE,EAAE,CAAC,CAEtD;AACAiD,WAAW,CAAEA,CAAA,GAAMpE,GAAG,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACnDoE,cAAc,CAAGxE,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,uBAAuB,CAAEN,IAAI,CAAC,CAEjE;AACAyE,qBAAqB,CAAEA,CAAA,GAAMtE,GAAG,CAACC,GAAG,CAAC,mBAAmB,CAAC,CACzDsE,iBAAiB,CAAGpD,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,qBAAqBkB,EAAE,EAAE,CAAC,CAC7DqD,iBAAiB,CAAG3E,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,mBAAmB,CAAEN,IAAI,CAAC,CAChE4E,oBAAoB,CAAEA,CAACtD,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,qBAAqBY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CAC5E6E,oBAAoB,CAAGvD,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,qBAAqBW,EAAE,EAAE,CAAC,CACnEwD,sBAAsB,CAAG9E,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,2BAA2B,CAAEN,IAAI,CAAC,CAE7E;AACA+E,YAAY,CAAE,QAAAA,CAAA,CAAsB,IAArB,CAAAC,SAAS,CAAA3H,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC3B,KAAM,CAAAkB,GAAG,CAAGyG,SAAS,CAAG,sBAAsBA,SAAS,EAAE,CAAG,SAAS,CACrE,MAAO,CAAA7E,GAAG,CAACC,GAAG,CAAC7B,GAAG,CAAC,CACvB,CAAC,CACD0G,QAAQ,CAAG3D,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,WAAWkB,EAAE,EAAE,CAAC,CAC1C4D,QAAQ,CAAGlF,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,SAAS,CAAEN,IAAI,CAAC,CAC7CmF,WAAW,CAAEA,CAAC7D,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,WAAWY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CACzDoF,WAAW,CAAG9D,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,WAAWW,EAAE,EAAE,CAAC,CAEhD;AACA+D,mBAAmB,CAAE,QAAAA,CAAA,CAAkB,IAAjB,CAAArC,OAAO,CAAA3F,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC9B,KAAM,CAAA4F,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpC,GAAIF,OAAO,CAACsC,UAAU,CAAErC,MAAM,CAACM,MAAM,CAAC,YAAY,CAAEP,OAAO,CAACsC,UAAU,CAAC,CACvE,GAAItC,OAAO,CAACuC,QAAQ,CAAEtC,MAAM,CAACM,MAAM,CAAC,UAAU,CAAEP,OAAO,CAACuC,QAAQ,CAAC,CACjE,KAAM,CAAAhH,GAAG,CAAG0E,MAAM,CAACuC,QAAQ,CAAC,CAAC,CAAG,mBAAmBvC,MAAM,EAAE,CAAG,iBAAiB,CAC/E,MAAO,CAAA9C,GAAG,CAACC,GAAG,CAAC7B,GAAG,CAAC,CACvB,CAAC,CACDkH,cAAc,CAAGnE,EAAE,EAAKnB,GAAG,CAACC,GAAG,CAAC,mBAAmBkB,EAAE,EAAE,CAAC,CACxDoE,cAAc,CAAG1F,IAAI,EAAKG,GAAG,CAACG,IAAI,CAAC,iBAAiB,CAAEN,IAAI,CAAC,CAC3D2F,iBAAiB,CAAEA,CAACrE,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACO,GAAG,CAAC,mBAAmBY,EAAE,EAAE,CAAEtB,IAAI,CAAC,CACvE4F,iBAAiB,CAAGtE,EAAE,EAAKnB,GAAG,CAACQ,MAAM,CAAC,mBAAmBW,EAAE,EAAE,CAAC,CAC9DuE,sBAAsB,CAAEA,CAACvE,EAAE,CAAEtB,IAAI,GAAKG,GAAG,CAACG,IAAI,CAAC,mBAAmBgB,EAAE,qBAAqB,CAAEtB,IAAI,CAAC,CAChG8F,mBAAmB,CAAE,QAAAA,CAAC/C,MAAM,CAAmB,IAAjB,CAAAC,OAAO,CAAA3F,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtC,KAAM,CAAA4F,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAC3C,MAAO,CAAA7C,GAAG,CAACC,GAAG,CAAC,0BAA0B2C,MAAM,IAAIE,MAAM,EAAE,CAAC,CAChE,CAAC,CACD8C,mBAAmB,CAAG3C,IAAI,EAAK,CAC3B,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7B,MAAO,CAAAjD,GAAG,CAACG,IAAI,CAAC,4BAA4B,CAAE+C,QAAQ,CAAE,CACpDtE,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACrD,CAAC,CAAC,CACN,CAAC,CAED;AACAiH,YAAY,CAAE,QAAAA,CAACjD,MAAM,CAAmB,IAAjB,CAAAC,OAAO,CAAA3F,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC/B,KAAM,CAAA4F,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAC3C,MAAO,CAAA7C,GAAG,CAACC,GAAG,CAAC,kBAAkB2C,MAAM,IAAIE,MAAM,EAAE,CAAC,CACxD,CAAC,CACDgD,YAAY,CAAG7C,IAAI,EAAK,CACpB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7B,MAAO,CAAAjD,GAAG,CAACG,IAAI,CAAC,oBAAoB,CAAE+C,QAAQ,CAAE,CAC5CtE,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACrD,CAAC,CAAC,CACN,CAAC,CAED;AACAmH,cAAc,CAAE,QAAAA,CAACnD,MAAM,CAAEoD,QAAQ,CAAmB,IAAjB,CAAAnD,OAAO,CAAA3F,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3C,KAAM,CAAA4F,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAC3C,MAAO,CAAA7C,GAAG,CAACC,GAAG,CAAC,oBAAoB2C,MAAM,IAAIoD,QAAQ,IAAIlD,MAAM,EAAE,CAAC,CACtE,CAAC,CACDmD,cAAc,CAAGhD,IAAI,EAAK,CACtB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7B,MAAO,CAAAjD,GAAG,CAACG,IAAI,CAAC,sBAAsB,CAAE+C,QAAQ,CAAE,CAC9CtE,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACrD,CAAC,CAAC,CACN,CACJ,CAAC,CAED,cAAe,CAAAoB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}