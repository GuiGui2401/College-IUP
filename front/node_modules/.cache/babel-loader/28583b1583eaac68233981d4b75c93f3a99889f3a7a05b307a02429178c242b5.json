{"ast":null,"code":"import{useState,useEffect}from'react';import{Container,Row,Col,Card,Button,Table,Form,Alert,Spinner,Badge,ButtonGroup}from'react-bootstrap';import{Award,Download,FiletypePdf,Search,BookFill,PersonFill,PeopleFill,Printer}from'react-bootstrap-icons';import{secureApiEndpoints}from'../../utils/apiMigration';import{extractErrorMessage}from'../../utils/errorHandler';import{authService}from'../../services/authService';import Swal from'sweetalert2';import{host}from'../../utils/fetch';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SchoolCertificates=()=>{const[certificates,setCertificates]=useState([]);const[students,setStudents]=useState([]);const[classes,setClasses]=useState([]);const[sections,setSections]=useState([]);const[series,setSeries]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[generationType,setGenerationType]=useState('by-series');// Filtres\nconst[filters,setFilters]=useState({section_id:'',class_id:'',series_id:'',student_id:''});useEffect(()=>{loadSections();loadClasses();loadSeries();},[]);useEffect(()=>{if(filters.series_id&&generationType==='by-student'){loadStudentsBySeries();}},[filters.series_id,generationType]);const loadClasses=async()=>{try{const response=await secureApiEndpoints.schoolClasses.getAll();if(response.success){setClasses(response.data);}}catch(error){console.error('Error loading classes:',error);}};const loadSections=async()=>{try{const response=await secureApiEndpoints.sections.getAll();if(response.success){setSections(response.data);}}catch(error){console.error('Error loading sections:',error);}};const loadSeries=async()=>{try{const response=await secureApiEndpoints.accountant.getClasses();if(response.success&&response.data&&response.data.classes){const allSeries=[];response.data.classes.forEach(schoolClass=>{if(schoolClass.series&&Array.isArray(schoolClass.series)){schoolClass.series.forEach(serie=>{var _schoolClass$level,_schoolClass$level$se,_schoolClass$level2,_schoolClass$level2$s,_schoolClass$level3,_schoolClass$level3$s;allSeries.push({...serie,section_id:schoolClass===null||schoolClass===void 0?void 0:(_schoolClass$level=schoolClass.level)===null||_schoolClass$level===void 0?void 0:(_schoolClass$level$se=_schoolClass$level.section)===null||_schoolClass$level$se===void 0?void 0:_schoolClass$level$se.id,section_name:schoolClass===null||schoolClass===void 0?void 0:(_schoolClass$level2=schoolClass.level)===null||_schoolClass$level2===void 0?void 0:(_schoolClass$level2$s=_schoolClass$level2.section)===null||_schoolClass$level2$s===void 0?void 0:_schoolClass$level2$s.name,class_id:schoolClass===null||schoolClass===void 0?void 0:schoolClass.id,class_name:schoolClass===null||schoolClass===void 0?void 0:schoolClass.name,full_name:`${(schoolClass===null||schoolClass===void 0?void 0:(_schoolClass$level3=schoolClass.level)===null||_schoolClass$level3===void 0?void 0:(_schoolClass$level3$s=_schoolClass$level3.section)===null||_schoolClass$level3$s===void 0?void 0:_schoolClass$level3$s.name)||''} - ${(schoolClass===null||schoolClass===void 0?void 0:schoolClass.name)||''} - ${serie.name||''}`});});}});setSeries(allSeries);}}catch(error){console.error('Error loading series:',error);}};const loadStudentsBySeries=async()=>{if(!filters.series_id)return;try{const response=await secureApiEndpoints.students.getByClassSeries(filters.series_id);if(response.success){setStudents(response.data.students||[]);}}catch(error){console.error('Error loading students:',error);}};const generateCertificates=async()=>{if(generationType==='by-section'&&!filters.section_id){setError('Veuillez sélectionner une section');return;}if(generationType==='by-class'&&!filters.class_id){setError('Veuillez sélectionner une classe');return;}if(generationType==='by-series'&&!filters.series_id){setError('Veuillez sélectionner une série');return;}if(generationType==='by-student'&&!filters.student_id){setError('Veuillez sélectionner un élève');return;}try{setLoading(true);setError('');const response=await secureApiEndpoints.reports.generateSchoolCertificates({type:generationType,...filters});if(response.success){setCertificates(response.data.certificates);setSuccess(`${response.data.certificates.length} certificat(s) généré(s)`);}else{setError(response.message);}}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const previewCertificate=async studentId=>{try{setLoading(true);const response=await fetch(`${host}/api/reports/school-certificate/preview/${studentId}`,{method:'GET',headers:{'Authorization':`Bearer ${authService.getToken()}`,'Accept':'application/pdf'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const htmlBlob=await response.blob();const blobUrl=window.URL.createObjectURL(htmlBlob);window.open(blobUrl,'_blank');setTimeout(()=>window.URL.revokeObjectURL(blobUrl),1000);setSuccess('Aperçu du certificat ouvert');}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const downloadAllCertificates=async()=>{try{setLoading(true);const exportParams={type:generationType,...filters};const response=await fetch(`${host}/api/reports/school-certificates/download?${new URLSearchParams(exportParams).toString()}`,{method:'GET',headers:{'Authorization':`Bearer ${authService.getToken()}`,'Accept':'application/pdf'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const pdfBlob=await response.blob();const blobUrl=window.URL.createObjectURL(pdfBlob);// Créer un lien de téléchargement\nconst link=document.createElement('a');link.href=blobUrl;link.download=`certificats_scolarite_${generationType}_${new Date().toISOString().split('T')[0]}.pdf`;document.body.appendChild(link);link.click();document.body.removeChild(link);setTimeout(()=>window.URL.revokeObjectURL(blobUrl),1000);setSuccess('Certificats téléchargés avec succès');}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('fr-FR');};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(Award,{className:\"me-2\"}),\"Certificats de Scolarit\\xE9\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"G\\xE9n\\xE9ration et gestion des certificats de scolarit\\xE9 par classe, \\xE9l\\xE8ve ou section\"})]}),certificates.length>0&&/*#__PURE__*/_jsxs(Button,{variant:\"outline-danger\",onClick:downloadAllCertificates,disabled:loading,children:[/*#__PURE__*/_jsx(Download,{className:\"me-2\"}),\"T\\xE9l\\xE9charger Tout (PDF)\"]})]})})}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",dismissible:true,onClose:()=>setError(''),children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",dismissible:true,onClose:()=>setSuccess(''),children:success}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(Award,{className:\"me-2\"}),\"Param\\xE8tres de G\\xE9n\\xE9ration\"]})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Row,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Label,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Type de g\\xE9n\\xE9ration\"})}),/*#__PURE__*/_jsxs(ButtonGroup,{className:\"d-flex\",children:[/*#__PURE__*/_jsxs(Button,{variant:generationType==='by-section'?'primary':'outline-primary',onClick:()=>{setGenerationType('by-section');setFilters({section_id:'',class_id:'',series_id:'',student_id:''});},children:[/*#__PURE__*/_jsx(PeopleFill,{className:\"me-2\"}),\"Par Section\"]}),/*#__PURE__*/_jsxs(Button,{variant:generationType==='by-class'?'primary':'outline-primary',onClick:()=>{setGenerationType('by-class');setFilters({section_id:'',class_id:'',series_id:'',student_id:''});},children:[/*#__PURE__*/_jsx(BookFill,{className:\"me-2\"}),\"Par Classe\"]}),/*#__PURE__*/_jsxs(Button,{variant:generationType==='by-series'?'primary':'outline-primary',onClick:()=>{setGenerationType('by-series');setFilters({section_id:'',class_id:'',series_id:'',student_id:''});},children:[/*#__PURE__*/_jsx(Award,{className:\"me-2\"}),\"Par S\\xE9rie\"]}),/*#__PURE__*/_jsxs(Button,{variant:generationType==='by-student'?'primary':'outline-primary',onClick:()=>{setGenerationType('by-student');setFilters({section_id:'',class_id:'',series_id:'',student_id:''});},children:[/*#__PURE__*/_jsx(PersonFill,{className:\"me-2\"}),\"Par \\xC9l\\xE8ve\"]})]})]})}),/*#__PURE__*/_jsxs(Row,{children:[generationType==='by-section'&&/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Section \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.section_id,onChange:e=>setFilters({...filters,section_id:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une section\"}),sections.map(section=>/*#__PURE__*/_jsx(\"option\",{value:section.id,children:section.name},section.id))]})]})}),generationType==='by-class'&&/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Classe \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.class_id,onChange:e=>setFilters({...filters,class_id:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une classe\"}),classes.map(cls=>/*#__PURE__*/_jsx(\"option\",{value:cls.id,children:cls.name},cls.id))]})]})}),generationType==='by-series'&&/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"S\\xE9rie \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.series_id,onChange:e=>setFilters({...filters,series_id:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une s\\xE9rie\"}),series.map(serie=>/*#__PURE__*/_jsx(\"option\",{value:serie.id,children:serie.full_name},serie.id))]})]})}),generationType==='by-student'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"S\\xE9rie \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.series_id,onChange:e=>setFilters({...filters,series_id:e.target.value,student_id:''}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une s\\xE9rie\"}),series.map(serie=>/*#__PURE__*/_jsx(\"option\",{value:serie.id,children:serie.full_name},serie.id))]})]})}),filters.series_id&&/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"\\xC9l\\xE8ve \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.student_id,onChange:e=>setFilters({...filters,student_id:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner un \\xE9l\\xE8ve\"}),students.map(student=>/*#__PURE__*/_jsxs(\"option\",{value:student.id,children:[student.last_name,\" \",student.first_name]},student.id))]})]})})]}),/*#__PURE__*/_jsx(Col,{md:3,className:\"d-flex align-items-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:generateCertificates,disabled:loading,className:\"w-100\",children:[/*#__PURE__*/_jsx(Award,{className:\"me-2\"}),loading?'Génération...':'Générer les Certificats']})})]})]})]}),certificates.length>0&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[\"Certificats G\\xE9n\\xE9r\\xE9s\",/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",className:\"ms-2\",children:[certificates.length,\" certificat\",certificates.length>1?'s':'']})]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-dark\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Matricule\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom et Pr\\xE9nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Classe\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date de Naissance\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:certificates.map((certificate,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:\"outline-primary\",text:\"primary\",children:certificate.matricule})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[certificate.nom,\" \",certificate.prenom]})}),/*#__PURE__*/_jsx(\"td\",{children:certificate.classe}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(certificate.date_naissance)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(ButtonGroup,{size:\"sm\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline-info\",onClick:()=>previewCertificate(certificate.student_id),disabled:loading,children:/*#__PURE__*/_jsx(Printer,{size:14})})})})]},index))})]})})})]}),!loading&&certificates.length===0&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5\",children:[/*#__PURE__*/_jsx(Award,{size:64,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"text-muted\",children:\"Aucun certificat g\\xE9n\\xE9r\\xE9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"S\\xE9lectionnez les param\\xE8tres et cliquez sur \\\"G\\xE9n\\xE9rer les Certificats\\\"\"})]})})}),loading&&certificates.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",variant:\"primary\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"G\\xE9n\\xE9ration en cours...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mt-3\",children:\"G\\xE9n\\xE9ration des certificats en cours...\"})]})]});};export default SchoolCertificates;","map":{"version":3,"names":["useState","useEffect","Container","Row","Col","Card","Button","Table","Form","Alert","Spinner","Badge","ButtonGroup","Award","Download","FiletypePdf","Search","BookFill","PersonFill","PeopleFill","Printer","secureApiEndpoints","extractErrorMessage","authService","Swal","host","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SchoolCertificates","certificates","setCertificates","students","setStudents","classes","setClasses","sections","setSections","series","setSeries","loading","setLoading","error","setError","success","setSuccess","generationType","setGenerationType","filters","setFilters","section_id","class_id","series_id","student_id","loadSections","loadClasses","loadSeries","loadStudentsBySeries","response","schoolClasses","getAll","data","console","accountant","getClasses","allSeries","forEach","schoolClass","Array","isArray","serie","_schoolClass$level","_schoolClass$level$se","_schoolClass$level2","_schoolClass$level2$s","_schoolClass$level3","_schoolClass$level3$s","push","level","section","id","section_name","name","class_name","full_name","getByClassSeries","generateCertificates","reports","generateSchoolCertificates","type","length","message","previewCertificate","studentId","fetch","method","headers","getToken","ok","Error","status","htmlBlob","blob","blobUrl","window","URL","createObjectURL","open","setTimeout","revokeObjectURL","downloadAllCertificates","exportParams","URLSearchParams","toString","pdfBlob","link","document","createElement","href","download","Date","toISOString","split","body","appendChild","click","removeChild","formatDate","dateString","toLocaleDateString","fluid","className","children","variant","onClick","disabled","dismissible","onClose","Header","Body","Label","md","Group","Select","value","onChange","e","target","required","map","cls","student","last_name","first_name","bg","striped","hover","certificate","index","text","matricule","nom","prenom","classe","date_naissance","size","animation","role"],"sources":["/var/www/College-IUP/front/src/pages/Reports/SchoolCertificates.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    Button,\n    Table,\n    Form,\n    Alert,\n    Spinner,\n    Badge,\n    ButtonGroup\n} from 'react-bootstrap';\nimport {\n    Award,\n    Download,\n    FiletypePdf,\n    Search,\n    BookFill,\n    PersonFill,\n    PeopleFill,\n    Printer\n} from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\nimport { extractErrorMessage } from '../../utils/errorHandler';\nimport { authService } from '../../services/authService';\nimport Swal from 'sweetalert2';\nimport { host } from '../../utils/fetch';\n\nconst SchoolCertificates = () => {\n    const [certificates, setCertificates] = useState([]);\n    const [students, setStudents] = useState([]);\n    const [classes, setClasses] = useState([]);\n    const [sections, setSections] = useState([]);\n    const [series, setSeries] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [generationType, setGenerationType] = useState('by-series');\n\n    // Filtres\n    const [filters, setFilters] = useState({\n        section_id: '',\n        class_id: '',\n        series_id: '',\n        student_id: ''\n    });\n\n    useEffect(() => {\n        loadSections();\n        loadClasses();\n        loadSeries();\n    }, []);\n\n    useEffect(() => {\n        if (filters.series_id && generationType === 'by-student') {\n            loadStudentsBySeries();\n        }\n    }, [filters.series_id, generationType]);\n\n    const loadClasses = async () => {\n        try {\n            const response = await secureApiEndpoints.schoolClasses.getAll();\n            if (response.success) {\n                setClasses(response.data);\n            }\n        } catch (error) {\n            console.error('Error loading classes:', error);\n        }\n    };\n\n    const loadSections = async () => {\n        try {\n            const response = await secureApiEndpoints.sections.getAll();\n            if (response.success) {\n                setSections(response.data);\n            }\n        } catch (error) {\n            console.error('Error loading sections:', error);\n        }\n    };\n\n    const loadSeries = async () => {\n        try {\n            const response = await secureApiEndpoints.accountant.getClasses();\n            if (response.success && response.data && response.data.classes) {\n                const allSeries = [];\n                response.data.classes.forEach(schoolClass => {\n                    if (schoolClass.series && Array.isArray(schoolClass.series)) {\n                        schoolClass.series.forEach(serie => {\n                            allSeries.push({\n                                ...serie,\n                                section_id: schoolClass?.level?.section?.id,\n                                section_name: schoolClass?.level?.section?.name,\n                                class_id: schoolClass?.id,\n                                class_name: schoolClass?.name,\n                                full_name: `${schoolClass?.level?.section?.name || ''} - ${schoolClass?.name || ''} - ${serie.name || ''}`\n                            });\n                        });\n                    }\n                });\n                setSeries(allSeries);\n            }\n        } catch (error) {\n            console.error('Error loading series:', error);\n        }\n    };\n\n    const loadStudentsBySeries = async () => {\n        if (!filters.series_id) return;\n        \n        try {\n            const response = await secureApiEndpoints.students.getByClassSeries(filters.series_id);\n            if (response.success) {\n                setStudents(response.data.students || []);\n            }\n        } catch (error) {\n            console.error('Error loading students:', error);\n        }\n    };\n\n    const generateCertificates = async () => {\n        if (generationType === 'by-section' && !filters.section_id) {\n            setError('Veuillez sélectionner une section');\n            return;\n        }\n        \n        if (generationType === 'by-class' && !filters.class_id) {\n            setError('Veuillez sélectionner une classe');\n            return;\n        }\n        \n        if (generationType === 'by-series' && !filters.series_id) {\n            setError('Veuillez sélectionner une série');\n            return;\n        }\n        \n        if (generationType === 'by-student' && !filters.student_id) {\n            setError('Veuillez sélectionner un élève');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError('');\n\n            const response = await secureApiEndpoints.reports.generateSchoolCertificates({\n                type: generationType,\n                ...filters\n            });\n\n            if (response.success) {\n                setCertificates(response.data.certificates);\n                setSuccess(`${response.data.certificates.length} certificat(s) généré(s)`);\n            } else {\n                setError(response.message);\n            }\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const previewCertificate = async (studentId) => {\n        try {\n            setLoading(true);\n\n            const response = await fetch(`${host}/api/reports/school-certificate/preview/${studentId}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${authService.getToken()}`,\n                    'Accept': 'application/pdf'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const htmlBlob = await response.blob();\n            const blobUrl = window.URL.createObjectURL(htmlBlob);\n            window.open(blobUrl, '_blank');\n            setTimeout(() => window.URL.revokeObjectURL(blobUrl), 1000);\n            \n            setSuccess('Aperçu du certificat ouvert');\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const downloadAllCertificates = async () => {\n        try {\n            setLoading(true);\n\n            const exportParams = {\n                type: generationType,\n                ...filters\n            };\n\n            const response = await fetch(`${host}/api/reports/school-certificates/download?${new URLSearchParams(exportParams).toString()}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${authService.getToken()}`,\n                    'Accept': 'application/pdf'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const pdfBlob = await response.blob();\n            const blobUrl = window.URL.createObjectURL(pdfBlob);\n            \n            // Créer un lien de téléchargement\n            const link = document.createElement('a');\n            link.href = blobUrl;\n            link.download = `certificats_scolarite_${generationType}_${new Date().toISOString().split('T')[0]}.pdf`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            \n            setTimeout(() => window.URL.revokeObjectURL(blobUrl), 1000);\n            setSuccess('Certificats téléchargés avec succès');\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('fr-FR');\n    };\n\n    return (\n        <Container fluid className=\"py-4\">\n            {/* Header */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h2>\n                                <Award className=\"me-2\" />\n                                Certificats de Scolarité\n                            </h2>\n                            <p className=\"text-muted\">\n                                Génération et gestion des certificats de scolarité par classe, élève ou section\n                            </p>\n                        </div>\n                        {certificates.length > 0 && (\n                            <Button\n                                variant=\"outline-danger\"\n                                onClick={downloadAllCertificates}\n                                disabled={loading}\n                            >\n                                <Download className=\"me-2\" />\n                                Télécharger Tout (PDF)\n                            </Button>\n                        )}\n                    </div>\n                </Col>\n            </Row>\n\n            {/* Alerts */}\n            {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                    {error}\n                </Alert>\n            )}\n            {success && (\n                <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>\n                    {success}\n                </Alert>\n            )}\n\n            {/* Filtres et génération */}\n            <Card className=\"mb-4\">\n                <Card.Header>\n                    <h5 className=\"mb-0\">\n                        <Award className=\"me-2\" />\n                        Paramètres de Génération\n                    </h5>\n                </Card.Header>\n                <Card.Body>\n                    {/* Type de génération */}\n                    <Row className=\"mb-3\">\n                        <Col>\n                            <Form.Label><strong>Type de génération</strong></Form.Label>\n                            <ButtonGroup className=\"d-flex\">\n                                <Button\n                                    variant={generationType === 'by-section' ? 'primary' : 'outline-primary'}\n                                    onClick={() => {\n                                        setGenerationType('by-section');\n                                        setFilters({ section_id: '', class_id: '', series_id: '', student_id: '' });\n                                    }}\n                                >\n                                    <PeopleFill className=\"me-2\" />\n                                    Par Section\n                                </Button>\n                                <Button\n                                    variant={generationType === 'by-class' ? 'primary' : 'outline-primary'}\n                                    onClick={() => {\n                                        setGenerationType('by-class');\n                                        setFilters({ section_id: '', class_id: '', series_id: '', student_id: '' });\n                                    }}\n                                >\n                                    <BookFill className=\"me-2\" />\n                                    Par Classe\n                                </Button>\n                                <Button\n                                    variant={generationType === 'by-series' ? 'primary' : 'outline-primary'}\n                                    onClick={() => {\n                                        setGenerationType('by-series');\n                                        setFilters({ section_id: '', class_id: '', series_id: '', student_id: '' });\n                                    }}\n                                >\n                                    <Award className=\"me-2\" />\n                                    Par Série\n                                </Button>\n                                <Button\n                                    variant={generationType === 'by-student' ? 'primary' : 'outline-primary'}\n                                    onClick={() => {\n                                        setGenerationType('by-student');\n                                        setFilters({ section_id: '', class_id: '', series_id: '', student_id: '' });\n                                    }}\n                                >\n                                    <PersonFill className=\"me-2\" />\n                                    Par Élève\n                                </Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n\n                    {/* Filtres selon le type */}\n                    <Row>\n                        {generationType === 'by-section' && (\n                            <Col md={3}>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Section <span className=\"text-danger\">*</span>\n                                    </Form.Label>\n                                    <Form.Select\n                                        value={filters.section_id}\n                                        onChange={(e) => setFilters({ ...filters, section_id: e.target.value })}\n                                        required\n                                    >\n                                        <option value=\"\">Sélectionner une section</option>\n                                        {sections.map(section => (\n                                            <option key={section.id} value={section.id}>\n                                                {section.name}\n                                            </option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                        {generationType === 'by-class' && (\n                            <Col md={3}>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Classe <span className=\"text-danger\">*</span>\n                                    </Form.Label>\n                                    <Form.Select\n                                        value={filters.class_id}\n                                        onChange={(e) => setFilters({ ...filters, class_id: e.target.value })}\n                                        required\n                                    >\n                                        <option value=\"\">Sélectionner une classe</option>\n                                        {classes.map(cls => (\n                                            <option key={cls.id} value={cls.id}>\n                                                {cls.name}\n                                            </option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                        {generationType === 'by-series' && (\n                            <Col md={3}>\n                                <Form.Group>\n                                    <Form.Label>\n                                        Série <span className=\"text-danger\">*</span>\n                                    </Form.Label>\n                                    <Form.Select\n                                        value={filters.series_id}\n                                        onChange={(e) => setFilters({ ...filters, series_id: e.target.value })}\n                                        required\n                                    >\n                                        <option value=\"\">Sélectionner une série</option>\n                                        {series.map(serie => (\n                                            <option key={serie.id} value={serie.id}>\n                                                {serie.full_name}\n                                            </option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                        {generationType === 'by-student' && (\n                            <>\n                                <Col md={3}>\n                                    <Form.Group>\n                                        <Form.Label>\n                                            Série <span className=\"text-danger\">*</span>\n                                        </Form.Label>\n                                        <Form.Select\n                                            value={filters.series_id}\n                                            onChange={(e) => setFilters({ ...filters, series_id: e.target.value, student_id: '' })}\n                                            required\n                                        >\n                                            <option value=\"\">Sélectionner une série</option>\n                                            {series.map(serie => (\n                                                <option key={serie.id} value={serie.id}>\n                                                    {serie.full_name}\n                                                </option>\n                                            ))}\n                                        </Form.Select>\n                                    </Form.Group>\n                                </Col>\n                                {filters.series_id && (\n                                    <Col md={3}>\n                                        <Form.Group>\n                                            <Form.Label>\n                                                Élève <span className=\"text-danger\">*</span>\n                                            </Form.Label>\n                                            <Form.Select\n                                                value={filters.student_id}\n                                                onChange={(e) => setFilters({ ...filters, student_id: e.target.value })}\n                                                required\n                                            >\n                                                <option value=\"\">Sélectionner un élève</option>\n                                                {students.map(student => (\n                                                    <option key={student.id} value={student.id}>\n                                                        {student.last_name} {student.first_name}\n                                                    </option>\n                                                ))}\n                                            </Form.Select>\n                                        </Form.Group>\n                                    </Col>\n                                )}\n                            </>\n                        )}\n\n                        <Col md={3} className=\"d-flex align-items-end\">\n                            <Button\n                                variant=\"success\"\n                                onClick={generateCertificates}\n                                disabled={loading}\n                                className=\"w-100\"\n                            >\n                                <Award className=\"me-2\" />\n                                {loading ? 'Génération...' : 'Générer les Certificats'}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            {/* Liste des certificats générés */}\n            {certificates.length > 0 && (\n                <Card>\n                    <Card.Header>\n                        <h5 className=\"mb-0\">\n                            Certificats Générés\n                            <Badge bg=\"primary\" className=\"ms-2\">\n                                {certificates.length} certificat{certificates.length > 1 ? 's' : ''}\n                            </Badge>\n                        </h5>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className=\"table-responsive\">\n                            <Table striped hover>\n                                <thead className=\"table-dark\">\n                                    <tr>\n                                        <th>Matricule</th>\n                                        <th>Nom et Prénom</th>\n                                        <th>Classe</th>\n                                        <th>Date de Naissance</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {certificates.map((certificate, index) => (\n                                        <tr key={index}>\n                                            <td>\n                                                <Badge bg=\"outline-primary\" text=\"primary\">\n                                                    {certificate.matricule}\n                                                </Badge>\n                                            </td>\n                                            <td>\n                                                <strong>{certificate.nom} {certificate.prenom}</strong>\n                                            </td>\n                                            <td>{certificate.classe}</td>\n                                            <td>{formatDate(certificate.date_naissance)}</td>\n                                            <td>\n                                                <ButtonGroup size=\"sm\">\n                                                    <Button\n                                                        variant=\"outline-info\"\n                                                        onClick={() => previewCertificate(certificate.student_id)}\n                                                        disabled={loading}\n                                                    >\n                                                        <Printer size={14} />\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        </div>\n                    </Card.Body>\n                </Card>\n            )}\n\n            {/* État vide */}\n            {!loading && certificates.length === 0 && (\n                <Card>\n                    <Card.Body>\n                        <div className=\"text-center py-5\">\n                            <Award size={64} className=\"text-muted mb-3\" />\n                            <h5 className=\"text-muted\">Aucun certificat généré</h5>\n                            <p className=\"text-muted\">\n                                Sélectionnez les paramètres et cliquez sur \"Générer les Certificats\"\n                            </p>\n                        </div>\n                    </Card.Body>\n                </Card>\n            )}\n\n            {/* Loading state */}\n            {loading && certificates.length === 0 && (\n                <div className=\"text-center py-5\">\n                    <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n                        <span className=\"visually-hidden\">Génération en cours...</span>\n                    </Spinner>\n                    <p className=\"text-muted mt-3\">Génération des certificats en cours...</p>\n                </div>\n            )}\n        </Container>\n    );\n};\n\nexport default SchoolCertificates;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}