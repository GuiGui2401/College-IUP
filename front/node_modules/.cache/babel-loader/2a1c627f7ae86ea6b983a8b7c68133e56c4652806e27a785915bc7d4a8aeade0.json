{"ast":null,"code":"import{useState,useEffect}from'react';import{Container,Row,Col,Card,Button,Table,Form,Alert,Spinner,Badge}from'react-bootstrap';import{FileEarmarkText,Calendar2,CurrencyDollar,Download,FiletypePdf,Search}from'react-bootstrap-icons';import{secureApiEndpoints}from'../../utils/apiMigration';import{extractErrorMessage}from'../../utils/errorHandler';import{authService}from'../../services/authService';import Swal from'sweetalert2';import{host}from'../../utils/fetch';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SchoolFeePaymentDetails=()=>{const[paymentDetails,setPaymentDetails]=useState([]);const[summary,setSummary]=useState({});const[schoolYear,setSchoolYear]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');// Filtres\nconst[filters,setFilters]=useState({start_date:'',end_date:''});useEffect(()=>{// Définir les dates par défaut (mois courant)\nconst today=new Date();const firstDayOfMonth=new Date(today.getFullYear(),today.getMonth(),1);const lastDayOfMonth=new Date(today.getFullYear(),today.getMonth()+1,0);setFilters({start_date:firstDayOfMonth.toISOString().split('T')[0],end_date:lastDayOfMonth.toISOString().split('T')[0]});},[]);const loadPaymentDetails=async()=>{if(!filters.start_date||!filters.end_date){setError('Les dates de début et de fin sont obligatoires');return;}if(new Date(filters.start_date)>new Date(filters.end_date)){setError('La date de début doit être antérieure à la date de fin');return;}try{setLoading(true);setError('');const response=await secureApiEndpoints.reports.getSchoolFeePaymentDetails({start_date:filters.start_date,end_date:filters.end_date});if(response.success){setPaymentDetails(response.data.payment_details);setSummary(response.data.summary);setSchoolYear(response.data.school_year);setSuccess(`${response.data.payment_details.length} paiements trouvés`);}else{setError(response.message);}}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const exportToCsv=async()=>{if(!filters.start_date||!filters.end_date){setError('Veuillez d\\'abord charger les données avec des dates valides');return;}try{setLoading(true);// Créer le contenu CSV\nconst csvHeaders=['Matricule','Nom','Prénom','Classe','Type Paiement','Date Validation','Montant','Reste à payer'];const csvRows=paymentDetails.map(detail=>[detail.matricule,detail.nom,detail.prenom,detail.classe,detail.type_paiement,detail.date_validation,detail.montant,detail.reste_a_payer||0]);// Créer le contenu CSV\nconst csvContent=[csvHeaders.join(','),...csvRows.map(row=>row.join(','))].join('\\n');// Créer et télécharger le fichier\nconst blob=new Blob([csvContent],{type:'text/csv;charset=utf-8;'});const link=document.createElement('a');if(link.download!==undefined){const url=URL.createObjectURL(blob);link.setAttribute('href',url);link.setAttribute('download',`detail_paiements_${filters.start_date}_${filters.end_date}.csv`);link.style.visibility='hidden';document.body.appendChild(link);link.click();document.body.removeChild(link);}setSuccess('Export CSV téléchargé avec succès');}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const exportToPdf=async()=>{if(!filters.start_date||!filters.end_date){setError('Veuillez d\\'abord charger les données avec des dates valides');return;}try{setLoading(true);// Créer l'URL d'export avec les paramètres\nconst exportParams={start_date:filters.start_date,end_date:filters.end_date};// Utiliser une approche plus directe avec fetch et blob pour PDF\nconst response=await fetch(`${host}/api/reports/school-fee-payment-details/export-pdf?${new URLSearchParams(exportParams).toString()}`,{method:'GET',headers:{'Authorization':`Bearer ${authService.getToken()}`,'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'}});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}// Créer un blob à partir de la réponse HTML\nconst htmlBlob=await response.blob();// Créer une URL temporaire et l'ouvrir dans un nouvel onglet\nconst blobUrl=window.URL.createObjectURL(htmlBlob);window.open(blobUrl,'_blank');// Nettoyer l'URL temporaire après un délai\nsetTimeout(()=>window.URL.revokeObjectURL(blobUrl),1000);setSuccess('Export PDF lancé avec succès');}catch(error){setError(extractErrorMessage(error));}finally{setLoading(false);}};const formatAmount=amount=>{return new Intl.NumberFormat('fr-FR',{style:'currency',currency:'XAF',minimumFractionDigits:0,maximumFractionDigits:0}).format(amount).replace('XAF','FCFA');};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('fr-FR');};// Grouper les paiements par type pour les statistiques\nconst getPaymentTypeStats=()=>{const stats={};paymentDetails.forEach(detail=>{if(!stats[detail.type_paiement]){stats[detail.type_paiement]={count:0,total:0};}stats[detail.type_paiement].count++;stats[detail.type_paiement].total+=detail.montant;});return stats;};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"D\\xE9tail des Paiements des Frais de Scolarit\\xE9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Rapport d\\xE9taill\\xE9 des paiements par p\\xE9riode avec type de paiement abr\\xE9g\\xE9\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-success\",onClick:exportToCsv,disabled:loading||paymentDetails.length===0,children:[/*#__PURE__*/_jsx(Download,{className:\"me-2\"}),\"Exporter CSV\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-danger\",onClick:exportToPdf,disabled:loading||paymentDetails.length===0,children:[/*#__PURE__*/_jsx(FiletypePdf,{className:\"me-2\"}),\"Exporter PDF\"]})]})]})})}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",dismissible:true,onClose:()=>setError(''),children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",dismissible:true,onClose:()=>setSuccess(''),children:success}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(Calendar2,{className:\"me-2\"}),\"Filtres par P\\xE9riode\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Date de d\\xE9but \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:filters.start_date,onChange:e=>setFilters({...filters,start_date:e.target.value}),required:true})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Date de fin \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:filters.end_date,onChange:e=>setFilters({...filters,end_date:e.target.value}),required:true})]})}),/*#__PURE__*/_jsx(Col,{md:4,className:\"d-flex align-items-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:loadPaymentDetails,disabled:loading,className:\"me-2\",children:[/*#__PURE__*/_jsx(Search,{className:\"me-2\"}),loading?'Chargement...':'Rechercher']})})]})})]}),summary.total_payments>0&&/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"bg-primary text-white\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Total Paiements\"}),/*#__PURE__*/_jsx(\"h4\",{children:summary.total_payments})]}),/*#__PURE__*/_jsx(FileEarmarkText,{size:30})]})})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Montant Total\"}),/*#__PURE__*/_jsx(\"h4\",{children:formatAmount(summary.total_amount)})]}),/*#__PURE__*/_jsx(CurrencyDollar,{size:30})]})})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"bg-info text-white\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:\"P\\xE9riode\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0\",children:[\"Du \",formatDate(summary.period_start),/*#__PURE__*/_jsx(\"br\",{}),\"au \",formatDate(summary.period_end)]})]})})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"bg-warning text-white\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Ann\\xE9e Scolaire\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:(schoolYear===null||schoolYear===void 0?void 0:schoolYear.name)||'N/A'})]})})})})]}),paymentDetails.length>0&&/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Statistiques par Type de Paiement\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Row,{children:Object.entries(getPaymentTypeStats()).map(_ref=>{let[type,stats]=_ref;return/*#__PURE__*/_jsx(Col,{md:3,className:\"mb-3\",children:/*#__PURE__*/_jsx(Card,{className:\"bg-light\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h6\",{children:type}),/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",className:\"me-2\",children:[stats.count,\" paiements\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{className:\"text-success fw-bold\",children:formatAmount(stats.total)})]})})},type);})})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[\"D\\xE9tail des Paiements\",summary.total_payments>0&&/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"ms-2\",children:[summary.total_payments,\" paiements\"]})]})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Chargement...\"})})}):paymentDetails.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(FileEarmarkText,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Aucun paiement trouv\\xE9 pour la p\\xE9riode s\\xE9lectionn\\xE9e\"}),/*#__PURE__*/_jsx(\"p\",{className:\"small text-muted\",children:\"Veuillez s\\xE9lectionner des dates et cliquer sur \\\"Rechercher\\\"\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-dark\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Matricule\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pr\\xE9nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Classe\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type Paiement\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date Validation\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-end\",children:\"Montant\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-end\",children:\"Reste \\xE0 payer\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:paymentDetails.map((detail,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:\"outline-primary\",text:\"primary\",children:detail.matricule})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:detail.nom})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:detail.prenom})}),/*#__PURE__*/_jsx(\"td\",{children:detail.classe}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:detail.type_paiement==='Inscrip'?'warning':detail.type_paiement.startsWith('Trch')?'info':detail.type_paiement==='RAME'?'success':'secondary',children:detail.type_paiement})}),/*#__PURE__*/_jsx(\"td\",{children:detail.date_validation}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-success\",children:formatAmount(detail.montant)})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:detail.reste_a_payer>0?\"text-warning\":\"text-success\",children:formatAmount(detail.reste_a_payer||0)})})]},index))}),/*#__PURE__*/_jsx(\"tfoot\",{className:\"table-secondary\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{colSpan:6,className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"TOTAL G\\xC9N\\xC9RAL :\"})}),/*#__PURE__*/_jsx(\"th\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-success fs-5\",children:formatAmount(summary.total_amount)})}),/*#__PURE__*/_jsx(\"th\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"strong\",{className:\"text-warning fs-5\",children:formatAmount(paymentDetails.reduce((sum,detail)=>sum+(detail.reste_a_payer||0),0))})})]})})]})})})})]})]});};export default SchoolFeePaymentDetails;","map":{"version":3,"names":["useState","useEffect","Container","Row","Col","Card","Button","Table","Form","Alert","Spinner","Badge","FileEarmarkText","Calendar2","CurrencyDollar","Download","FiletypePdf","Search","secureApiEndpoints","extractErrorMessage","authService","Swal","host","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SchoolFeePaymentDetails","paymentDetails","setPaymentDetails","summary","setSummary","schoolYear","setSchoolYear","loading","setLoading","error","setError","success","setSuccess","filters","setFilters","start_date","end_date","today","Date","firstDayOfMonth","getFullYear","getMonth","lastDayOfMonth","toISOString","split","loadPaymentDetails","response","reports","getSchoolFeePaymentDetails","data","payment_details","school_year","length","message","exportToCsv","csvHeaders","csvRows","map","detail","matricule","nom","prenom","classe","type_paiement","date_validation","montant","reste_a_payer","csvContent","join","row","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToPdf","exportParams","fetch","URLSearchParams","toString","method","headers","getToken","ok","Error","status","htmlBlob","blobUrl","window","open","setTimeout","revokeObjectURL","formatAmount","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","replace","formatDate","dateString","toLocaleDateString","getPaymentTypeStats","stats","forEach","count","total","fluid","className","children","variant","onClick","disabled","dismissible","onClose","Header","Body","md","Group","Label","Control","value","onChange","e","target","required","total_payments","size","total_amount","period_start","period_end","name","Object","entries","_ref","bg","animation","role","striped","hover","index","text","startsWith","colSpan","reduce","sum"],"sources":["/var/www/College-IUP/front/src/pages/Reports/SchoolFeePaymentDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    Button,\n    Table,\n    Form,\n    Alert,\n    Spinner,\n    Badge\n} from 'react-bootstrap';\nimport {\n    FileEarmarkText,\n    Calendar2,\n    CurrencyDollar,\n    Download,\n    FiletypePdf,\n    Search\n} from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\nimport { extractErrorMessage } from '../../utils/errorHandler';\nimport { authService } from '../../services/authService';\nimport Swal from 'sweetalert2';\nimport { host } from '../../utils/fetch';\n\nconst SchoolFeePaymentDetails = () => {\n    const [paymentDetails, setPaymentDetails] = useState([]);\n    const [summary, setSummary] = useState({});\n    const [schoolYear, setSchoolYear] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    // Filtres\n    const [filters, setFilters] = useState({\n        start_date: '',\n        end_date: ''\n    });\n\n    useEffect(() => {\n        // Définir les dates par défaut (mois courant)\n        const today = new Date();\n        const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n        const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n\n        setFilters({\n            start_date: firstDayOfMonth.toISOString().split('T')[0],\n            end_date: lastDayOfMonth.toISOString().split('T')[0]\n        });\n    }, []);\n\n    const loadPaymentDetails = async () => {\n        if (!filters.start_date || !filters.end_date) {\n            setError('Les dates de début et de fin sont obligatoires');\n            return;\n        }\n\n        if (new Date(filters.start_date) > new Date(filters.end_date)) {\n            setError('La date de début doit être antérieure à la date de fin');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError('');\n\n            const response = await secureApiEndpoints.reports.getSchoolFeePaymentDetails({\n                start_date: filters.start_date,\n                end_date: filters.end_date\n            });\n\n            if (response.success) {\n                setPaymentDetails(response.data.payment_details);\n                setSummary(response.data.summary);\n                setSchoolYear(response.data.school_year);\n                setSuccess(`${response.data.payment_details.length} paiements trouvés`);\n            } else {\n                setError(response.message);\n            }\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const exportToCsv = async () => {\n        if (!filters.start_date || !filters.end_date) {\n            setError('Veuillez d\\'abord charger les données avec des dates valides');\n            return;\n        }\n\n        try {\n            setLoading(true);\n\n            // Créer le contenu CSV\n            const csvHeaders = [\n                'Matricule',\n                'Nom', \n                'Prénom',\n                'Classe',\n                'Type Paiement',\n                'Date Validation', \n                'Montant',\n                'Reste à payer'\n            ];\n\n            const csvRows = paymentDetails.map(detail => [\n                detail.matricule,\n                detail.nom,\n                detail.prenom, \n                detail.classe,\n                detail.type_paiement,\n                detail.date_validation,\n                detail.montant,\n                detail.reste_a_payer || 0\n            ]);\n\n            // Créer le contenu CSV\n            const csvContent = [\n                csvHeaders.join(','),\n                ...csvRows.map(row => row.join(','))\n            ].join('\\n');\n\n            // Créer et télécharger le fichier\n            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n            const link = document.createElement('a');\n            if (link.download !== undefined) {\n                const url = URL.createObjectURL(blob);\n                link.setAttribute('href', url);\n                link.setAttribute('download', `detail_paiements_${filters.start_date}_${filters.end_date}.csv`);\n                link.style.visibility = 'hidden';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n\n            setSuccess('Export CSV téléchargé avec succès');\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const exportToPdf = async () => {\n        if (!filters.start_date || !filters.end_date) {\n            setError('Veuillez d\\'abord charger les données avec des dates valides');\n            return;\n        }\n\n        try {\n            setLoading(true);\n\n            // Créer l'URL d'export avec les paramètres\n            const exportParams = {\n                start_date: filters.start_date,\n                end_date: filters.end_date\n            };\n\n            // Utiliser une approche plus directe avec fetch et blob pour PDF\n            const response = await fetch(`${host}/api/reports/school-fee-payment-details/export-pdf?${new URLSearchParams(exportParams).toString()}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${authService.getToken()}`,\n                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            // Créer un blob à partir de la réponse HTML\n            const htmlBlob = await response.blob();\n            \n            // Créer une URL temporaire et l'ouvrir dans un nouvel onglet\n            const blobUrl = window.URL.createObjectURL(htmlBlob);\n            window.open(blobUrl, '_blank');\n            \n            // Nettoyer l'URL temporaire après un délai\n            setTimeout(() => window.URL.revokeObjectURL(blobUrl), 1000);\n            setSuccess('Export PDF lancé avec succès');\n        } catch (error) {\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const formatAmount = (amount) => {\n        return new Intl.NumberFormat('fr-FR', {\n            style: 'currency',\n            currency: 'XAF',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        }).format(amount).replace('XAF', 'FCFA');\n    };\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('fr-FR');\n    };\n\n    // Grouper les paiements par type pour les statistiques\n    const getPaymentTypeStats = () => {\n        const stats = {};\n        paymentDetails.forEach(detail => {\n            if (!stats[detail.type_paiement]) {\n                stats[detail.type_paiement] = {\n                    count: 0,\n                    total: 0\n                };\n            }\n            stats[detail.type_paiement].count++;\n            stats[detail.type_paiement].total += detail.montant;\n        });\n        return stats;\n    };\n\n    return (\n        <Container fluid className=\"py-4\">\n            {/* Header */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h2>Détail des Paiements des Frais de Scolarité</h2>\n                            <p className=\"text-muted\">\n                                Rapport détaillé des paiements par période avec type de paiement abrégé\n                            </p>\n                        </div>\n                        <div className=\"d-flex gap-2\">\n                            <Button\n                                variant=\"outline-success\"\n                                onClick={exportToCsv}\n                                disabled={loading || paymentDetails.length === 0}\n                            >\n                                <Download className=\"me-2\" />\n                                Exporter CSV\n                            </Button>\n                            <Button\n                                variant=\"outline-danger\"\n                                onClick={exportToPdf}\n                                disabled={loading || paymentDetails.length === 0}\n                            >\n                                <FiletypePdf className=\"me-2\" />\n                                Exporter PDF\n                            </Button>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            {/* Alerts */}\n            {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                    {error}\n                </Alert>\n            )}\n            {success && (\n                <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>\n                    {success}\n                </Alert>\n            )}\n\n            {/* Filtres */}\n            <Card className=\"mb-4\">\n                <Card.Header>\n                    <h5 className=\"mb-0\">\n                        <Calendar2 className=\"me-2\" />\n                        Filtres par Période\n                    </h5>\n                </Card.Header>\n                <Card.Body>\n                    <Row>\n                        <Col md={4}>\n                            <Form.Group>\n                                <Form.Label>Date de début <span className=\"text-danger\">*</span></Form.Label>\n                                <Form.Control\n                                    type=\"date\"\n                                    value={filters.start_date}\n                                    onChange={(e) => setFilters({ ...filters, start_date: e.target.value })}\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={4}>\n                            <Form.Group>\n                                <Form.Label>Date de fin <span className=\"text-danger\">*</span></Form.Label>\n                                <Form.Control\n                                    type=\"date\"\n                                    value={filters.end_date}\n                                    onChange={(e) => setFilters({ ...filters, end_date: e.target.value })}\n                                    required\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col md={4} className=\"d-flex align-items-end\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={loadPaymentDetails}\n                                disabled={loading}\n                                className=\"me-2\"\n                            >\n                                <Search className=\"me-2\" />\n                                {loading ? 'Chargement...' : 'Rechercher'}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            {/* Résumé */}\n            {summary.total_payments > 0 && (\n                <Row className=\"mb-4\">\n                    <Col md={3}>\n                        <Card className=\"bg-primary text-white\">\n                            <Card.Body>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div>\n                                        <h6>Total Paiements</h6>\n                                        <h4>{summary.total_payments}</h4>\n                                    </div>\n                                    <FileEarmarkText size={30} />\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={3}>\n                        <Card className=\"bg-success text-white\">\n                            <Card.Body>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div>\n                                        <h6>Montant Total</h6>\n                                        <h4>{formatAmount(summary.total_amount)}</h4>\n                                    </div>\n                                    <CurrencyDollar size={30} />\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={3}>\n                        <Card className=\"bg-info text-white\">\n                            <Card.Body>\n                                <div>\n                                    <h6>Période</h6>\n                                    <p className=\"mb-0\">\n                                        Du {formatDate(summary.period_start)}<br />\n                                        au {formatDate(summary.period_end)}\n                                    </p>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={3}>\n                        <Card className=\"bg-warning text-white\">\n                            <Card.Body>\n                                <div>\n                                    <h6>Année Scolaire</h6>\n                                    <h5 className=\"mb-0\">{schoolYear?.name || 'N/A'}</h5>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n\n            {/* Statistiques par type de paiement */}\n            {paymentDetails.length > 0 && (\n                <Card className=\"mb-4\">\n                    <Card.Header>\n                        <h5 className=\"mb-0\">Statistiques par Type de Paiement</h5>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row>\n                            {Object.entries(getPaymentTypeStats()).map(([type, stats]) => (\n                                <Col md={3} key={type} className=\"mb-3\">\n                                    <Card className=\"bg-light\">\n                                        <Card.Body className=\"text-center\">\n                                            <h6>{type}</h6>\n                                            <Badge bg=\"primary\" className=\"me-2\">{stats.count} paiements</Badge>\n                                            <br />\n                                            <small className=\"text-success fw-bold\">\n                                                {formatAmount(stats.total)}\n                                            </small>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Card.Body>\n                </Card>\n            )}\n\n            {/* Tableau des détails */}\n            <Card>\n                <Card.Header>\n                    <h5 className=\"mb-0\">\n                        Détail des Paiements\n                        {summary.total_payments > 0 && (\n                            <Badge bg=\"secondary\" className=\"ms-2\">\n                                {summary.total_payments} paiements\n                            </Badge>\n                        )}\n                    </h5>\n                </Card.Header>\n                <Card.Body>\n                    {loading ? (\n                        <div className=\"text-center py-4\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Chargement...</span>\n                            </Spinner>\n                        </div>\n                    ) : paymentDetails.length === 0 ? (\n                        <div className=\"text-center py-4\">\n                            <FileEarmarkText size={48} className=\"text-muted mb-3\" />\n                            <p className=\"text-muted\">\n                                Aucun paiement trouvé pour la période sélectionnée\n                            </p>\n                            <p className=\"small text-muted\">\n                                Veuillez sélectionner des dates et cliquer sur \"Rechercher\"\n                            </p>\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"table-responsive\">\n                                <Table striped hover>\n                                    <thead className=\"table-dark\">\n                                        <tr>\n                                            <th>Matricule</th>\n                                            <th>Nom</th>\n                                            <th>Prénom</th>\n                                            <th>Classe</th>\n                                            <th>Type Paiement</th>\n                                            <th>Date Validation</th>\n                                            <th className=\"text-end\">Montant</th>\n                                            <th className=\"text-end\">Reste à payer</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {paymentDetails.map((detail, index) => (\n                                            <tr key={index}>\n                                                <td>\n                                                    <Badge bg=\"outline-primary\" text=\"primary\">\n                                                        {detail.matricule}\n                                                    </Badge>\n                                                </td>\n                                                <td><strong>{detail.nom}</strong></td>\n                                                <td><strong>{detail.prenom}</strong></td>\n                                                <td>{detail.classe}</td>\n                                                <td>\n                                                    <Badge \n                                                        bg={\n                                                            detail.type_paiement === 'Inscrip' ? 'warning' :\n                                                            detail.type_paiement.startsWith('Trch') ? 'info' :\n                                                            detail.type_paiement === 'RAME' ? 'success' :\n                                                            'secondary'\n                                                        }\n                                                    >\n                                                        {detail.type_paiement}\n                                                    </Badge>\n                                                </td>\n                                                <td>{detail.date_validation}</td>\n                                                <td className=\"text-end\">\n                                                    <strong className=\"text-success\">\n                                                        {formatAmount(detail.montant)}\n                                                    </strong>\n                                                </td>\n                                                <td className=\"text-end\">\n                                                    <strong className={detail.reste_a_payer > 0 ? \"text-warning\" : \"text-success\"}>\n                                                        {formatAmount(detail.reste_a_payer || 0)}\n                                                    </strong>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                    <tfoot className=\"table-secondary\">\n                                        <tr>\n                                            <th colSpan={6} className=\"text-end\">\n                                                <strong>TOTAL GÉNÉRAL :</strong>\n                                            </th>\n                                            <th className=\"text-end\">\n                                                <strong className=\"text-success fs-5\">\n                                                    {formatAmount(summary.total_amount)}\n                                                </strong>\n                                            </th>\n                                            <th className=\"text-end\">\n                                                <strong className=\"text-warning fs-5\">\n                                                    {formatAmount(paymentDetails.reduce((sum, detail) => sum + (detail.reste_a_payer || 0), 0))}\n                                                </strong>\n                                            </th>\n                                        </tr>\n                                    </tfoot>\n                                </Table>\n                            </div>\n                        </>\n                    )}\n                </Card.Body>\n            </Card>\n        </Container>\n    );\n};\n\nexport default SchoolFeePaymentDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}