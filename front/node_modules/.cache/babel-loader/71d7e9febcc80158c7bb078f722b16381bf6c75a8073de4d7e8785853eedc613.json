{"ast":null,"code":"import{useState,useEffect}from'react';import{Container,Row,Col,Card,Button,Table,Badge,Modal,Form,Alert,Spinner,Pagination,Dropdown,ButtonGroup,InputGroup,ProgressBar}from'react-bootstrap';import{Plus,Eye,Download,PencilSquare,Trash3,Search,Filter,FolderPlus,Upload,Archive,File,FileEarmark,FileEarmarkPdf,FileEarmarkWord,FileEarmarkExcel,FolderFill,PersonFill,Calendar,Tag}from'react-bootstrap-icons';import{secureApiEndpoints}from'../../utils/apiMigration';import{extractErrorMessage}from'../../utils/errorHandler';import Swal from'sweetalert2';import FolderModal from'./components/FolderModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DocumentsManager=()=>{const[documents,setDocuments]=useState([]);const[folders,setFolders]=useState([]);const[documentTypes,setDocumentTypes]=useState({});const[visibilityTypes,setVisibilityTypes]=useState({});const[loading,setLoading]=useState(true);const[uploading,setUploading]=useState(false);const[uploadProgress,setUploadProgress]=useState(0);const[showUploadModal,setShowUploadModal]=useState(false);const[showFolderModal,setShowFolderModal]=useState(false);const[selectedDocument,setSelectedDocument]=useState(null);const[selectedFolder,setSelectedFolder]=useState(null);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[filters,setFilters]=useState({folder_id:'',document_type:'',search:'',visibility:''});const[uploadForm,setUploadForm]=useState({title:'',description:'',folder_id:'',document_type:'general',visibility:'private',tags:[],file:null,notes:''});const[folderForm,setFolderForm]=useState({name:'',description:'',folder_type:'custom',color:'#007bff',icon:'folder',is_private:false,allowed_roles:[]});const[error,setError]=useState('');const[success,setSuccess]=useState('');useEffect(()=>{loadData();},[currentPage,filters]);const loadData=async()=>{try{setLoading(true);console.log('Chargement des données...');// Charger en parallèle\nconst[docsResponse,foldersResponse,typesResponse,visibilityResponse]=await Promise.all([secureApiEndpoints.documents.getAll({page:currentPage,per_page:15,...filters}),secureApiEndpoints.documents.folders.getAll({roots_only:true}),secureApiEndpoints.documents.getTypes(),secureApiEndpoints.documents.getVisibilityTypes()]);console.log('Réponses:',{docsResponse,foldersResponse,typesResponse,visibilityResponse});if(docsResponse.success){setDocuments(docsResponse.data.data);setCurrentPage(docsResponse.data.current_page);setTotalPages(docsResponse.data.last_page);}if(foldersResponse.success){setFolders(foldersResponse.data);console.log('Dossiers chargés:',foldersResponse.data);}if(typesResponse.success){setDocumentTypes(typesResponse.data);console.log('Types de documents chargés:',typesResponse.data);}if(visibilityResponse.success){setVisibilityTypes(visibilityResponse.data);console.log('Types de visibilité chargés:',visibilityResponse.data);}}catch(error){console.error('Erreur lors du chargement:',error);setError(extractErrorMessage(error));}finally{setLoading(false);}};const handleUpload=async e=>{e.preventDefault();if(!uploadForm.file){setError('Veuillez sélectionner un fichier');return;}try{setUploading(true);setUploadProgress(0);setError('');console.log('Form data avant upload:',uploadForm);const formData=new FormData();Object.keys(uploadForm).forEach(key=>{if(key==='tags'&&Array.isArray(uploadForm[key])){uploadForm[key].forEach(tag=>formData.append('tags[]',tag));}else if(uploadForm[key]!==null&&uploadForm[key]!==''){formData.append(key,uploadForm[key]);}});// Debug: afficher le contenu du FormData\nconsole.log('FormData entries:');for(let[key,value]of formData.entries()){console.log(`${key}:`,value);}const response=await secureApiEndpoints.documents.upload(formData);if(response.success){setSuccess('Document uploadé avec succès');setShowUploadModal(false);resetUploadForm();loadData();Swal.fire({title:'Succès !',text:'Le document a été uploadé avec succès',icon:'success',confirmButtonText:'OK'});}}catch(error){console.error('Erreur upload:',error);setError(extractErrorMessage(error));}finally{setUploading(false);setUploadProgress(0);}};const handleDownload=async document=>{try{const response=await secureApiEndpoints.documents.download(document.id);// Créer un blob et déclencher le téléchargement\nconst blob=new Blob([response],{type:document.mime_type});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=document.original_filename;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);}catch(error){setError(extractErrorMessage(error));}};const handleDelete=async document=>{const result=await Swal.fire({title:'Êtes-vous sûr ?',text:'Cette action supprimera définitivement le document. Cette action est irréversible !',icon:'warning',showCancelButton:true,confirmButtonColor:'#d33',cancelButtonColor:'#3085d6',confirmButtonText:'Oui, supprimer !',cancelButtonText:'Annuler'});if(result.isConfirmed){try{const response=await secureApiEndpoints.documents.delete(document.id);if(response.success){setSuccess('Document supprimé avec succès');loadData();Swal.fire({title:'Supprimé !',text:'Le document a été supprimé avec succès',icon:'success',confirmButtonText:'OK'});}}catch(error){setError(extractErrorMessage(error));Swal.fire({title:'Erreur !',text:'Une erreur est survenue lors de la suppression',icon:'error',confirmButtonText:'OK'});}}};const resetUploadForm=()=>{setUploadForm({title:'',description:'',folder_id:'',document_type:'general',visibility:'private',tags:[],file:null,notes:''});};const handleFolderSuccess=newFolder=>{setSuccess('Dossier créé avec succès');setShowFolderModal(false);loadData();// Recharger les données\n};const resetFolderForm=()=>{setFolderForm({name:'',description:'',folder_type:'custom',color:'#007bff',icon:'folder',is_private:false,allowed_roles:[]});setSelectedFolder(null);};const getFileIcon=extension=>{const iconMap={'pdf':/*#__PURE__*/_jsx(FileEarmarkPdf,{className:\"text-danger\"}),'doc':/*#__PURE__*/_jsx(FileEarmarkWord,{className:\"text-primary\"}),'docx':/*#__PURE__*/_jsx(FileEarmarkWord,{className:\"text-primary\"}),'xls':/*#__PURE__*/_jsx(FileEarmarkExcel,{className:\"text-success\"}),'xlsx':/*#__PURE__*/_jsx(FileEarmarkExcel,{className:\"text-success\"}),'jpg':/*#__PURE__*/_jsx(FileEarmark,{className:\"text-info\"}),'jpeg':/*#__PURE__*/_jsx(FileEarmark,{className:\"text-info\"}),'png':/*#__PURE__*/_jsx(FileEarmark,{className:\"text-info\"})};return iconMap[extension===null||extension===void 0?void 0:extension.toLowerCase()]||/*#__PURE__*/_jsx(File,{className:\"text-secondary\"});};const getVisibilityBadge=visibility=>{const variants={'private':'secondary','shared':'primary','public':'success'};return/*#__PURE__*/_jsx(Badge,{bg:variants[visibility]||'secondary',children:visibilityTypes[visibility]||visibility});};const formatFileSize=bytes=>{if(bytes===0)return'0 B';const k=1024;const sizes=['B','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cahier des Pi\\xE8ces Jointes\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"G\\xE9rez vos documents et fichiers\"})]}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",onClick:()=>{resetFolderForm();setShowFolderModal(true);},children:[/*#__PURE__*/_jsx(FolderPlus,{className:\"me-2\"}),\"Nouveau Dossier\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:()=>{resetUploadForm();setShowUploadModal(true);},children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Uploader Document\"]})]})]})})}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",dismissible:true,onClose:()=>setError(''),children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",dismissible:true,onClose:()=>setSuccess(''),children:success}),/*#__PURE__*/_jsx(Card,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Dossier\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.folder_id,onChange:e=>{setFilters({...filters,folder_id:e.target.value});setCurrentPage(1);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Tous les dossiers\"}),folders.map(folder=>/*#__PURE__*/_jsx(\"option\",{value:folder.id,children:folder.name},folder.id))]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.document_type,onChange:e=>{setFilters({...filters,document_type:e.target.value});setCurrentPage(1);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Tous les types\"}),Object.entries(documentTypes).map(_ref=>{let[key,value]=_ref;return/*#__PURE__*/_jsx(\"option\",{value:key,children:value},key);})]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Visibilit\\xE9\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filters.visibility,onChange:e=>{setFilters({...filters,visibility:e.target.value});setCurrentPage(1);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Toutes les visibilit\\xE9s\"}),Object.entries(visibilityTypes).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsx(\"option\",{value:key,children:value},key);})]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Recherche\"}),/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Rechercher...\",value:filters.search,onChange:e=>setFilters({...filters,search:e.target.value})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",children:/*#__PURE__*/_jsx(Search,{})})]})]})})]})})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[\"Documents (\",documents.length,\")\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Chargement...\"})})}):documents.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(FileEarmark,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Aucun document trouv\\xE9\"}),/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:()=>{resetUploadForm();setShowUploadModal(true);},children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Uploader votre premier document\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Table,{responsive:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{width:\"40\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Document\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Dossier\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Visibilit\\xE9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Taille\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Upload\\xE9 par\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{width:\"120\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:documents.map(doc=>{var _doc$folder,_doc$folder2,_doc$uploader;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:getFileIcon(doc.file_extension)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:doc.title}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted small\",children:doc.original_filename}),doc.description&&/*#__PURE__*/_jsx(\"div\",{className:\"text-muted small mt-1\",children:doc.description.length>50?`${doc.description.substring(0,50)}...`:doc.description})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(FolderFill,{className:\"me-2\",style:{color:((_doc$folder=doc.folder)===null||_doc$folder===void 0?void 0:_doc$folder.color)||'#007bff'}}),((_doc$folder2=doc.folder)===null||_doc$folder2===void 0?void 0:_doc$folder2.name)||'Sans dossier']})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:documentTypes[doc.document_type]||doc.document_type})}),/*#__PURE__*/_jsx(\"td\",{children:getVisibilityBadge(doc.visibility)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:formatFileSize(doc.file_size)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(PersonFill,{className:\"me-1 text-muted\",size:14}),/*#__PURE__*/_jsx(\"small\",{children:((_doc$uploader=doc.uploader)===null||_doc$uploader===void 0?void 0:_doc$uploader.name)||'Inconnu'})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"me-1 text-muted\",size:14}),/*#__PURE__*/_jsx(\"small\",{children:new Date(doc.created_at).toLocaleDateString('fr-FR')})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",size:\"sm\",onClick:()=>handleDownload(doc),title:\"T\\xE9l\\xE9charger\",children:/*#__PURE__*/_jsx(Download,{size:14})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-warning\",size:\"sm\",onClick:()=>setSelectedDocument(doc),title:\"Modifier\",children:/*#__PURE__*/_jsx(PencilSquare,{size:14})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",size:\"sm\",onClick:()=>handleDelete(doc),title:\"Supprimer\",children:/*#__PURE__*/_jsx(Trash3,{size:14})})]})})]},doc.id);})})]}),totalPages>1&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center mt-3\",children:/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(Pagination.Prev,{disabled:currentPage===1,onClick:()=>setCurrentPage(currentPage-1)}),[...Array(totalPages)].map((_,index)=>/*#__PURE__*/_jsx(Pagination.Item,{active:index+1===currentPage,onClick:()=>setCurrentPage(index+1),children:index+1},index+1)),/*#__PURE__*/_jsx(Pagination.Next,{disabled:currentPage===totalPages,onClick:()=>setCurrentPage(currentPage+1)})]})})]})})]}),/*#__PURE__*/_jsx(FolderModal,{show:showFolderModal,onHide:()=>setShowFolderModal(false),folderData:selectedFolder,onSuccess:handleFolderSuccess}),/*#__PURE__*/_jsxs(Modal,{show:showUploadModal,onHide:()=>setShowUploadModal(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Uploader un Document\"})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleUpload,children:[/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Titre *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Titre du document\",value:uploadForm.title,onChange:e=>setUploadForm({...uploadForm,title:e.target.value}),required:true})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Dossier *\"}),/*#__PURE__*/_jsxs(Form.Select,{value:uploadForm.folder_id,onChange:e=>setUploadForm({...uploadForm,folder_id:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner un dossier\"}),folders.length===0?/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"Aucun dossier disponible\"}):folders.map(folder=>/*#__PURE__*/_jsx(\"option\",{value:folder.id,children:folder.name},folder.id))]})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type de document\"}),/*#__PURE__*/_jsx(Form.Select,{value:uploadForm.document_type,onChange:e=>setUploadForm({...uploadForm,document_type:e.target.value}),children:Object.entries(documentTypes).map(_ref3=>{let[key,value]=_ref3;return/*#__PURE__*/_jsx(\"option\",{value:key,children:value},key);})})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Visibilit\\xE9\"}),/*#__PURE__*/_jsx(Form.Select,{value:uploadForm.visibility,onChange:e=>setUploadForm({...uploadForm,visibility:e.target.value}),children:Object.entries(visibilityTypes).map(_ref4=>{let[key,value]=_ref4;return/*#__PURE__*/_jsx(\"option\",{value:key,children:value},key);})})]})})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,placeholder:\"Description du document (optionnel)\",value:uploadForm.description,onChange:e=>setUploadForm({...uploadForm,description:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Fichier *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",onChange:e=>setUploadForm({...uploadForm,file:e.target.files[0]}),required:true}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Types autoris\\xE9s : PDF, Word, Excel, PowerPoint, Images, Archives. Taille max : 10MB\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Notes personnelles\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:2,placeholder:\"Notes personnelles (optionnel)\",value:uploadForm.notes,onChange:e=>setUploadForm({...uploadForm,notes:e.target.value})})]}),uploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"small\",{children:\"Upload en cours...\"}),/*#__PURE__*/_jsxs(\"small\",{children:[uploadProgress,\"%\"]})]}),/*#__PURE__*/_jsx(ProgressBar,{now:uploadProgress})]})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowUploadModal(false),disabled:uploading,children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:uploading,children:uploading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Upload...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Uploader\"]})})]})]})]})]});};export default DocumentsManager;","map":{"version":3,"names":["useState","useEffect","Container","Row","Col","Card","Button","Table","Badge","Modal","Form","Alert","Spinner","Pagination","Dropdown","ButtonGroup","InputGroup","ProgressBar","Plus","Eye","Download","PencilSquare","Trash3","Search","Filter","FolderPlus","Upload","Archive","File","FileEarmark","FileEarmarkPdf","FileEarmarkWord","FileEarmarkExcel","FolderFill","PersonFill","Calendar","Tag","secureApiEndpoints","extractErrorMessage","Swal","FolderModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DocumentsManager","documents","setDocuments","folders","setFolders","documentTypes","setDocumentTypes","visibilityTypes","setVisibilityTypes","loading","setLoading","uploading","setUploading","uploadProgress","setUploadProgress","showUploadModal","setShowUploadModal","showFolderModal","setShowFolderModal","selectedDocument","setSelectedDocument","selectedFolder","setSelectedFolder","currentPage","setCurrentPage","totalPages","setTotalPages","filters","setFilters","folder_id","document_type","search","visibility","uploadForm","setUploadForm","title","description","tags","file","notes","folderForm","setFolderForm","name","folder_type","color","icon","is_private","allowed_roles","error","setError","success","setSuccess","loadData","console","log","docsResponse","foldersResponse","typesResponse","visibilityResponse","Promise","all","getAll","page","per_page","roots_only","getTypes","getVisibilityTypes","data","current_page","last_page","handleUpload","e","preventDefault","formData","FormData","Object","keys","forEach","key","Array","isArray","tag","append","value","entries","response","upload","resetUploadForm","fire","text","confirmButtonText","handleDownload","document","download","id","blob","Blob","type","mime_type","url","window","URL","createObjectURL","a","createElement","href","original_filename","body","appendChild","click","revokeObjectURL","removeChild","handleDelete","result","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","isConfirmed","delete","handleFolderSuccess","newFolder","resetFolderForm","getFileIcon","extension","iconMap","className","toLowerCase","getVisibilityBadge","variants","bg","children","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","fluid","variant","onClick","dismissible","onClose","Body","md","Group","Label","Select","onChange","target","map","folder","_ref","_ref2","Control","placeholder","Header","length","animation","role","size","responsive","hover","width","doc","_doc$folder","_doc$folder2","_doc$uploader","file_extension","substring","style","file_size","uploader","Date","created_at","toLocaleDateString","Prev","disabled","_","index","Item","active","Next","show","onHide","folderData","onSuccess","closeButton","Title","onSubmit","required","_ref3","_ref4","as","rows","files","Text","now","Footer"],"sources":["/var/www/College-IUP/front/src/pages/Documents/DocumentsManager.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    Button,\n    Table,\n    Badge,\n    Modal,\n    Form,\n    Alert,\n    Spinner,\n    Pagination,\n    Dropdown,\n    ButtonGroup,\n    InputGroup,\n    ProgressBar\n} from 'react-bootstrap';\nimport {\n    Plus,\n    Eye,\n    Download,\n    PencilSquare,\n    Trash3,\n    Search,\n    Filter,\n    FolderPlus,\n    Upload,\n    Archive,\n    File,\n    FileEarmark,\n    FileEarmarkPdf,\n    FileEarmarkWord,\n    FileEarmarkExcel,\n    FolderFill,\n    PersonFill,\n    Calendar,\n    Tag\n} from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../../utils/apiMigration';\nimport { extractErrorMessage } from '../../utils/errorHandler';\nimport Swal from 'sweetalert2';\nimport FolderModal from './components/FolderModal';\n\nconst DocumentsManager = () => {\n    const [documents, setDocuments] = useState([]);\n    const [folders, setFolders] = useState([]);\n    const [documentTypes, setDocumentTypes] = useState({});\n    const [visibilityTypes, setVisibilityTypes] = useState({});\n    \n    const [loading, setLoading] = useState(true);\n    const [uploading, setUploading] = useState(false);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    \n    const [showUploadModal, setShowUploadModal] = useState(false);\n    const [showFolderModal, setShowFolderModal] = useState(false);\n    const [selectedDocument, setSelectedDocument] = useState(null);\n    const [selectedFolder, setSelectedFolder] = useState(null);\n    \n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    \n    const [filters, setFilters] = useState({\n        folder_id: '',\n        document_type: '',\n        search: '',\n        visibility: ''\n    });\n    \n    const [uploadForm, setUploadForm] = useState({\n        title: '',\n        description: '',\n        folder_id: '',\n        document_type: 'general',\n        visibility: 'private',\n        tags: [],\n        file: null,\n        notes: ''\n    });\n    \n    const [folderForm, setFolderForm] = useState({\n        name: '',\n        description: '',\n        folder_type: 'custom',\n        color: '#007bff',\n        icon: 'folder',\n        is_private: false,\n        allowed_roles: []\n    });\n    \n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    useEffect(() => {\n        loadData();\n    }, [currentPage, filters]);\n\n    const loadData = async () => {\n        try {\n            setLoading(true);\n            \n            console.log('Chargement des données...');\n            \n            // Charger en parallèle\n            const [docsResponse, foldersResponse, typesResponse, visibilityResponse] = await Promise.all([\n                secureApiEndpoints.documents.getAll({ \n                    page: currentPage, \n                    per_page: 15,\n                    ...filters \n                }),\n                secureApiEndpoints.documents.folders.getAll({ roots_only: true }),\n                secureApiEndpoints.documents.getTypes(),\n                secureApiEndpoints.documents.getVisibilityTypes()\n            ]);\n\n            console.log('Réponses:', { docsResponse, foldersResponse, typesResponse, visibilityResponse });\n\n            if (docsResponse.success) {\n                setDocuments(docsResponse.data.data);\n                setCurrentPage(docsResponse.data.current_page);\n                setTotalPages(docsResponse.data.last_page);\n            }\n\n            if (foldersResponse.success) {\n                setFolders(foldersResponse.data);\n                console.log('Dossiers chargés:', foldersResponse.data);\n            }\n\n            if (typesResponse.success) {\n                setDocumentTypes(typesResponse.data);\n                console.log('Types de documents chargés:', typesResponse.data);\n            }\n\n            if (visibilityResponse.success) {\n                setVisibilityTypes(visibilityResponse.data);\n                console.log('Types de visibilité chargés:', visibilityResponse.data);\n            }\n\n        } catch (error) {\n            console.error('Erreur lors du chargement:', error);\n            setError(extractErrorMessage(error));\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleUpload = async (e) => {\n        e.preventDefault();\n        \n        if (!uploadForm.file) {\n            setError('Veuillez sélectionner un fichier');\n            return;\n        }\n\n        try {\n            setUploading(true);\n            setUploadProgress(0);\n            setError('');\n            \n            console.log('Form data avant upload:', uploadForm);\n            \n            const formData = new FormData();\n            Object.keys(uploadForm).forEach(key => {\n                if (key === 'tags' && Array.isArray(uploadForm[key])) {\n                    uploadForm[key].forEach(tag => formData.append('tags[]', tag));\n                } else if (uploadForm[key] !== null && uploadForm[key] !== '') {\n                    formData.append(key, uploadForm[key]);\n                }\n            });\n\n            // Debug: afficher le contenu du FormData\n            console.log('FormData entries:');\n            for (let [key, value] of formData.entries()) {\n                console.log(`${key}:`, value);\n            }\n\n            const response = await secureApiEndpoints.documents.upload(formData);\n            \n            if (response.success) {\n                setSuccess('Document uploadé avec succès');\n                setShowUploadModal(false);\n                resetUploadForm();\n                loadData();\n                \n                Swal.fire({\n                    title: 'Succès !',\n                    text: 'Le document a été uploadé avec succès',\n                    icon: 'success',\n                    confirmButtonText: 'OK'\n                });\n            }\n            \n        } catch (error) {\n            console.error('Erreur upload:', error);\n            setError(extractErrorMessage(error));\n        } finally {\n            setUploading(false);\n            setUploadProgress(0);\n        }\n    };\n\n    const handleDownload = async (document) => {\n        try {\n            const response = await secureApiEndpoints.documents.download(document.id);\n            \n            // Créer un blob et déclencher le téléchargement\n            const blob = new Blob([response], { type: document.mime_type });\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = document.original_filename;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n            \n        } catch (error) {\n            setError(extractErrorMessage(error));\n        }\n    };\n\n    const handleDelete = async (document) => {\n        const result = await Swal.fire({\n            title: 'Êtes-vous sûr ?',\n            text: 'Cette action supprimera définitivement le document. Cette action est irréversible !',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Oui, supprimer !',\n            cancelButtonText: 'Annuler'\n        });\n\n        if (result.isConfirmed) {\n            try {\n                const response = await secureApiEndpoints.documents.delete(document.id);\n                \n                if (response.success) {\n                    setSuccess('Document supprimé avec succès');\n                    loadData();\n                    \n                    Swal.fire({\n                        title: 'Supprimé !',\n                        text: 'Le document a été supprimé avec succès',\n                        icon: 'success',\n                        confirmButtonText: 'OK'\n                    });\n                }\n                \n            } catch (error) {\n                setError(extractErrorMessage(error));\n                \n                Swal.fire({\n                    title: 'Erreur !',\n                    text: 'Une erreur est survenue lors de la suppression',\n                    icon: 'error',\n                    confirmButtonText: 'OK'\n                });\n            }\n        }\n    };\n\n    const resetUploadForm = () => {\n        setUploadForm({\n            title: '',\n            description: '',\n            folder_id: '',\n            document_type: 'general',\n            visibility: 'private',\n            tags: [],\n            file: null,\n            notes: ''\n        });\n    };\n\n    const handleFolderSuccess = (newFolder) => {\n        setSuccess('Dossier créé avec succès');\n        setShowFolderModal(false);\n        loadData(); // Recharger les données\n    };\n\n    const resetFolderForm = () => {\n        setFolderForm({\n            name: '',\n            description: '',\n            folder_type: 'custom',\n            color: '#007bff',\n            icon: 'folder',\n            is_private: false,\n            allowed_roles: []\n        });\n        setSelectedFolder(null);\n    };\n\n    const getFileIcon = (extension) => {\n        const iconMap = {\n            'pdf': <FileEarmarkPdf className=\"text-danger\" />,\n            'doc': <FileEarmarkWord className=\"text-primary\" />,\n            'docx': <FileEarmarkWord className=\"text-primary\" />,\n            'xls': <FileEarmarkExcel className=\"text-success\" />,\n            'xlsx': <FileEarmarkExcel className=\"text-success\" />,\n            'jpg': <FileEarmark className=\"text-info\" />,\n            'jpeg': <FileEarmark className=\"text-info\" />,\n            'png': <FileEarmark className=\"text-info\" />,\n        };\n        \n        return iconMap[extension?.toLowerCase()] || <File className=\"text-secondary\" />;\n    };\n\n    const getVisibilityBadge = (visibility) => {\n        const variants = {\n            'private': 'secondary',\n            'shared': 'primary', \n            'public': 'success'\n        };\n        \n        return <Badge bg={variants[visibility] || 'secondary'}>{visibilityTypes[visibility] || visibility}</Badge>;\n    };\n\n    const formatFileSize = (bytes) => {\n        if (bytes === 0) return '0 B';\n        const k = 1024;\n        const sizes = ['B', 'KB', 'MB', 'GB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    return (\n        <Container fluid className=\"py-4\">\n            {/* Header */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                            <h2>Cahier des Pièces Jointes</h2>\n                            <p className=\"text-muted\">Gérez vos documents et fichiers</p>\n                        </div>\n                        <ButtonGroup>\n                            <Button\n                                variant=\"outline-primary\"\n                                onClick={() => {\n                                    resetFolderForm();\n                                    setShowFolderModal(true);\n                                }}\n                            >\n                                <FolderPlus className=\"me-2\" />\n                                Nouveau Dossier\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                onClick={() => {\n                                    resetUploadForm();\n                                    setShowUploadModal(true);\n                                }}\n                            >\n                                <Upload className=\"me-2\" />\n                                Uploader Document\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Col>\n            </Row>\n\n            {/* Alerts */}\n            {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                    {error}\n                </Alert>\n            )}\n            {success && (\n                <Alert variant=\"success\" dismissible onClose={() => setSuccess('')}>\n                    {success}\n                </Alert>\n            )}\n\n            {/* Filtres */}\n            <Card className=\"mb-4\">\n                <Card.Body>\n                    <Row>\n                        <Col md={3}>\n                            <Form.Group>\n                                <Form.Label>Dossier</Form.Label>\n                                <Form.Select\n                                    value={filters.folder_id}\n                                    onChange={(e) => {\n                                        setFilters({ ...filters, folder_id: e.target.value });\n                                        setCurrentPage(1);\n                                    }}\n                                >\n                                    <option value=\"\">Tous les dossiers</option>\n                                    {folders.map(folder => (\n                                        <option key={folder.id} value={folder.id}>\n                                            {folder.name}\n                                        </option>\n                                    ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={3}>\n                            <Form.Group>\n                                <Form.Label>Type</Form.Label>\n                                <Form.Select\n                                    value={filters.document_type}\n                                    onChange={(e) => {\n                                        setFilters({ ...filters, document_type: e.target.value });\n                                        setCurrentPage(1);\n                                    }}\n                                >\n                                    <option value=\"\">Tous les types</option>\n                                    {Object.entries(documentTypes).map(([key, value]) => (\n                                        <option key={key} value={key}>{value}</option>\n                                    ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={3}>\n                            <Form.Group>\n                                <Form.Label>Visibilité</Form.Label>\n                                <Form.Select\n                                    value={filters.visibility}\n                                    onChange={(e) => {\n                                        setFilters({ ...filters, visibility: e.target.value });\n                                        setCurrentPage(1);\n                                    }}\n                                >\n                                    <option value=\"\">Toutes les visibilités</option>\n                                    {Object.entries(visibilityTypes).map(([key, value]) => (\n                                        <option key={key} value={key}>{value}</option>\n                                    ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col md={3}>\n                            <Form.Group>\n                                <Form.Label>Recherche</Form.Label>\n                                <InputGroup>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Rechercher...\"\n                                        value={filters.search}\n                                        onChange={(e) => setFilters({ ...filters, search: e.target.value })}\n                                    />\n                                    <Button variant=\"outline-secondary\">\n                                        <Search />\n                                    </Button>\n                                </InputGroup>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            {/* Table des documents */}\n            <Card>\n                <Card.Header>\n                    <h5 className=\"mb-0\">Documents ({documents.length})</h5>\n                </Card.Header>\n                <Card.Body>\n                    {loading ? (\n                        <div className=\"text-center py-4\">\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Chargement...</span>\n                            </Spinner>\n                        </div>\n                    ) : documents.length === 0 ? (\n                        <div className=\"text-center py-4\">\n                            <FileEarmark size={48} className=\"text-muted mb-3\" />\n                            <p className=\"text-muted\">Aucun document trouvé</p>\n                            <Button\n                                variant=\"primary\"\n                                onClick={() => {\n                                    resetUploadForm();\n                                    setShowUploadModal(true);\n                                }}\n                            >\n                                <Upload className=\"me-2\" />\n                                Uploader votre premier document\n                            </Button>\n                        </div>\n                    ) : (\n                        <>\n                            <Table responsive hover>\n                                <thead>\n                                    <tr>\n                                        <th width=\"40\"></th>\n                                        <th>Document</th>\n                                        <th>Dossier</th>\n                                        <th>Type</th>\n                                        <th>Visibilité</th>\n                                        <th>Taille</th>\n                                        <th>Uploadé par</th>\n                                        <th>Date</th>\n                                        <th width=\"120\">Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {documents.map((doc) => (\n                                        <tr key={doc.id}>\n                                            <td>\n                                                {getFileIcon(doc.file_extension)}\n                                            </td>\n                                            <td>\n                                                <div>\n                                                    <strong>{doc.title}</strong>\n                                                    <div className=\"text-muted small\">\n                                                        {doc.original_filename}\n                                                    </div>\n                                                    {doc.description && (\n                                                        <div className=\"text-muted small mt-1\">\n                                                            {doc.description.length > 50 \n                                                                ? `${doc.description.substring(0, 50)}...`\n                                                                : doc.description\n                                                            }\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"d-flex align-items-center\">\n                                                    <FolderFill \n                                                        className=\"me-2\" \n                                                        style={{ color: doc.folder?.color || '#007bff' }} \n                                                    />\n                                                    {doc.folder?.name || 'Sans dossier'}\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <Badge bg=\"info\">\n                                                    {documentTypes[doc.document_type] || doc.document_type}\n                                                </Badge>\n                                            </td>\n                                            <td>\n                                                {getVisibilityBadge(doc.visibility)}\n                                            </td>\n                                            <td>\n                                                <small className=\"text-muted\">\n                                                    {formatFileSize(doc.file_size)}\n                                                </small>\n                                            </td>\n                                            <td>\n                                                <div className=\"d-flex align-items-center\">\n                                                    <PersonFill className=\"me-1 text-muted\" size={14} />\n                                                    <small>{doc.uploader?.name || 'Inconnu'}</small>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"d-flex align-items-center\">\n                                                    <Calendar className=\"me-1 text-muted\" size={14} />\n                                                    <small>\n                                                        {new Date(doc.created_at).toLocaleDateString('fr-FR')}\n                                                    </small>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"d-flex gap-1\">\n                                                    <Button\n                                                        variant=\"outline-primary\"\n                                                        size=\"sm\"\n                                                        onClick={() => handleDownload(doc)}\n                                                        title=\"Télécharger\"\n                                                    >\n                                                        <Download size={14} />\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outline-warning\"\n                                                        size=\"sm\"\n                                                        onClick={() => setSelectedDocument(doc)}\n                                                        title=\"Modifier\"\n                                                    >\n                                                        <PencilSquare size={14} />\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"outline-danger\"\n                                                        size=\"sm\"\n                                                        onClick={() => handleDelete(doc)}\n                                                        title=\"Supprimer\"\n                                                    >\n                                                        <Trash3 size={14} />\n                                                    </Button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n\n                            {/* Pagination */}\n                            {totalPages > 1 && (\n                                <div className=\"d-flex justify-content-center mt-3\">\n                                    <Pagination>\n                                        <Pagination.Prev\n                                            disabled={currentPage === 1}\n                                            onClick={() => setCurrentPage(currentPage - 1)}\n                                        />\n                                        {[...Array(totalPages)].map((_, index) => (\n                                            <Pagination.Item\n                                                key={index + 1}\n                                                active={index + 1 === currentPage}\n                                                onClick={() => setCurrentPage(index + 1)}\n                                            >\n                                                {index + 1}\n                                            </Pagination.Item>\n                                        ))}\n                                        <Pagination.Next\n                                            disabled={currentPage === totalPages}\n                                            onClick={() => setCurrentPage(currentPage + 1)}\n                                        />\n                                    </Pagination>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </Card.Body>\n            </Card>\n\n            {/* Modal Dossier */}\n            <FolderModal\n                show={showFolderModal}\n                onHide={() => setShowFolderModal(false)}\n                folderData={selectedFolder}\n                onSuccess={handleFolderSuccess}\n            />\n\n            {/* Modal Upload Document */}\n            <Modal\n                show={showUploadModal}\n                onHide={() => setShowUploadModal(false)}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Uploader un Document</Modal.Title>\n                </Modal.Header>\n                \n                <Form onSubmit={handleUpload}>\n                    <Modal.Body>\n                        <Row>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Titre *</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Titre du document\"\n                                        value={uploadForm.title}\n                                        onChange={(e) => setUploadForm({ ...uploadForm, title: e.target.value })}\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Dossier *</Form.Label>\n                                    <Form.Select\n                                        value={uploadForm.folder_id}\n                                        onChange={(e) => setUploadForm({ ...uploadForm, folder_id: e.target.value })}\n                                        required\n                                    >\n                                        <option value=\"\">Sélectionner un dossier</option>\n                                        {folders.length === 0 ? (\n                                            <option disabled>Aucun dossier disponible</option>\n                                        ) : (\n                                            folders.map(folder => (\n                                                <option key={folder.id} value={folder.id}>\n                                                    {folder.name}\n                                                </option>\n                                            ))\n                                        )}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Type de document</Form.Label>\n                                    <Form.Select\n                                        value={uploadForm.document_type}\n                                        onChange={(e) => setUploadForm({ ...uploadForm, document_type: e.target.value })}\n                                    >\n                                        {Object.entries(documentTypes).map(([key, value]) => (\n                                            <option key={key} value={key}>{value}</option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Visibilité</Form.Label>\n                                    <Form.Select\n                                        value={uploadForm.visibility}\n                                        onChange={(e) => setUploadForm({ ...uploadForm, visibility: e.target.value })}\n                                    >\n                                        {Object.entries(visibilityTypes).map(([key, value]) => (\n                                            <option key={key} value={key}>{value}</option>\n                                        ))}\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Description du document (optionnel)\"\n                                value={uploadForm.description}\n                                onChange={(e) => setUploadForm({ ...uploadForm, description: e.target.value })}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Fichier *</Form.Label>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setUploadForm({ ...uploadForm, file: e.target.files[0] })}\n                                required\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Types autorisés : PDF, Word, Excel, PowerPoint, Images, Archives. Taille max : 10MB\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Notes personnelles</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={2}\n                                placeholder=\"Notes personnelles (optionnel)\"\n                                value={uploadForm.notes}\n                                onChange={(e) => setUploadForm({ ...uploadForm, notes: e.target.value })}\n                            />\n                        </Form.Group>\n\n                        {uploading && (\n                            <div className=\"mb-3\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <small>Upload en cours...</small>\n                                    <small>{uploadProgress}%</small>\n                                </div>\n                                <ProgressBar now={uploadProgress} />\n                            </div>\n                        )}\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button \n                            variant=\"secondary\" \n                            onClick={() => setShowUploadModal(false)}\n                            disabled={uploading}\n                        >\n                            Annuler\n                        </Button>\n                        <Button \n                            variant=\"primary\" \n                            type=\"submit\"\n                            disabled={uploading}\n                        >\n                            {uploading ? (\n                                <>\n                                    <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                                    Upload...\n                                </>\n                            ) : (\n                                <>\n                                    <Upload className=\"me-2\" />\n                                    Uploader\n                                </>\n                            )}\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </Container>\n    );\n};\n\nexport default DocumentsManager;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OACIC,SAAS,CACTC,GAAG,CACHC,GAAG,CACHC,IAAI,CACJC,MAAM,CACNC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,IAAI,CACJC,KAAK,CACLC,OAAO,CACPC,UAAU,CACVC,QAAQ,CACRC,WAAW,CACXC,UAAU,CACVC,WAAW,KACR,iBAAiB,CACxB,OACIC,IAAI,CACJC,GAAG,CACHC,QAAQ,CACRC,YAAY,CACZC,MAAM,CACNC,MAAM,CACNC,MAAM,CACNC,UAAU,CACVC,MAAM,CACNC,OAAO,CACPC,IAAI,CACJC,WAAW,CACXC,cAAc,CACdC,eAAe,CACfC,gBAAgB,CAChBC,UAAU,CACVC,UAAU,CACVC,QAAQ,CACRC,GAAG,KACA,uBAAuB,CAC9B,OAASC,kBAAkB,KAAQ,0BAA0B,CAC7D,OAASC,mBAAmB,KAAQ,0BAA0B,CAC9D,MAAO,CAAAC,IAAI,KAAM,aAAa,CAC9B,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEnD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGjD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACkD,OAAO,CAAEC,UAAU,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACoD,aAAa,CAAEC,gBAAgB,CAAC,CAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtD,KAAM,CAACsD,eAAe,CAAEC,kBAAkB,CAAC,CAAGvD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1D,KAAM,CAACwD,OAAO,CAAEC,UAAU,CAAC,CAAGzD,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC0D,SAAS,CAAEC,YAAY,CAAC,CAAG3D,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC4D,cAAc,CAAEC,iBAAiB,CAAC,CAAG7D,QAAQ,CAAC,CAAC,CAAC,CAEvD,KAAM,CAAC8D,eAAe,CAAEC,kBAAkB,CAAC,CAAG/D,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACgE,eAAe,CAAEC,kBAAkB,CAAC,CAAGjE,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACkE,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnE,QAAQ,CAAC,IAAI,CAAC,CAC9D,KAAM,CAACoE,cAAc,CAAEC,iBAAiB,CAAC,CAAGrE,QAAQ,CAAC,IAAI,CAAC,CAE1D,KAAM,CAACsE,WAAW,CAAEC,cAAc,CAAC,CAAGvE,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACwE,UAAU,CAAEC,aAAa,CAAC,CAAGzE,QAAQ,CAAC,CAAC,CAAC,CAE/C,KAAM,CAAC0E,OAAO,CAAEC,UAAU,CAAC,CAAG3E,QAAQ,CAAC,CACnC4E,SAAS,CAAE,EAAE,CACbC,aAAa,CAAE,EAAE,CACjBC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,EAChB,CAAC,CAAC,CAEF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGjF,QAAQ,CAAC,CACzCkF,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EAAE,CACfP,SAAS,CAAE,EAAE,CACbC,aAAa,CAAE,SAAS,CACxBE,UAAU,CAAE,SAAS,CACrBK,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,EACX,CAAC,CAAC,CAEF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGxF,QAAQ,CAAC,CACzCyF,IAAI,CAAE,EAAE,CACRN,WAAW,CAAE,EAAE,CACfO,WAAW,CAAE,QAAQ,CACrBC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,QAAQ,CACdC,UAAU,CAAE,KAAK,CACjBC,aAAa,CAAE,EACnB,CAAC,CAAC,CAEF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhG,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiG,OAAO,CAAEC,UAAU,CAAC,CAAGlG,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACZkG,QAAQ,CAAC,CAAC,CACd,CAAC,CAAE,CAAC7B,WAAW,CAAEI,OAAO,CAAC,CAAC,CAE1B,KAAM,CAAAyB,QAAQ,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACA1C,UAAU,CAAC,IAAI,CAAC,CAEhB2C,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAExC;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAEC,aAAa,CAAEC,kBAAkB,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACzFtE,kBAAkB,CAACW,SAAS,CAAC4D,MAAM,CAAC,CAChCC,IAAI,CAAEvC,WAAW,CACjBwC,QAAQ,CAAE,EAAE,CACZ,GAAGpC,OACP,CAAC,CAAC,CACFrC,kBAAkB,CAACW,SAAS,CAACE,OAAO,CAAC0D,MAAM,CAAC,CAAEG,UAAU,CAAE,IAAK,CAAC,CAAC,CACjE1E,kBAAkB,CAACW,SAAS,CAACgE,QAAQ,CAAC,CAAC,CACvC3E,kBAAkB,CAACW,SAAS,CAACiE,kBAAkB,CAAC,CAAC,CACpD,CAAC,CAEFb,OAAO,CAACC,GAAG,CAAC,WAAW,CAAE,CAAEC,YAAY,CAAEC,eAAe,CAAEC,aAAa,CAAEC,kBAAmB,CAAC,CAAC,CAE9F,GAAIH,YAAY,CAACL,OAAO,CAAE,CACtBhD,YAAY,CAACqD,YAAY,CAACY,IAAI,CAACA,IAAI,CAAC,CACpC3C,cAAc,CAAC+B,YAAY,CAACY,IAAI,CAACC,YAAY,CAAC,CAC9C1C,aAAa,CAAC6B,YAAY,CAACY,IAAI,CAACE,SAAS,CAAC,CAC9C,CAEA,GAAIb,eAAe,CAACN,OAAO,CAAE,CACzB9C,UAAU,CAACoD,eAAe,CAACW,IAAI,CAAC,CAChCd,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEE,eAAe,CAACW,IAAI,CAAC,CAC1D,CAEA,GAAIV,aAAa,CAACP,OAAO,CAAE,CACvB5C,gBAAgB,CAACmD,aAAa,CAACU,IAAI,CAAC,CACpCd,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEG,aAAa,CAACU,IAAI,CAAC,CAClE,CAEA,GAAIT,kBAAkB,CAACR,OAAO,CAAE,CAC5B1C,kBAAkB,CAACkD,kBAAkB,CAACS,IAAI,CAAC,CAC3Cd,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEI,kBAAkB,CAACS,IAAI,CAAC,CACxE,CAEJ,CAAE,MAAOnB,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDC,QAAQ,CAAC1D,mBAAmB,CAACyD,KAAK,CAAC,CAAC,CACxC,CAAC,OAAS,CACNtC,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,KAAM,CAAA4D,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAACvC,UAAU,CAACK,IAAI,CAAE,CAClBW,QAAQ,CAAC,kCAAkC,CAAC,CAC5C,OACJ,CAEA,GAAI,CACArC,YAAY,CAAC,IAAI,CAAC,CAClBE,iBAAiB,CAAC,CAAC,CAAC,CACpBmC,QAAQ,CAAC,EAAE,CAAC,CAEZI,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAErB,UAAU,CAAC,CAElD,KAAM,CAAAwC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BC,MAAM,CAACC,IAAI,CAAC3C,UAAU,CAAC,CAAC4C,OAAO,CAACC,GAAG,EAAI,CACnC,GAAIA,GAAG,GAAK,MAAM,EAAIC,KAAK,CAACC,OAAO,CAAC/C,UAAU,CAAC6C,GAAG,CAAC,CAAC,CAAE,CAClD7C,UAAU,CAAC6C,GAAG,CAAC,CAACD,OAAO,CAACI,GAAG,EAAIR,QAAQ,CAACS,MAAM,CAAC,QAAQ,CAAED,GAAG,CAAC,CAAC,CAClE,CAAC,IAAM,IAAIhD,UAAU,CAAC6C,GAAG,CAAC,GAAK,IAAI,EAAI7C,UAAU,CAAC6C,GAAG,CAAC,GAAK,EAAE,CAAE,CAC3DL,QAAQ,CAACS,MAAM,CAACJ,GAAG,CAAE7C,UAAU,CAAC6C,GAAG,CAAC,CAAC,CACzC,CACJ,CAAC,CAAC,CAEF;AACAzB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChC,IAAK,GAAI,CAACwB,GAAG,CAAEK,KAAK,CAAC,EAAI,CAAAV,QAAQ,CAACW,OAAO,CAAC,CAAC,CAAE,CACzC/B,OAAO,CAACC,GAAG,CAAC,GAAGwB,GAAG,GAAG,CAAEK,KAAK,CAAC,CACjC,CAEA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA/F,kBAAkB,CAACW,SAAS,CAACqF,MAAM,CAACb,QAAQ,CAAC,CAEpE,GAAIY,QAAQ,CAACnC,OAAO,CAAE,CAClBC,UAAU,CAAC,8BAA8B,CAAC,CAC1CnC,kBAAkB,CAAC,KAAK,CAAC,CACzBuE,eAAe,CAAC,CAAC,CACjBnC,QAAQ,CAAC,CAAC,CAEV5D,IAAI,CAACgG,IAAI,CAAC,CACNrD,KAAK,CAAE,UAAU,CACjBsD,IAAI,CAAE,uCAAuC,CAC7C5C,IAAI,CAAE,SAAS,CACf6C,iBAAiB,CAAE,IACvB,CAAC,CAAC,CACN,CAEJ,CAAE,MAAO1C,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCC,QAAQ,CAAC1D,mBAAmB,CAACyD,KAAK,CAAC,CAAC,CACxC,CAAC,OAAS,CACNpC,YAAY,CAAC,KAAK,CAAC,CACnBE,iBAAiB,CAAC,CAAC,CAAC,CACxB,CACJ,CAAC,CAED,KAAM,CAAA6E,cAAc,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvC,GAAI,CACA,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAA/F,kBAAkB,CAACW,SAAS,CAAC4F,QAAQ,CAACD,QAAQ,CAACE,EAAE,CAAC,CAEzE;AACA,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACX,QAAQ,CAAC,CAAE,CAAEY,IAAI,CAAEL,QAAQ,CAACM,SAAU,CAAC,CAAC,CAC/D,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC,CAC5C,KAAM,CAAAQ,CAAC,CAAGX,QAAQ,CAACY,aAAa,CAAC,GAAG,CAAC,CACrCD,CAAC,CAACE,IAAI,CAAGN,GAAG,CACZI,CAAC,CAACV,QAAQ,CAAGD,QAAQ,CAACc,iBAAiB,CACvCd,QAAQ,CAACe,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC,CAC5BA,CAAC,CAACM,KAAK,CAAC,CAAC,CACTT,MAAM,CAACC,GAAG,CAACS,eAAe,CAACX,GAAG,CAAC,CAC/BP,QAAQ,CAACe,IAAI,CAACI,WAAW,CAACR,CAAC,CAAC,CAEhC,CAAE,MAAOvD,KAAK,CAAE,CACZC,QAAQ,CAAC1D,mBAAmB,CAACyD,KAAK,CAAC,CAAC,CACxC,CACJ,CAAC,CAED,KAAM,CAAAgE,YAAY,CAAG,KAAO,CAAApB,QAAQ,EAAK,CACrC,KAAM,CAAAqB,MAAM,CAAG,KAAM,CAAAzH,IAAI,CAACgG,IAAI,CAAC,CAC3BrD,KAAK,CAAE,iBAAiB,CACxBsD,IAAI,CAAE,qFAAqF,CAC3F5C,IAAI,CAAE,SAAS,CACfqE,gBAAgB,CAAE,IAAI,CACtBC,kBAAkB,CAAE,MAAM,CAC1BC,iBAAiB,CAAE,SAAS,CAC5B1B,iBAAiB,CAAE,kBAAkB,CACrC2B,gBAAgB,CAAE,SACtB,CAAC,CAAC,CAEF,GAAIJ,MAAM,CAACK,WAAW,CAAE,CACpB,GAAI,CACA,KAAM,CAAAjC,QAAQ,CAAG,KAAM,CAAA/F,kBAAkB,CAACW,SAAS,CAACsH,MAAM,CAAC3B,QAAQ,CAACE,EAAE,CAAC,CAEvE,GAAIT,QAAQ,CAACnC,OAAO,CAAE,CAClBC,UAAU,CAAC,+BAA+B,CAAC,CAC3CC,QAAQ,CAAC,CAAC,CAEV5D,IAAI,CAACgG,IAAI,CAAC,CACNrD,KAAK,CAAE,YAAY,CACnBsD,IAAI,CAAE,wCAAwC,CAC9C5C,IAAI,CAAE,SAAS,CACf6C,iBAAiB,CAAE,IACvB,CAAC,CAAC,CACN,CAEJ,CAAE,MAAO1C,KAAK,CAAE,CACZC,QAAQ,CAAC1D,mBAAmB,CAACyD,KAAK,CAAC,CAAC,CAEpCxD,IAAI,CAACgG,IAAI,CAAC,CACNrD,KAAK,CAAE,UAAU,CACjBsD,IAAI,CAAE,gDAAgD,CACtD5C,IAAI,CAAE,OAAO,CACb6C,iBAAiB,CAAE,IACvB,CAAC,CAAC,CACN,CACJ,CACJ,CAAC,CAED,KAAM,CAAAH,eAAe,CAAGA,CAAA,GAAM,CAC1BrD,aAAa,CAAC,CACVC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EAAE,CACfP,SAAS,CAAE,EAAE,CACbC,aAAa,CAAE,SAAS,CACxBE,UAAU,CAAE,SAAS,CACrBK,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,EACX,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAiF,mBAAmB,CAAIC,SAAS,EAAK,CACvCtE,UAAU,CAAC,0BAA0B,CAAC,CACtCjC,kBAAkB,CAAC,KAAK,CAAC,CACzBkC,QAAQ,CAAC,CAAC,CAAE;AAChB,CAAC,CAED,KAAM,CAAAsE,eAAe,CAAGA,CAAA,GAAM,CAC1BjF,aAAa,CAAC,CACVC,IAAI,CAAE,EAAE,CACRN,WAAW,CAAE,EAAE,CACfO,WAAW,CAAE,QAAQ,CACrBC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,QAAQ,CACdC,UAAU,CAAE,KAAK,CACjBC,aAAa,CAAE,EACnB,CAAC,CAAC,CACFzB,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAqG,WAAW,CAAIC,SAAS,EAAK,CAC/B,KAAM,CAAAC,OAAO,CAAG,CACZ,KAAK,cAAElI,IAAA,CAACZ,cAAc,EAAC+I,SAAS,CAAC,aAAa,CAAE,CAAC,CACjD,KAAK,cAAEnI,IAAA,CAACX,eAAe,EAAC8I,SAAS,CAAC,cAAc,CAAE,CAAC,CACnD,MAAM,cAAEnI,IAAA,CAACX,eAAe,EAAC8I,SAAS,CAAC,cAAc,CAAE,CAAC,CACpD,KAAK,cAAEnI,IAAA,CAACV,gBAAgB,EAAC6I,SAAS,CAAC,cAAc,CAAE,CAAC,CACpD,MAAM,cAAEnI,IAAA,CAACV,gBAAgB,EAAC6I,SAAS,CAAC,cAAc,CAAE,CAAC,CACrD,KAAK,cAAEnI,IAAA,CAACb,WAAW,EAACgJ,SAAS,CAAC,WAAW,CAAE,CAAC,CAC5C,MAAM,cAAEnI,IAAA,CAACb,WAAW,EAACgJ,SAAS,CAAC,WAAW,CAAE,CAAC,CAC7C,KAAK,cAAEnI,IAAA,CAACb,WAAW,EAACgJ,SAAS,CAAC,WAAW,CAAE,CAC/C,CAAC,CAED,MAAO,CAAAD,OAAO,CAACD,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEG,WAAW,CAAC,CAAC,CAAC,eAAIpI,IAAA,CAACd,IAAI,EAACiJ,SAAS,CAAC,gBAAgB,CAAE,CAAC,CACnF,CAAC,CAED,KAAM,CAAAE,kBAAkB,CAAIhG,UAAU,EAAK,CACvC,KAAM,CAAAiG,QAAQ,CAAG,CACb,SAAS,CAAE,WAAW,CACtB,QAAQ,CAAE,SAAS,CACnB,QAAQ,CAAE,SACd,CAAC,CAED,mBAAOtI,IAAA,CAAClC,KAAK,EAACyK,EAAE,CAAED,QAAQ,CAACjG,UAAU,CAAC,EAAI,WAAY,CAAAmG,QAAA,CAAE5H,eAAe,CAACyB,UAAU,CAAC,EAAIA,UAAU,CAAQ,CAAC,CAC9G,CAAC,CAED,KAAM,CAAAoG,cAAc,CAAIC,KAAK,EAAK,CAC9B,GAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,KAAK,CAC7B,KAAM,CAAAC,CAAC,CAAG,IAAI,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACrC,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACnF,GAAG,CAAC+E,KAAK,CAAC,CAAGI,IAAI,CAACnF,GAAG,CAACgF,CAAC,CAAC,CAAC,CACnD,MAAO,CAAAK,UAAU,CAAC,CAACN,KAAK,CAAGI,IAAI,CAACG,GAAG,CAACN,CAAC,CAAEE,CAAC,CAAC,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAG,GAAG,CAAGN,KAAK,CAACC,CAAC,CAAC,CAC3E,CAAC,CAED,mBACI3I,KAAA,CAAC1C,SAAS,EAAC2L,KAAK,MAAChB,SAAS,CAAC,MAAM,CAAAK,QAAA,eAE7BxI,IAAA,CAACvC,GAAG,EAAC0K,SAAS,CAAC,MAAM,CAAAK,QAAA,cACjBxI,IAAA,CAACtC,GAAG,EAAA8K,QAAA,cACAtI,KAAA,QAAKiI,SAAS,CAAC,mDAAmD,CAAAK,QAAA,eAC9DtI,KAAA,QAAAsI,QAAA,eACIxI,IAAA,OAAAwI,QAAA,CAAI,8BAAyB,CAAI,CAAC,cAClCxI,IAAA,MAAGmI,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,oCAA+B,CAAG,CAAC,EAC5D,CAAC,cACNtI,KAAA,CAAC7B,WAAW,EAAAmK,QAAA,eACRtI,KAAA,CAACtC,MAAM,EACHwL,OAAO,CAAC,iBAAiB,CACzBC,OAAO,CAAEA,CAAA,GAAM,CACXtB,eAAe,CAAC,CAAC,CACjBxG,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAE,CAAAiH,QAAA,eAEFxI,IAAA,CAACjB,UAAU,EAACoJ,SAAS,CAAC,MAAM,CAAE,CAAC,kBAEnC,EAAQ,CAAC,cACTjI,KAAA,CAACtC,MAAM,EACHwL,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEA,CAAA,GAAM,CACXzD,eAAe,CAAC,CAAC,CACjBvE,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAE,CAAAmH,QAAA,eAEFxI,IAAA,CAAChB,MAAM,EAACmJ,SAAS,CAAC,MAAM,CAAE,CAAC,oBAE/B,EAAQ,CAAC,EACA,CAAC,EACb,CAAC,CACL,CAAC,CACL,CAAC,CAGL9E,KAAK,eACFrD,IAAA,CAAC/B,KAAK,EAACmL,OAAO,CAAC,QAAQ,CAACE,WAAW,MAACC,OAAO,CAAEA,CAAA,GAAMjG,QAAQ,CAAC,EAAE,CAAE,CAAAkF,QAAA,CAC3DnF,KAAK,CACH,CACV,CACAE,OAAO,eACJvD,IAAA,CAAC/B,KAAK,EAACmL,OAAO,CAAC,SAAS,CAACE,WAAW,MAACC,OAAO,CAAEA,CAAA,GAAM/F,UAAU,CAAC,EAAE,CAAE,CAAAgF,QAAA,CAC9DjF,OAAO,CACL,CACV,cAGDvD,IAAA,CAACrC,IAAI,EAACwK,SAAS,CAAC,MAAM,CAAAK,QAAA,cAClBxI,IAAA,CAACrC,IAAI,CAAC6L,IAAI,EAAAhB,QAAA,cACNtI,KAAA,CAACzC,GAAG,EAAA+K,QAAA,eACAxI,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAAAlB,QAAA,eACPxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,SAAO,CAAY,CAAC,cAChCtI,KAAA,CAAClC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAExD,OAAO,CAACE,SAAU,CACzB2H,QAAQ,CAAGjF,CAAC,EAAK,CACb3C,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEE,SAAS,CAAE0C,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAC,CACrD3D,cAAc,CAAC,CAAC,CAAC,CACrB,CAAE,CAAA2G,QAAA,eAEFxI,IAAA,WAAQwF,KAAK,CAAC,EAAE,CAAAgD,QAAA,CAAC,mBAAiB,CAAQ,CAAC,CAC1ChI,OAAO,CAACuJ,GAAG,CAACC,MAAM,eACfhK,IAAA,WAAwBwF,KAAK,CAAEwE,MAAM,CAAC7D,EAAG,CAAAqC,QAAA,CACpCwB,MAAM,CAACjH,IAAI,EADHiH,MAAM,CAAC7D,EAEZ,CACX,CAAC,EACO,CAAC,EACN,CAAC,CACZ,CAAC,cACNnG,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAAAlB,QAAA,eACPxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,MAAI,CAAY,CAAC,cAC7BtI,KAAA,CAAClC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAExD,OAAO,CAACG,aAAc,CAC7B0H,QAAQ,CAAGjF,CAAC,EAAK,CACb3C,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEG,aAAa,CAAEyC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAC,CACzD3D,cAAc,CAAC,CAAC,CAAC,CACrB,CAAE,CAAA2G,QAAA,eAEFxI,IAAA,WAAQwF,KAAK,CAAC,EAAE,CAAAgD,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCxD,MAAM,CAACS,OAAO,CAAC/E,aAAa,CAAC,CAACqJ,GAAG,CAACE,IAAA,MAAC,CAAC9E,GAAG,CAAEK,KAAK,CAAC,CAAAyE,IAAA,oBAC5CjK,IAAA,WAAkBwF,KAAK,CAAEL,GAAI,CAAAqD,QAAA,CAAEhD,KAAK,EAAvBL,GAAgC,CAAC,EACjD,CAAC,EACO,CAAC,EACN,CAAC,CACZ,CAAC,cACNnF,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAAAlB,QAAA,eACPxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,eAAU,CAAY,CAAC,cACnCtI,KAAA,CAAClC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAExD,OAAO,CAACK,UAAW,CAC1BwH,QAAQ,CAAGjF,CAAC,EAAK,CACb3C,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEK,UAAU,CAAEuC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAC,CACtD3D,cAAc,CAAC,CAAC,CAAC,CACrB,CAAE,CAAA2G,QAAA,eAEFxI,IAAA,WAAQwF,KAAK,CAAC,EAAE,CAAAgD,QAAA,CAAC,2BAAsB,CAAQ,CAAC,CAC/CxD,MAAM,CAACS,OAAO,CAAC7E,eAAe,CAAC,CAACmJ,GAAG,CAACG,KAAA,MAAC,CAAC/E,GAAG,CAAEK,KAAK,CAAC,CAAA0E,KAAA,oBAC9ClK,IAAA,WAAkBwF,KAAK,CAAEL,GAAI,CAAAqD,QAAA,CAAEhD,KAAK,EAAvBL,GAAgC,CAAC,EACjD,CAAC,EACO,CAAC,EACN,CAAC,CACZ,CAAC,cACNnF,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAAAlB,QAAA,eACPxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,WAAS,CAAY,CAAC,cAClCtI,KAAA,CAAC5B,UAAU,EAAAkK,QAAA,eACPxI,IAAA,CAAChC,IAAI,CAACmM,OAAO,EACT7D,IAAI,CAAC,MAAM,CACX8D,WAAW,CAAC,eAAe,CAC3B5E,KAAK,CAAExD,OAAO,CAACI,MAAO,CACtByH,QAAQ,CAAGjF,CAAC,EAAK3C,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEI,MAAM,CAAEwC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CACvE,CAAC,cACFxF,IAAA,CAACpC,MAAM,EAACwL,OAAO,CAAC,mBAAmB,CAAAZ,QAAA,cAC/BxI,IAAA,CAACnB,MAAM,GAAE,CAAC,CACN,CAAC,EACD,CAAC,EACL,CAAC,CACZ,CAAC,EACL,CAAC,CACC,CAAC,CACV,CAAC,cAGPqB,KAAA,CAACvC,IAAI,EAAA6K,QAAA,eACDxI,IAAA,CAACrC,IAAI,CAAC0M,MAAM,EAAA7B,QAAA,cACRtI,KAAA,OAAIiI,SAAS,CAAC,MAAM,CAAAK,QAAA,EAAC,aAAW,CAAClI,SAAS,CAACgK,MAAM,CAAC,GAAC,EAAI,CAAC,CAC/C,CAAC,cACdtK,IAAA,CAACrC,IAAI,CAAC6L,IAAI,EAAAhB,QAAA,CACL1H,OAAO,cACJd,IAAA,QAAKmI,SAAS,CAAC,kBAAkB,CAAAK,QAAA,cAC7BxI,IAAA,CAAC9B,OAAO,EAACqM,SAAS,CAAC,QAAQ,CAACC,IAAI,CAAC,QAAQ,CAAAhC,QAAA,cACrCxI,IAAA,SAAMmI,SAAS,CAAC,iBAAiB,CAAAK,QAAA,CAAC,eAAa,CAAM,CAAC,CACjD,CAAC,CACT,CAAC,CACNlI,SAAS,CAACgK,MAAM,GAAK,CAAC,cACtBpK,KAAA,QAAKiI,SAAS,CAAC,kBAAkB,CAAAK,QAAA,eAC7BxI,IAAA,CAACb,WAAW,EAACsL,IAAI,CAAE,EAAG,CAACtC,SAAS,CAAC,iBAAiB,CAAE,CAAC,cACrDnI,IAAA,MAAGmI,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,0BAAqB,CAAG,CAAC,cACnDtI,KAAA,CAACtC,MAAM,EACHwL,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEA,CAAA,GAAM,CACXzD,eAAe,CAAC,CAAC,CACjBvE,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAE,CAAAmH,QAAA,eAEFxI,IAAA,CAAChB,MAAM,EAACmJ,SAAS,CAAC,MAAM,CAAE,CAAC,kCAE/B,EAAQ,CAAC,EACR,CAAC,cAENjI,KAAA,CAAAE,SAAA,EAAAoI,QAAA,eACItI,KAAA,CAACrC,KAAK,EAAC6M,UAAU,MAACC,KAAK,MAAAnC,QAAA,eACnBxI,IAAA,UAAAwI,QAAA,cACItI,KAAA,OAAAsI,QAAA,eACIxI,IAAA,OAAI4K,KAAK,CAAC,IAAI,CAAK,CAAC,cACpB5K,IAAA,OAAAwI,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxI,IAAA,OAAAwI,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBxI,IAAA,OAAAwI,QAAA,CAAI,MAAI,CAAI,CAAC,cACbxI,IAAA,OAAAwI,QAAA,CAAI,eAAU,CAAI,CAAC,cACnBxI,IAAA,OAAAwI,QAAA,CAAI,QAAM,CAAI,CAAC,cACfxI,IAAA,OAAAwI,QAAA,CAAI,gBAAW,CAAI,CAAC,cACpBxI,IAAA,OAAAwI,QAAA,CAAI,MAAI,CAAI,CAAC,cACbxI,IAAA,OAAI4K,KAAK,CAAC,KAAK,CAAApC,QAAA,CAAC,SAAO,CAAI,CAAC,EAC5B,CAAC,CACF,CAAC,cACRxI,IAAA,UAAAwI,QAAA,CACKlI,SAAS,CAACyJ,GAAG,CAAEc,GAAG,OAAAC,WAAA,CAAAC,YAAA,CAAAC,aAAA,oBACf9K,KAAA,OAAAsI,QAAA,eACIxI,IAAA,OAAAwI,QAAA,CACKR,WAAW,CAAC6C,GAAG,CAACI,cAAc,CAAC,CAChC,CAAC,cACLjL,IAAA,OAAAwI,QAAA,cACItI,KAAA,QAAAsI,QAAA,eACIxI,IAAA,WAAAwI,QAAA,CAASqC,GAAG,CAACrI,KAAK,CAAS,CAAC,cAC5BxC,IAAA,QAAKmI,SAAS,CAAC,kBAAkB,CAAAK,QAAA,CAC5BqC,GAAG,CAAC9D,iBAAiB,CACrB,CAAC,CACL8D,GAAG,CAACpI,WAAW,eACZzC,IAAA,QAAKmI,SAAS,CAAC,uBAAuB,CAAAK,QAAA,CACjCqC,GAAG,CAACpI,WAAW,CAAC6H,MAAM,CAAG,EAAE,CACtB,GAAGO,GAAG,CAACpI,WAAW,CAACyI,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,KAAK,CACxCL,GAAG,CAACpI,WAAW,CAEpB,CACR,EACA,CAAC,CACN,CAAC,cACLzC,IAAA,OAAAwI,QAAA,cACItI,KAAA,QAAKiI,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACtCxI,IAAA,CAACT,UAAU,EACP4I,SAAS,CAAC,MAAM,CAChBgD,KAAK,CAAE,CAAElI,KAAK,CAAE,EAAA6H,WAAA,CAAAD,GAAG,CAACb,MAAM,UAAAc,WAAA,iBAAVA,WAAA,CAAY7H,KAAK,GAAI,SAAU,CAAE,CACpD,CAAC,CACD,EAAA8H,YAAA,CAAAF,GAAG,CAACb,MAAM,UAAAe,YAAA,iBAAVA,YAAA,CAAYhI,IAAI,GAAI,cAAc,EAClC,CAAC,CACN,CAAC,cACL/C,IAAA,OAAAwI,QAAA,cACIxI,IAAA,CAAClC,KAAK,EAACyK,EAAE,CAAC,MAAM,CAAAC,QAAA,CACX9H,aAAa,CAACmK,GAAG,CAAC1I,aAAa,CAAC,EAAI0I,GAAG,CAAC1I,aAAa,CACnD,CAAC,CACR,CAAC,cACLnC,IAAA,OAAAwI,QAAA,CACKH,kBAAkB,CAACwC,GAAG,CAACxI,UAAU,CAAC,CACnC,CAAC,cACLrC,IAAA,OAAAwI,QAAA,cACIxI,IAAA,UAAOmI,SAAS,CAAC,YAAY,CAAAK,QAAA,CACxBC,cAAc,CAACoC,GAAG,CAACO,SAAS,CAAC,CAC3B,CAAC,CACR,CAAC,cACLpL,IAAA,OAAAwI,QAAA,cACItI,KAAA,QAAKiI,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACtCxI,IAAA,CAACR,UAAU,EAAC2I,SAAS,CAAC,iBAAiB,CAACsC,IAAI,CAAE,EAAG,CAAE,CAAC,cACpDzK,IAAA,UAAAwI,QAAA,CAAQ,EAAAwC,aAAA,CAAAH,GAAG,CAACQ,QAAQ,UAAAL,aAAA,iBAAZA,aAAA,CAAcjI,IAAI,GAAI,SAAS,CAAQ,CAAC,EAC/C,CAAC,CACN,CAAC,cACL/C,IAAA,OAAAwI,QAAA,cACItI,KAAA,QAAKiI,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACtCxI,IAAA,CAACP,QAAQ,EAAC0I,SAAS,CAAC,iBAAiB,CAACsC,IAAI,CAAE,EAAG,CAAE,CAAC,cAClDzK,IAAA,UAAAwI,QAAA,CACK,GAAI,CAAA8C,IAAI,CAACT,GAAG,CAACU,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAClD,CAAC,EACP,CAAC,CACN,CAAC,cACLxL,IAAA,OAAAwI,QAAA,cACItI,KAAA,QAAKiI,SAAS,CAAC,cAAc,CAAAK,QAAA,eACzBxI,IAAA,CAACpC,MAAM,EACHwL,OAAO,CAAC,iBAAiB,CACzBqB,IAAI,CAAC,IAAI,CACTpB,OAAO,CAAEA,CAAA,GAAMrD,cAAc,CAAC6E,GAAG,CAAE,CACnCrI,KAAK,CAAC,mBAAa,CAAAgG,QAAA,cAEnBxI,IAAA,CAACtB,QAAQ,EAAC+L,IAAI,CAAE,EAAG,CAAE,CAAC,CAClB,CAAC,cACTzK,IAAA,CAACpC,MAAM,EACHwL,OAAO,CAAC,iBAAiB,CACzBqB,IAAI,CAAC,IAAI,CACTpB,OAAO,CAAEA,CAAA,GAAM5H,mBAAmB,CAACoJ,GAAG,CAAE,CACxCrI,KAAK,CAAC,UAAU,CAAAgG,QAAA,cAEhBxI,IAAA,CAACrB,YAAY,EAAC8L,IAAI,CAAE,EAAG,CAAE,CAAC,CACtB,CAAC,cACTzK,IAAA,CAACpC,MAAM,EACHwL,OAAO,CAAC,gBAAgB,CACxBqB,IAAI,CAAC,IAAI,CACTpB,OAAO,CAAEA,CAAA,GAAMhC,YAAY,CAACwD,GAAG,CAAE,CACjCrI,KAAK,CAAC,WAAW,CAAAgG,QAAA,cAEjBxI,IAAA,CAACpB,MAAM,EAAC6L,IAAI,CAAE,EAAG,CAAE,CAAC,CAChB,CAAC,EACR,CAAC,CACN,CAAC,GAnFAI,GAAG,CAAC1E,EAoFT,CAAC,EACR,CAAC,CACC,CAAC,EACL,CAAC,CAGPrE,UAAU,CAAG,CAAC,eACX9B,IAAA,QAAKmI,SAAS,CAAC,oCAAoC,CAAAK,QAAA,cAC/CtI,KAAA,CAAC/B,UAAU,EAAAqK,QAAA,eACPxI,IAAA,CAAC7B,UAAU,CAACsN,IAAI,EACZC,QAAQ,CAAE9J,WAAW,GAAK,CAAE,CAC5ByH,OAAO,CAAEA,CAAA,GAAMxH,cAAc,CAACD,WAAW,CAAG,CAAC,CAAE,CAClD,CAAC,CACD,CAAC,GAAGwD,KAAK,CAACtD,UAAU,CAAC,CAAC,CAACiI,GAAG,CAAC,CAAC4B,CAAC,CAAEC,KAAK,gBACjC5L,IAAA,CAAC7B,UAAU,CAAC0N,IAAI,EAEZC,MAAM,CAAEF,KAAK,CAAG,CAAC,GAAKhK,WAAY,CAClCyH,OAAO,CAAEA,CAAA,GAAMxH,cAAc,CAAC+J,KAAK,CAAG,CAAC,CAAE,CAAApD,QAAA,CAExCoD,KAAK,CAAG,CAAC,EAJLA,KAAK,CAAG,CAKA,CACpB,CAAC,cACF5L,IAAA,CAAC7B,UAAU,CAAC4N,IAAI,EACZL,QAAQ,CAAE9J,WAAW,GAAKE,UAAW,CACrCuH,OAAO,CAAEA,CAAA,GAAMxH,cAAc,CAACD,WAAW,CAAG,CAAC,CAAE,CAClD,CAAC,EACM,CAAC,CACZ,CACR,EACH,CACL,CACM,CAAC,EACV,CAAC,cAGP5B,IAAA,CAACF,WAAW,EACRkM,IAAI,CAAE1K,eAAgB,CACtB2K,MAAM,CAAEA,CAAA,GAAM1K,kBAAkB,CAAC,KAAK,CAAE,CACxC2K,UAAU,CAAExK,cAAe,CAC3ByK,SAAS,CAAEtE,mBAAoB,CAClC,CAAC,cAGF3H,KAAA,CAACnC,KAAK,EACFiO,IAAI,CAAE5K,eAAgB,CACtB6K,MAAM,CAAEA,CAAA,GAAM5K,kBAAkB,CAAC,KAAK,CAAE,CACxCoJ,IAAI,CAAC,IAAI,CAAAjC,QAAA,eAETxI,IAAA,CAACjC,KAAK,CAACsM,MAAM,EAAC+B,WAAW,MAAA5D,QAAA,cACrBxI,IAAA,CAACjC,KAAK,CAACsO,KAAK,EAAA7D,QAAA,CAAC,sBAAoB,CAAa,CAAC,CACrC,CAAC,cAEftI,KAAA,CAAClC,IAAI,EAACsO,QAAQ,CAAE3H,YAAa,CAAA6D,QAAA,eACzBtI,KAAA,CAACnC,KAAK,CAACyL,IAAI,EAAAhB,QAAA,eACPtI,KAAA,CAACzC,GAAG,EAAA+K,QAAA,eACAxI,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,SAAO,CAAY,CAAC,cAChCxI,IAAA,CAAChC,IAAI,CAACmM,OAAO,EACT7D,IAAI,CAAC,MAAM,CACX8D,WAAW,CAAC,mBAAmB,CAC/B5E,KAAK,CAAElD,UAAU,CAACE,KAAM,CACxBqH,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEE,KAAK,CAAEoC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CACzE+G,QAAQ,MACX,CAAC,EACM,CAAC,CACZ,CAAC,cACNvM,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,WAAS,CAAY,CAAC,cAClCtI,KAAA,CAAClC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAElD,UAAU,CAACJ,SAAU,CAC5B2H,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEJ,SAAS,CAAE0C,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CAC7E+G,QAAQ,MAAA/D,QAAA,eAERxI,IAAA,WAAQwF,KAAK,CAAC,EAAE,CAAAgD,QAAA,CAAC,4BAAuB,CAAQ,CAAC,CAChDhI,OAAO,CAAC8J,MAAM,GAAK,CAAC,cACjBtK,IAAA,WAAQ0L,QAAQ,MAAAlD,QAAA,CAAC,0BAAwB,CAAQ,CAAC,CAElDhI,OAAO,CAACuJ,GAAG,CAACC,MAAM,eACdhK,IAAA,WAAwBwF,KAAK,CAAEwE,MAAM,CAAC7D,EAAG,CAAAqC,QAAA,CACpCwB,MAAM,CAACjH,IAAI,EADHiH,MAAM,CAAC7D,EAEZ,CACX,CACJ,EACQ,CAAC,EACN,CAAC,CACZ,CAAC,EACL,CAAC,cAENjG,KAAA,CAACzC,GAAG,EAAA+K,QAAA,eACAxI,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,kBAAgB,CAAY,CAAC,cACzCxI,IAAA,CAAChC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAElD,UAAU,CAACH,aAAc,CAChC0H,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEH,aAAa,CAAEyC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CAAAgD,QAAA,CAEhFxD,MAAM,CAACS,OAAO,CAAC/E,aAAa,CAAC,CAACqJ,GAAG,CAACyC,KAAA,MAAC,CAACrH,GAAG,CAAEK,KAAK,CAAC,CAAAgH,KAAA,oBAC5CxM,IAAA,WAAkBwF,KAAK,CAAEL,GAAI,CAAAqD,QAAA,CAAEhD,KAAK,EAAvBL,GAAgC,CAAC,EACjD,CAAC,CACO,CAAC,EACN,CAAC,CACZ,CAAC,cACNnF,IAAA,CAACtC,GAAG,EAAC+L,EAAE,CAAE,CAAE,CAAAjB,QAAA,cACPtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,eAAU,CAAY,CAAC,cACnCxI,IAAA,CAAChC,IAAI,CAAC4L,MAAM,EACRpE,KAAK,CAAElD,UAAU,CAACD,UAAW,CAC7BwH,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAED,UAAU,CAAEuC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CAAAgD,QAAA,CAE7ExD,MAAM,CAACS,OAAO,CAAC7E,eAAe,CAAC,CAACmJ,GAAG,CAAC0C,KAAA,MAAC,CAACtH,GAAG,CAAEK,KAAK,CAAC,CAAAiH,KAAA,oBAC9CzM,IAAA,WAAkBwF,KAAK,CAAEL,GAAI,CAAAqD,QAAA,CAAEhD,KAAK,EAAvBL,GAAgC,CAAC,EACjD,CAAC,CACO,CAAC,EACN,CAAC,CACZ,CAAC,EACL,CAAC,cAENjF,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,aAAW,CAAY,CAAC,cACpCxI,IAAA,CAAChC,IAAI,CAACmM,OAAO,EACTuC,EAAE,CAAC,UAAU,CACbC,IAAI,CAAE,CAAE,CACRvC,WAAW,CAAC,qCAAqC,CACjD5E,KAAK,CAAElD,UAAU,CAACG,WAAY,CAC9BoH,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEG,WAAW,CAAEmC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CAClF,CAAC,EACM,CAAC,cAEbtF,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,WAAS,CAAY,CAAC,cAClCxI,IAAA,CAAChC,IAAI,CAACmM,OAAO,EACT7D,IAAI,CAAC,MAAM,CACXuD,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEK,IAAI,CAAEiC,CAAC,CAACkF,MAAM,CAAC8C,KAAK,CAAC,CAAC,CAAE,CAAC,CAAE,CAC3EL,QAAQ,MACX,CAAC,cACFvM,IAAA,CAAChC,IAAI,CAAC6O,IAAI,EAAC1E,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,wFAElC,CAAW,CAAC,EACJ,CAAC,cAEbtI,KAAA,CAAClC,IAAI,CAAC0L,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAK,QAAA,eACxBxI,IAAA,CAAChC,IAAI,CAAC2L,KAAK,EAAAnB,QAAA,CAAC,oBAAkB,CAAY,CAAC,cAC3CxI,IAAA,CAAChC,IAAI,CAACmM,OAAO,EACTuC,EAAE,CAAC,UAAU,CACbC,IAAI,CAAE,CAAE,CACRvC,WAAW,CAAC,gCAAgC,CAC5C5E,KAAK,CAAElD,UAAU,CAACM,KAAM,CACxBiH,QAAQ,CAAGjF,CAAC,EAAKrC,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEM,KAAK,CAAEgC,CAAC,CAACkF,MAAM,CAACtE,KAAM,CAAC,CAAE,CAC5E,CAAC,EACM,CAAC,CAEZxE,SAAS,eACNd,KAAA,QAAKiI,SAAS,CAAC,MAAM,CAAAK,QAAA,eACjBtI,KAAA,QAAKiI,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC3CxI,IAAA,UAAAwI,QAAA,CAAO,oBAAkB,CAAO,CAAC,cACjCtI,KAAA,UAAAsI,QAAA,EAAQtH,cAAc,CAAC,GAAC,EAAO,CAAC,EAC/B,CAAC,cACNlB,IAAA,CAACzB,WAAW,EAACuO,GAAG,CAAE5L,cAAe,CAAE,CAAC,EACnC,CACR,EACO,CAAC,cAEbhB,KAAA,CAACnC,KAAK,CAACgP,MAAM,EAAAvE,QAAA,eACTxI,IAAA,CAACpC,MAAM,EACHwL,OAAO,CAAC,WAAW,CACnBC,OAAO,CAAEA,CAAA,GAAMhI,kBAAkB,CAAC,KAAK,CAAE,CACzCqK,QAAQ,CAAE1K,SAAU,CAAAwH,QAAA,CACvB,SAED,CAAQ,CAAC,cACTxI,IAAA,CAACpC,MAAM,EACHwL,OAAO,CAAC,SAAS,CACjB9C,IAAI,CAAC,QAAQ,CACboF,QAAQ,CAAE1K,SAAU,CAAAwH,QAAA,CAEnBxH,SAAS,cACNd,KAAA,CAAAE,SAAA,EAAAoI,QAAA,eACIxI,IAAA,CAAC9B,OAAO,EAACqM,SAAS,CAAC,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACtC,SAAS,CAAC,MAAM,CAAE,CAAC,YAE7D,EAAE,CAAC,cAEHjI,KAAA,CAAAE,SAAA,EAAAoI,QAAA,eACIxI,IAAA,CAAChB,MAAM,EAACmJ,SAAS,CAAC,MAAM,CAAE,CAAC,WAE/B,EAAE,CACL,CACG,CAAC,EACC,CAAC,EACb,CAAC,EACJ,CAAC,EACD,CAAC,CAEpB,CAAC,CAED,cAAe,CAAA9H,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}