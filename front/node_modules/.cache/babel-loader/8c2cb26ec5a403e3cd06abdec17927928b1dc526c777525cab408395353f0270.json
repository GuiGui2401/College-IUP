{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Modal,Button,Form,Alert,Spinner}from'react-bootstrap';import{ArrowRightCircle,PersonFillExclamation}from'react-bootstrap-icons';import{secureApiEndpoints}from'../utils/apiMigration';import Swal from'sweetalert2';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StudentTransfer=_ref=>{var _getSelectedClassInfo,_getSelectedClassInfo2;let{student,show,onHide,onTransferSuccess}=_ref;const[availableClasses,setAvailableClasses]=useState([]);const[selectedClassId,setSelectedClassId]=useState('');const[selectedSeriesId,setSelectedSeriesId]=useState('');const[loading,setLoading]=useState(false);const[loadingClasses,setLoadingClasses]=useState(true);const[error,setError]=useState('');useEffect(()=>{if(show){loadAvailableClasses();setSelectedClassId('');setSelectedSeriesId('');setError('');}},[show]);const loadAvailableClasses=async()=>{try{setLoadingClasses(true);const response=await secureApiEndpoints.schoolClasses.getAll();if(response.success){var _response$data;// Filtrer pour exclure la classe actuelle de l'élève\nconst filteredClasses=((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.filter(cls=>{var _cls$series;const currentSeriesId=(student===null||student===void 0?void 0:student.class_series_id)||(student===null||student===void 0?void 0:student.series_id);return!((_cls$series=cls.series)!==null&&_cls$series!==void 0&&_cls$series.some(series=>series.id===currentSeriesId));}))||[];setAvailableClasses(filteredClasses);}else{setError('Erreur lors du chargement des classes disponibles');}}catch(error){console.error('Error loading classes:',error);setError('Erreur lors du chargement des classes disponibles');}finally{setLoadingClasses(false);}};const getAvailableSeries=()=>{if(!selectedClassId)return[];const selectedClass=availableClasses.find(cls=>cls.id===parseInt(selectedClassId));return(selectedClass===null||selectedClass===void 0?void 0:selectedClass.series)||[];};const handleClassChange=classId=>{setSelectedClassId(classId);setSelectedSeriesId('');// Reset series selection\n};const getCurrentClassInfo=()=>{var _student$class_series,_student$class_series2,_student$class_series3;if(!student)return{className:'Non définie',seriesName:'Non définie'};return{className:((_student$class_series=student.class_series)===null||_student$class_series===void 0?void 0:(_student$class_series2=_student$class_series.school_class)===null||_student$class_series2===void 0?void 0:_student$class_series2.name)||student.current_class||'Non définie',seriesName:((_student$class_series3=student.class_series)===null||_student$class_series3===void 0?void 0:_student$class_series3.name)||'Non définie'};};const getSelectedClassInfo=()=>{var _selectedClass$series;if(!selectedClassId||!selectedSeriesId)return null;const selectedClass=availableClasses.find(cls=>cls.id===parseInt(selectedClassId));const selectedSeries=selectedClass===null||selectedClass===void 0?void 0:(_selectedClass$series=selectedClass.series)===null||_selectedClass$series===void 0?void 0:_selectedClass$series.find(series=>series.id===parseInt(selectedSeriesId));return{className:(selectedClass===null||selectedClass===void 0?void 0:selectedClass.name)||'',seriesName:(selectedSeries===null||selectedSeries===void 0?void 0:selectedSeries.name)||''};};const handleTransfer=async()=>{if(!selectedSeriesId){setError('Veuillez sélectionner une série de destination');return;}const currentInfo=getCurrentClassInfo();const newInfo=getSelectedClassInfo();if(!newInfo){setError('Informations de destination invalides');return;}// Confirmation\nconst result=await Swal.fire({title:'Confirmer le transfert',html:`\n                <div class=\"text-start\">\n                    <p><strong>Élève :</strong> ${student.first_name} ${student.last_name}</p>\n                    <hr>\n                    <p><strong>Classe actuelle :</strong><br>\n                       ${currentInfo.className} - ${currentInfo.seriesName}</p>\n                    <p><strong>Nouvelle classe :</strong><br>\n                       ${newInfo.className} - ${newInfo.seriesName}</p>\n                    <hr>\n                    <p class=\"text-warning\">\n                        <small>⚠️ Cette action est irréversible. L'élève sera transféré immédiatement.</small>\n                    </p>\n                </div>\n            `,icon:'question',showCancelButton:true,confirmButtonText:'Transférer',cancelButtonText:'Annuler',confirmButtonColor:'#28a745',cancelButtonColor:'#6c757d'});if(!result.isConfirmed)return;try{setLoading(true);setError('');// Utiliser l'endpoint de transfert vers une série\nconst response=await secureApiEndpoints.students.transferToSeries(student.id,selectedSeriesId);if(response.success){Swal.fire({title:'Transfert réussi !',text:`${student.first_name} ${student.last_name} a été transféré(e) vers ${newInfo.className} - ${newInfo.seriesName}`,icon:'success',timer:3000,showConfirmButton:false});if(onTransferSuccess){onTransferSuccess(response.data||student,newInfo);}onHide();}else{setError(response.message||'Erreur lors du transfert');}}catch(error){console.error('Error transferring student:',error);setError('Erreur lors du transfert de l\\'élève');}finally{setLoading(false);}};if(!student)return null;const currentInfo=getCurrentClassInfo();const availableSeries=getAvailableSeries();return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:onHide,size:\"lg\",centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[/*#__PURE__*/_jsx(ArrowRightCircle,{className:\"me-2 text-primary\"}),\"Transf\\xE9rer un \\xE9l\\xE8ve\"]})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-light rounded\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(PersonFillExclamation,{className:\"me-2 text-info\"}),\"\\xC9l\\xE8ve \\xE0 transf\\xE9rer\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[student.first_name,\" \",student.last_name]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"N\\xB0 \",student.student_number||student.id]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Classe actuelle :\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-secondary\",children:[currentInfo.className,\" - \",currentInfo.seriesName]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nouvelle classe *\"}),loadingClasses?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-3\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Chargement des classes...\"]}):/*#__PURE__*/_jsxs(Form.Select,{value:selectedClassId,onChange:e=>handleClassChange(e.target.value),disabled:loading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une classe\"}),availableClasses.map(cls=>{var _cls$level,_cls$level2,_cls$level2$section;return/*#__PURE__*/_jsxs(\"option\",{value:cls.id,children:[cls.name,\" (\",(_cls$level=cls.level)===null||_cls$level===void 0?void 0:_cls$level.name,\" - \",(_cls$level2=cls.level)===null||_cls$level2===void 0?void 0:(_cls$level2$section=_cls$level2.section)===null||_cls$level2$section===void 0?void 0:_cls$level2$section.name,\")\"]},cls.id);})]})]}),selectedClassId&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"S\\xE9rie de destination *\"}),/*#__PURE__*/_jsxs(Form.Select,{value:selectedSeriesId,onChange:e=>setSelectedSeriesId(e.target.value),disabled:loading||availableSeries.length===0,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionner une s\\xE9rie\"}),availableSeries.map(series=>/*#__PURE__*/_jsxs(\"option\",{value:series.id,children:[series.name,\" \",series.code&&`(${series.code})`,series.capacity&&` - Capacité: ${series.capacity}`]},series.id))]}),selectedClassId&&availableSeries.length===0&&/*#__PURE__*/_jsx(Form.Text,{className:\"text-warning\",children:\"\\u26A0\\uFE0F Aucune s\\xE9rie disponible dans cette classe\"})]}),selectedSeriesId&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 border border-success rounded\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-success mb-2\",children:\"Aper\\xE7u du transfert\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-5 text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badge bg-secondary fs-6 p-2\",children:[currentInfo.className,/*#__PURE__*/_jsx(\"br\",{}),currentInfo.seriesName]}),/*#__PURE__*/_jsx(\"div\",{className:\"small text-muted mt-1\",children:\"Classe actuelle\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2 text-center\",children:/*#__PURE__*/_jsx(ArrowRightCircle,{size:24,className:\"text-success\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-5 text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badge bg-success fs-6 p-2\",children:[(_getSelectedClassInfo=getSelectedClassInfo())===null||_getSelectedClassInfo===void 0?void 0:_getSelectedClassInfo.className,/*#__PURE__*/_jsx(\"br\",{}),(_getSelectedClassInfo2=getSelectedClassInfo())===null||_getSelectedClassInfo2===void 0?void 0:_getSelectedClassInfo2.seriesName]}),/*#__PURE__*/_jsx(\"div\",{className:\"small text-muted mt-1\",children:\"Nouvelle classe\"})]})]})]}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mt-3\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsxs(Alert,{variant:\"info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Information importante :\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mb-0 mt-2\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Le transfert est imm\\xE9diat et irr\\xE9versible\"}),/*#__PURE__*/_jsx(\"li\",{children:\"L'historique des paiements sera conserv\\xE9\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Les notes et bulletins resteront li\\xE9s \\xE0 l'\\xE9l\\xE8ve\"}),/*#__PURE__*/_jsx(\"li\",{children:\"L'ordre dans la nouvelle classe sera automatiquement d\\xE9fini\"})]})]})})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onHide,disabled:loading,children:\"Annuler\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:handleTransfer,disabled:loading||!selectedSeriesId||loadingClasses,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"border\",size:\"sm\",role:\"status\",className:\"me-2\"}),\"Transfert en cours...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ArrowRightCircle,{className:\"me-2\"}),\"Transf\\xE9rer l'\\xE9l\\xE8ve\"]})})]})]});};export default StudentTransfer;","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Alert","Spinner","ArrowRightCircle","PersonFillExclamation","secureApiEndpoints","Swal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StudentTransfer","_ref","_getSelectedClassInfo","_getSelectedClassInfo2","student","show","onHide","onTransferSuccess","availableClasses","setAvailableClasses","selectedClassId","setSelectedClassId","selectedSeriesId","setSelectedSeriesId","loading","setLoading","loadingClasses","setLoadingClasses","error","setError","loadAvailableClasses","response","schoolClasses","getAll","success","_response$data","filteredClasses","data","filter","cls","_cls$series","currentSeriesId","class_series_id","series_id","series","some","id","console","getAvailableSeries","selectedClass","find","parseInt","handleClassChange","classId","getCurrentClassInfo","_student$class_series","_student$class_series2","_student$class_series3","className","seriesName","class_series","school_class","name","current_class","getSelectedClassInfo","_selectedClass$series","selectedSeries","handleTransfer","currentInfo","newInfo","result","fire","title","html","first_name","last_name","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","isConfirmed","students","transferToSeries","text","timer","showConfirmButton","message","availableSeries","size","centered","children","Header","closeButton","Title","Body","student_number","Label","animation","Select","value","onChange","e","target","disabled","map","_cls$level","_cls$level2","_cls$level2$section","level","section","length","code","capacity","Text","variant","Footer","onClick","as","role"],"sources":["/var/www/College-IUP/front/src/components/StudentTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { ArrowRightCircle, PersonFillExclamation } from 'react-bootstrap-icons';\nimport { secureApiEndpoints } from '../utils/apiMigration';\nimport Swal from 'sweetalert2';\n\nconst StudentTransfer = ({ student, show, onHide, onTransferSuccess }) => {\n    const [availableClasses, setAvailableClasses] = useState([]);\n    const [selectedClassId, setSelectedClassId] = useState('');\n    const [selectedSeriesId, setSelectedSeriesId] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [loadingClasses, setLoadingClasses] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (show) {\n            loadAvailableClasses();\n            setSelectedClassId('');\n            setSelectedSeriesId('');\n            setError('');\n        }\n    }, [show]);\n\n    const loadAvailableClasses = async () => {\n        try {\n            setLoadingClasses(true);\n            const response = await secureApiEndpoints.schoolClasses.getAll();\n            \n            if (response.success) {\n                // Filtrer pour exclure la classe actuelle de l'élève\n                const filteredClasses = response.data?.filter(cls => {\n                    const currentSeriesId = student?.class_series_id || student?.series_id;\n                    return !cls.series?.some(series => series.id === currentSeriesId);\n                }) || [];\n                \n                setAvailableClasses(filteredClasses);\n            } else {\n                setError('Erreur lors du chargement des classes disponibles');\n            }\n        } catch (error) {\n            console.error('Error loading classes:', error);\n            setError('Erreur lors du chargement des classes disponibles');\n        } finally {\n            setLoadingClasses(false);\n        }\n    };\n\n    const getAvailableSeries = () => {\n        if (!selectedClassId) return [];\n        \n        const selectedClass = availableClasses.find(cls => cls.id === parseInt(selectedClassId));\n        return selectedClass?.series || [];\n    };\n\n    const handleClassChange = (classId) => {\n        setSelectedClassId(classId);\n        setSelectedSeriesId(''); // Reset series selection\n    };\n\n    const getCurrentClassInfo = () => {\n        if (!student) return { className: 'Non définie', seriesName: 'Non définie' };\n        \n        return {\n            className: student.class_series?.school_class?.name || student.current_class || 'Non définie',\n            seriesName: student.class_series?.name || 'Non définie'\n        };\n    };\n\n    const getSelectedClassInfo = () => {\n        if (!selectedClassId || !selectedSeriesId) return null;\n        \n        const selectedClass = availableClasses.find(cls => cls.id === parseInt(selectedClassId));\n        const selectedSeries = selectedClass?.series?.find(series => series.id === parseInt(selectedSeriesId));\n        \n        return {\n            className: selectedClass?.name || '',\n            seriesName: selectedSeries?.name || ''\n        };\n    };\n\n    const handleTransfer = async () => {\n        if (!selectedSeriesId) {\n            setError('Veuillez sélectionner une série de destination');\n            return;\n        }\n\n        const currentInfo = getCurrentClassInfo();\n        const newInfo = getSelectedClassInfo();\n\n        if (!newInfo) {\n            setError('Informations de destination invalides');\n            return;\n        }\n\n        // Confirmation\n        const result = await Swal.fire({\n            title: 'Confirmer le transfert',\n            html: `\n                <div class=\"text-start\">\n                    <p><strong>Élève :</strong> ${student.first_name} ${student.last_name}</p>\n                    <hr>\n                    <p><strong>Classe actuelle :</strong><br>\n                       ${currentInfo.className} - ${currentInfo.seriesName}</p>\n                    <p><strong>Nouvelle classe :</strong><br>\n                       ${newInfo.className} - ${newInfo.seriesName}</p>\n                    <hr>\n                    <p class=\"text-warning\">\n                        <small>⚠️ Cette action est irréversible. L'élève sera transféré immédiatement.</small>\n                    </p>\n                </div>\n            `,\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonText: 'Transférer',\n            cancelButtonText: 'Annuler',\n            confirmButtonColor: '#28a745',\n            cancelButtonColor: '#6c757d'\n        });\n\n        if (!result.isConfirmed) return;\n\n        try {\n            setLoading(true);\n            setError('');\n\n            // Utiliser l'endpoint de transfert vers une série\n            const response = await secureApiEndpoints.students.transferToSeries(student.id, selectedSeriesId);\n\n            if (response.success) {\n                Swal.fire({\n                    title: 'Transfert réussi !',\n                    text: `${student.first_name} ${student.last_name} a été transféré(e) vers ${newInfo.className} - ${newInfo.seriesName}`,\n                    icon: 'success',\n                    timer: 3000,\n                    showConfirmButton: false\n                });\n\n                if (onTransferSuccess) {\n                    onTransferSuccess(response.data || student, newInfo);\n                }\n                \n                onHide();\n            } else {\n                setError(response.message || 'Erreur lors du transfert');\n            }\n        } catch (error) {\n            console.error('Error transferring student:', error);\n            setError('Erreur lors du transfert de l\\'élève');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (!student) return null;\n\n    const currentInfo = getCurrentClassInfo();\n    const availableSeries = getAvailableSeries();\n\n    return (\n        <Modal show={show} onHide={onHide} size=\"lg\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <ArrowRightCircle className=\"me-2 text-primary\" />\n                    Transférer un élève\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {/* Informations de l'élève */}\n                <div className=\"mb-4 p-3 bg-light rounded\">\n                    <h6 className=\"mb-2\">\n                        <PersonFillExclamation className=\"me-2 text-info\" />\n                        Élève à transférer\n                    </h6>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <strong>{student.first_name} {student.last_name}</strong>\n                            <br />\n                            <small className=\"text-muted\">\n                                N° {student.student_number || student.id}\n                            </small>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <small className=\"text-muted\">Classe actuelle :</small>\n                            <br />\n                            <span className=\"badge bg-secondary\">\n                                {currentInfo.className} - {currentInfo.seriesName}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Sélection de la nouvelle classe */}\n                <div className=\"mb-3\">\n                    <Form.Label>Nouvelle classe *</Form.Label>\n                    {loadingClasses ? (\n                        <div className=\"text-center py-3\">\n                            <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                            Chargement des classes...\n                        </div>\n                    ) : (\n                        <Form.Select\n                            value={selectedClassId}\n                            onChange={(e) => handleClassChange(e.target.value)}\n                            disabled={loading}\n                        >\n                            <option value=\"\">Sélectionner une classe</option>\n                            {availableClasses.map(cls => (\n                                <option key={cls.id} value={cls.id}>\n                                    {cls.name} ({cls.level?.name} - {cls.level?.section?.name})\n                                </option>\n                            ))}\n                        </Form.Select>\n                    )}\n                </div>\n\n                {/* Sélection de la série */}\n                {selectedClassId && (\n                    <div className=\"mb-3\">\n                        <Form.Label>Série de destination *</Form.Label>\n                        <Form.Select\n                            value={selectedSeriesId}\n                            onChange={(e) => setSelectedSeriesId(e.target.value)}\n                            disabled={loading || availableSeries.length === 0}\n                        >\n                            <option value=\"\">Sélectionner une série</option>\n                            {availableSeries.map(series => (\n                                <option key={series.id} value={series.id}>\n                                    {series.name} {series.code && `(${series.code})`}\n                                    {series.capacity && ` - Capacité: ${series.capacity}`}\n                                </option>\n                            ))}\n                        </Form.Select>\n                        \n                        {selectedClassId && availableSeries.length === 0 && (\n                            <Form.Text className=\"text-warning\">\n                                ⚠️ Aucune série disponible dans cette classe\n                            </Form.Text>\n                        )}\n                    </div>\n                )}\n\n                {/* Aperçu du transfert */}\n                {selectedSeriesId && (\n                    <div className=\"mt-4 p-3 border border-success rounded\">\n                        <h6 className=\"text-success mb-2\">Aperçu du transfert</h6>\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-md-5 text-center\">\n                                <div className=\"badge bg-secondary fs-6 p-2\">\n                                    {currentInfo.className}<br />\n                                    {currentInfo.seriesName}\n                                </div>\n                                <div className=\"small text-muted mt-1\">Classe actuelle</div>\n                            </div>\n                            <div className=\"col-md-2 text-center\">\n                                <ArrowRightCircle size={24} className=\"text-success\" />\n                            </div>\n                            <div className=\"col-md-5 text-center\">\n                                <div className=\"badge bg-success fs-6 p-2\">\n                                    {getSelectedClassInfo()?.className}<br />\n                                    {getSelectedClassInfo()?.seriesName}\n                                </div>\n                                <div className=\"small text-muted mt-1\">Nouvelle classe</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Erreur */}\n                {error && (\n                    <Alert variant=\"danger\" className=\"mt-3\">\n                        {error}\n                    </Alert>\n                )}\n\n                {/* Information importante */}\n                <div className=\"mt-4\">\n                    <Alert variant=\"info\">\n                        <strong>Information importante :</strong>\n                        <ul className=\"mb-0 mt-2\">\n                            <li>Le transfert est immédiat et irréversible</li>\n                            <li>L'historique des paiements sera conservé</li>\n                            <li>Les notes et bulletins resteront liés à l'élève</li>\n                            <li>L'ordre dans la nouvelle classe sera automatiquement défini</li>\n                        </ul>\n                    </Alert>\n                </div>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide} disabled={loading}>\n                    Annuler\n                </Button>\n                <Button \n                    variant=\"success\" \n                    onClick={handleTransfer}\n                    disabled={loading || !selectedSeriesId || loadingClasses}\n                >\n                    {loading ? (\n                        <>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                className=\"me-2\"\n                            />\n                            Transfert en cours...\n                        </>\n                    ) : (\n                        <>\n                            <ArrowRightCircle className=\"me-2\" />\n                            Transférer l'élève\n                        </>\n                    )}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default StudentTransfer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}