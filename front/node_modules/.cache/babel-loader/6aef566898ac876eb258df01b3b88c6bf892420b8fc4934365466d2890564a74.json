{"ast":null,"code":"/**\n * Migration des anciens endpoints API vers le nouveau système d'authentification JWT\n * Ce fichier remplace progressivement l'ancien système basé sur sessionStorage.user\n */import{authService}from'../services/authService';import{host}from'./fetch';import logger from'./logger';/**\n * Nouveau service API qui utilise automatiquement les tokens JWT\n */class SecureApiService{constructor(){this.baseURL=`${host}/api`;}// Fonction de requête sécurisée personnalisée - VERSION AMÉLIORÉE\nasync makeRequest(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const fullUrl=endpoint.startsWith('http')?endpoint:`${this.baseURL}${endpoint}`;const token=authService.getToken();const headers={'Accept':'application/json',...options.headers};// Ne pas ajouter Content-Type pour FormData\nif(!(options.body instanceof FormData)){headers['Content-Type']='application/json';}if(token){headers['Authorization']=`Bearer ${token}`;}try{const response=await fetch(fullUrl,{...options,headers});// Gestion des erreurs HTTP\nif(!response.ok){let errorMessage=`Erreur HTTP ${response.status}: ${response.statusText}`;try{const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){const errorData=await response.json();errorMessage=errorData.message||errorData.error||errorMessage;}else{const errorText=await response.text();if(errorText){errorMessage=errorText;}}}catch(parseError){console.warn('Impossible de parser la réponse d\\'erreur:',parseError);}// Gestion spéciale pour les erreurs 401\nif(response.status===401){authService.removeToken();window.dispatchEvent(new CustomEvent('auth:unauthorized'));throw new Error('Session expirée. Veuillez vous reconnecter.');}throw new Error(errorMessage);}// Vérifier le type de contenu\nconst contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){const responseText=await response.text();if(!responseText.trim()){console.warn('Réponse JSON vide du serveur');return{success:true};}try{return JSON.parse(responseText);}catch(jsonError){console.error('Erreur de parsing JSON:',jsonError);console.error('Contenu reçu:',responseText);throw new Error('Format de réponse invalide du serveur');}}else{// Pour les réponses non-JSON (PDF, images, etc.)\nreturn response;}}catch(error){if(error.name==='TypeError'&&error.message.includes('fetch')){logger.apiError(error,'Connexion');throw new Error('Impossible de se connecter au serveur. Vérifiez votre connexion.');}logger.apiError(error);throw error;}}// Méthodes GET\nasync get(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return await this.makeRequest(endpoint,{method:'GET',...options});}// Méthodes POST\nasync post(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return await this.makeRequest(endpoint,{method:'POST',body:data?data instanceof FormData?data:JSON.stringify(data):null,...options});}// Méthodes PUT\nasync put(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return await this.makeRequest(endpoint,{method:'PUT',body:data?data instanceof FormData?data:JSON.stringify(data):null,...options});}// Méthodes DELETE\nasync delete(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return await this.makeRequest(endpoint,{method:'DELETE',...options});}// Méthodes PATCH\nasync patch(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return await this.makeRequest(endpoint,{method:'PATCH',body:data?data instanceof FormData?data:JSON.stringify(data):null,...options});}}// Instance singleton\nconst secureApi=new SecureApiService();/**\n * Nouveaux endpoints API avec authentification JWT\n * Remplace progressivement les anciens endpoints\n */export const secureApiEndpoints={// === AUTHENTICATION ===\nauth:{login:credentials=>authService.login(credentials),logout:()=>authService.logout(),refresh:()=>authService.refreshToken(),me:()=>authService.getCurrentUser(),updateProfile:data=>secureApi.put('/users/profile',data),changePassword:data=>secureApi.put('/auth/change-password',data),uploadAvatar:async formData=>{const token=authService.getToken();try{const response=await fetch(`${secureApi.baseURL}/upload-photo`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Don't set Content-Type for FormData\n},body:formData});if(!response.ok){let errorMessage=`HTTP Error ${response.status}: ${response.statusText}`;try{const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){const errorData=await response.json();errorMessage=errorData.message||errorData.error||errorMessage;}}catch(e){// Ignore JSON parsing errors\n}throw new Error(errorMessage);}const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){var _result$data,_result$data2;const result=await response.json();return{success:result.success,message:result.message,data:{url:((_result$data=result.data)===null||_result$data===void 0?void 0:_result$data.url)||null,filename:((_result$data2=result.data)===null||_result$data2===void 0?void 0:_result$data2.filename)||null}};}else{throw new Error('Invalid response format');}}catch(error){throw error;}}},// === USERS ===\nusers:{getAll:()=>secureApi.get('/users'),getById:id=>secureApi.get(`/users/${id}`),create:data=>secureApi.post('/users',data),update:(id,data)=>secureApi.put(`/users/${id}`,data),delete:id=>secureApi.delete(`/users/${id}`),getProfile:()=>secureApi.get('/users/profile'),updateProfile:data=>secureApi.put('/users/profile',data)},// === TEACHERS ===\nteachers:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teachers${queryString?'?'+queryString:''}`);},getById:id=>secureApi.get(`/teachers/${id}`),create:data=>secureApi.post('/teachers',data),update:(id,data)=>secureApi.put(`/teachers/${id}`,data),delete:id=>secureApi.delete(`/teachers/${id}`),toggleStatus:id=>secureApi.post(`/teachers/${id}/toggle-status`),assignSubjects:(id,data)=>secureApi.post(`/teachers/${id}/assign-subjects`,data),removeAssignment:(id,data)=>secureApi.post(`/teachers/${id}/remove-assignment`,data),createUserAccount:(id,data)=>secureApi.post(`/teachers/${id}/create-user-account`,data),removeUserAccount:id=>secureApi.delete(`/teachers/${id}/remove-user-account`),getStats:function(id){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teachers/${id}/stats${queryString?'?'+queryString:''}`);},generateBadge:teacherId=>{return secureApi.post('/teachers/generate-badge',{teacher_id:teacherId},{responseType:'blob'// Important pour recevoir le PDF en blob\n});},generateMultipleBadges:teacherIds=>{return secureApi.post('/teachers/generate-multiple-badges',{teacher_ids:teacherIds},{responseType:'blob'// Important pour recevoir le PDF en blob\n});}},// === SUBJECTS ===\nsubjects:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/subjects${queryString?'?'+queryString:''}`);},getById:id=>secureApi.get(`/subjects/${id}`),create:data=>secureApi.post('/subjects',data),update:(id,data)=>secureApi.put(`/subjects/${id}`,data),delete:id=>secureApi.delete(`/subjects/${id}`),toggleStatus:id=>secureApi.post(`/subjects/${id}/toggle-status`),getForSeries:seriesId=>secureApi.get(`/subjects/series/${seriesId}`),configureForSeries:(seriesId,data)=>secureApi.post(`/subjects/series/${seriesId}/configure`,data)},// === STAFF ATTENDANCE ===\nstaff:{scanQR:data=>secureApi.post('/staff-attendance/scan-qr',data),getDailyAttendance:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/staff-attendance/daily-attendance${queryString?'?'+queryString:''}`);},getEntryExitStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/staff-attendance/entry-exit-stats${queryString?'?'+queryString:''}`);},generateQRCode:data=>secureApi.post('/staff-attendance/generate-qr',data),downloadBadgePDF:async data=>{return secureApi.makeRequest('/staff-attendance/generate-qr',{method:'POST',body:JSON.stringify(data)});},getStaffWithQR:()=>secureApi.get('/staff-attendance/staff-with-qr'),getStaffReport:function(staffId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/staff-attendance/staff/${staffId}/report${queryString?'?'+queryString:''}`);},generateMultipleBadges:async userIds=>{return secureApi.makeRequest('/staff-attendance/generate-multiple-badges',{method:'POST',body:JSON.stringify({user_ids:userIds})});}},// === STUDENTS ===\nstudents:{getAll:()=>secureApi.get('/students'),getByClass:classId=>secureApi.get(`/students/class/${classId}`),getByClassSeries:seriesId=>secureApi.get(`/students/class-series/${seriesId}`),getById:id=>secureApi.get(`/students/${id}`),create:data=>secureApi.post('/students',data),// VERSION AMÉLIORÉE avec meilleure gestion des erreurs JSON\ncreateWithPhoto:async formData=>{const token=authService.getToken();try{const response=await fetch(`${secureApi.baseURL}/students`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Don't set Content-Type - let browser set it with boundary for FormData\n},body:formData});// Vérifier d'abord si la réponse est ok\nif(!response.ok){// Essayer de récupérer le message d'erreur\nlet errorMessage=`HTTP Error ${response.status}: ${response.statusText}`;try{const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){const errorData=await response.json();errorMessage=errorData.message||errorData.error||errorMessage;}else{// Si ce n'est pas du JSON, lire comme texte\nconst errorText=await response.text();if(errorText){errorMessage=errorText;}}}catch(parseError){console.warn('Impossible de parser la réponse d\\'erreur:',parseError);}throw new Error(errorMessage);}// Vérifier le type de contenu de la réponse\nconst contentType=response.headers.get('content-type');if(!contentType||!contentType.includes('application/json')){console.warn('La réponse du serveur n\\'est pas au format JSON, type:',contentType);// Essayer quand même de lire comme texte pour voir ce qu'on reçoit\nconst responseText=await response.text();console.log('Contenu de la réponse non-JSON:',responseText);// Si c'est vide mais status 200/201, considérer comme succès\nif(!responseText.trim()&&(response.status===200||response.status===201)){return{success:true,message:'Étudiant créé avec succès'};}throw new Error('La réponse du serveur n\\'est pas au format JSON');}// Vérifier si le body existe\nconst responseText=await response.text();if(!responseText||responseText.trim()===''){console.warn('Réponse vide du serveur mais status OK');return{success:true,message:'Étudiant créé avec succès'};}// Parser le JSON\ntry{return JSON.parse(responseText);}catch(jsonError){console.error('Erreur de parsing JSON:',jsonError);console.error('Contenu de la réponse:',responseText);throw new Error('Format de réponse invalide du serveur');}}catch(networkError){if(networkError.name==='TypeError'&&networkError.message.includes('fetch')){throw new Error('Impossible de se connecter au serveur. Vérifiez votre connexion.');}throw networkError;}},// Fonction de debug pour diagnostiquer les problèmes\ndebugCreateStudent:async formData=>{const token=authService.getToken();console.log('=== DEBUG CREATE STUDENT ===');console.log('Token présent:',!!token);console.log('FormData entries:');for(let[key,value]of formData.entries()){console.log(`${key}:`,value instanceof File?`File(${value.name})`:value);}try{const response=await fetch(`${secureApi.baseURL}/students`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'},body:formData});console.log('Response received:');console.log('- Status:',response.status);console.log('- Status Text:',response.statusText);console.log('- Headers:',Object.fromEntries(response.headers.entries()));const responseText=await response.text();console.log('- Body length:',responseText.length);console.log('- Body content:',responseText);if(!response.ok){throw new Error(`HTTP ${response.status}: ${response.statusText}\\nBody: ${responseText}`);}if(!responseText.trim()){console.warn('Empty response body');return{success:true,debug:true};}return JSON.parse(responseText);}catch(error){console.error('=== ERROR ===',error);throw error;}},update:(id,data)=>secureApi.put(`/students/${id}`,data),updateStatus:(id,status)=>secureApi.patch(`/students/${id}/status`,{student_status:status}),updateWithPhoto:(id,formData)=>{const token=authService.getToken();return fetch(`${secureApi.baseURL}/students/${id}/update-with-photo`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Don't set Content-Type - let browser set it with boundary for FormData\n},body:formData}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});},delete:id=>secureApi.delete(`/students/${id}`),exportCsv:async seriesId=>{const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/students/export-csv/${seriesId}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'text/csv'}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Erreur lors de l\\'export CSV');}return await response.blob();},exportPdf:async seriesId=>{const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/students/export-pdf/${seriesId}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'text/html'}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Erreur lors de l\\'export PDF');}return response;// Retourner la réponse pour permettre .text()\n},importCsv:(formData,seriesId)=>{const token=authService.getToken();// Utiliser la nouvelle route avec l'ID de série\nconst endpoint=seriesId?`/students/series/${seriesId}/import`:`/students/import/csv`;// Fallback vers l'ancienne route\nreturn fetch(`${secureApi.baseURL}${endpoint}`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Don't set Content-Type - let browser set it with boundary for FormData\n},body:formData}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});},// Nouvelle méthode pour import Excel spécifique à une série\nimportExcel:(formData,seriesId)=>{const token=authService.getToken();// Utiliser la nouvelle route avec l'ID de série\nconst endpoint=seriesId?`/students/series/${seriesId}/import`:`/students/import/excel`;// Fallback vers l'ancienne route\nreturn fetch(`${secureApi.baseURL}${endpoint}`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Don't set Content-Type - let browser set it with boundary for FormData\n},body:formData}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});},getSchoolYears:()=>secureApi.get('/students/school-years'),transfer:(id,newClassId)=>secureApi.post(`/students/${id}/transfer`,{class_id:newClassId}),transferToSeries:(id,newSeriesId)=>secureApi.post(`/students/${id}/transfer-series`,{class_series_id:newSeriesId}),getOrdered:classId=>secureApi.get(`/students/class/${classId}/ordered`),reorder:data=>secureApi.post('/students/reorder',data),sortAlphabetically:(seriesId,data)=>secureApi.post(`/students/class-series/${seriesId}/sort-alphabetically`,data),bulkUploadPhotos:formData=>secureApi.post('/students/bulk-upload-photos',formData)},// === CLASSES ===\nclasses:{getAll:()=>secureApi.get('/classes'),getById:id=>secureApi.get(`/classes/${id}`),getBySection:sectionId=>secureApi.get(`/classes/section/${sectionId}`),create:data=>secureApi.post('/classes',data),update:(id,data)=>secureApi.put(`/classes/${id}`,data),delete:id=>secureApi.delete(`/classes/${id}`)},// === SECTIONS ===\nsections:{getAll:()=>secureApi.get('/sections'),getById:id=>secureApi.get(`/sections/${id}`),create:data=>secureApi.post('/sections',data),update:(id,data)=>secureApi.put(`/sections/${id}`,data),delete:id=>secureApi.delete(`/sections/${id}`),getDashboard:()=>secureApi.get('/sections/dashboard'),toggleStatus:id=>secureApi.post(`/sections/${id}/toggle-status`)},// === LEVELS ===\nlevels:{getAll:()=>secureApi.get('/levels'),getById:id=>secureApi.get(`/levels/${id}`),create:data=>secureApi.post('/levels',data),update:(id,data)=>secureApi.put(`/levels/${id}`,data),delete:id=>secureApi.delete(`/levels/${id}`),getDashboard:()=>secureApi.get('/levels/dashboard'),toggleStatus:id=>secureApi.post(`/levels/${id}/toggle-status`),getBySection:sectionId=>secureApi.get(`/levels?section_id=${sectionId}`)},// === SCHOOL CLASSES ===\nschoolClasses:{getAll:()=>secureApi.get('/school-classes'),getById:id=>secureApi.get(`/school-classes/${id}`),create:data=>secureApi.post('/school-classes',data),update:(id,data)=>secureApi.put(`/school-classes/${id}`,data),delete:id=>secureApi.delete(`/school-classes/${id}`),getDashboard:()=>secureApi.get('/school-classes/dashboard'),toggleStatus:id=>secureApi.post(`/school-classes/${id}/toggle-status`),configurePayments:(id,data)=>secureApi.post(`/school-classes/${id}/configure-payments`,data),getByLevel:levelId=>secureApi.get(`/school-classes?level_id=${levelId}`),getBySection:sectionId=>secureApi.get(`/school-classes?section_id=${sectionId}`)},// === GRADES ===\ngrades:{getByStudent:studentId=>secureApi.get(`/grades/student/${studentId}`),getByClass:classId=>secureApi.get(`/grades/class/${classId}`),create:data=>secureApi.post('/grades',data),update:(id,data)=>secureApi.put(`/grades/${id}`,data),delete:id=>secureApi.delete(`/grades/${id}`)},// === PAYMENT TRANCHES ===\npaymentTranches:{getAll:()=>secureApi.get('/payment-tranches'),getById:id=>secureApi.get(`/payment-tranches/${id}`),create:data=>secureApi.post('/payment-tranches',data),update:(id,data)=>secureApi.put(`/payment-tranches/${id}`,data),delete:id=>secureApi.delete(`/payment-tranches/${id}`),reorder:data=>secureApi.post('/payment-tranches/reorder',data),getUsageStats:id=>secureApi.get(`/payment-tranches/${id}/usage-stats`)},// === SETTINGS ===\nsettings:{get:()=>secureApi.get('/settings'),update:data=>secureApi.put('/settings',data)},// === REPORTS ===\nreports:{getBulletin:(studentId,period)=>secureApi.get(`/reports/bulletin/${studentId}/${period}`),getClassReport:classId=>secureApi.get(`/reports/class/${classId}`),getFinancialReport:period=>secureApi.get(`/reports/financial/${period}`),getInsolvableReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/insolvable?${queryString}`);},getPaymentsReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/payments?${queryString}`);},getRameReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/rame?${queryString}`);},getRecoveryReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/recovery?${queryString}`);},getCollectionSummaryReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/collection-summary?${queryString}`);},getPaymentDetailsReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/payment-details?${queryString}`);},getScholarshipsDiscountsReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/scholarships-discounts?${queryString}`);},getCollectionDetailsReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/collection-details?${queryString}`);},getSeriesCollectionSummary:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/series-collection-summary?${queryString}`);},getSchoolFeePaymentDetails:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/school-fee-payment-details?${queryString}`);},getRecoveryStatus:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/recovery-status?${queryString}`);},generateSchoolCertificates:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/school-certificates?${queryString}`);},getDetailedCollectionReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/detailed-collection?${queryString}`);},getClassSchoolFeesReport:params=>{const queryString=new URLSearchParams(params).toString();return secureApi.get(`/reports/class-school-fees?${queryString}`);},exportPdf:async params=>{const queryString=new URLSearchParams(params).toString();const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/reports/export-pdf?${queryString}`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'text/html'}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Erreur lors de l\\'export PDF');}const htmlContent=await response.text();return{success:true,data:htmlContent};}},// === SEARCH ===\nsearch:{global:function(query){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;return secureApi.get(`/search?query=${encodeURIComponent(query)}&limit=${limit}`);},quick:query=>secureApi.get(`/search/quick?query=${encodeURIComponent(query)}`)},// === STATISTICS ===\nstats:{getGlobal:()=>secureApi.get('/stats/global')},// === ACCOUNTANT ===\naccountant:{dashboard:()=>secureApi.get('/accountant/dashboard'),getClasses:()=>secureApi.get('/accountant/classes'),getClassSeries:classId=>secureApi.get(`/accountant/classes/${classId}/series`),getSeriesStudents:seriesId=>secureApi.get(`/accountant/series/${seriesId}/students`),getStudent:studentId=>secureApi.get(`/accountant/students/${studentId}`)},// === SCHOOL YEARS ===\nschoolYears:{getAll:()=>secureApi.get('/school-years'),create:data=>secureApi.post('/school-years',data),update:(id,data)=>secureApi.put(`/school-years/${id}`,data),setCurrent:id=>secureApi.post(`/school-years/${id}/set-current`),getActive:()=>secureApi.get('/school-years/active'),getActiveYears:()=>secureApi.get('/school-years/active'),getUserWorkingYear:()=>secureApi.get('/school-years/user-working-year'),setUserWorkingYear:yearId=>secureApi.post('/school-years/set-user-working-year',{school_year_id:yearId})},// === PAYMENTS ===\n// payments: {\n// },\n// === STUDENT RAME (pour RameStatusToggle) ===\nstudentRame:{getStatus:studentId=>secureApi.get(`/student-rame/student/${studentId}/status`),updateStatus:(studentId,data)=>secureApi.post(`/student-rame/student/${studentId}/update`,data),getClassStatus:classSeriesId=>secureApi.get(`/student-rame/class-series/${classSeriesId}`)},// === PAYMENTS ===\npayments:{getStudentInfo:studentId=>secureApi.get(`/payments/student/${studentId}/info`),getStudentInfoWithDiscount:studentId=>secureApi.get(`/payments/student/${studentId}/info-with-discount`),getStudentHistory:studentId=>secureApi.get(`/payments/student/${studentId}/history`),calculateWithDate:(studentId,data)=>secureApi.post(`/payments/student/${studentId}/calculate-with-date`,data),store:data=>secureApi.post('/payments',data),generateReceipt:paymentId=>secureApi.get(`/payments/${paymentId}/receipt`),downloadReceipt:paymentId=>secureApi.get(`/payments/${paymentId}/receipt/pdf`),getStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/payments/stats${queryString?'?'+queryString:''}`);},generateListingReport:data=>secureApi.post('/payments/listing-report',data),generateTrancheListsReport:data=>secureApi.post('/payments/tranche-lists-report',data),getTranches:()=>secureApi.get('/payments/tranches'),downloadListingReportPDF:async data=>{const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/payments/listing-report`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Content-Type':'application/json','Accept':'application/pdf'},body:JSON.stringify({...data,format:'pdf'})});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const blob=await response.blob();// Créer un nom de fichier\nconst filename=`listing_paiements_${data.start_date}_${data.end_date}.pdf`;// Créer et déclencher le téléchargement\nconst url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.style.display='none';a.href=url;a.download=filename;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);return{success:true,filename};},downloadTrancheListsReportPDF:async data=>{const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/payments/tranche-lists-report`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Content-Type':'application/json','Accept':'application/pdf'},body:JSON.stringify({...data,format:'pdf'})});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const blob=await response.blob();// Créer un nom de fichier\nconst filename=`liste_tranches_${data.start_date}_${data.end_date}.pdf`;// Créer et déclencher le téléchargement\nconst url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.style.display='none';a.href=url;a.download=filename;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);return{success:true,filename};},create:data=>secureApi.post('/payments',data),downloadReceiptPDF:async paymentId=>{const token=authService.getToken();const response=await fetch(`${secureApi.baseURL}/payments/${paymentId}/receipt/pdf`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/pdf'}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Erreur lors du téléchargement du PDF');}// Créer un blob pour le PDF\nconst blob=await response.blob();// Créer un nom de fichier à partir des headers ou par défaut\nconst contentDisposition=response.headers.get('content-disposition');let filename=`Recu_${paymentId}.pdf`;if(contentDisposition&&contentDisposition.includes('filename=')){filename=contentDisposition.split('filename=')[1].replace(/\"/g,'');}// Créer et déclencher le téléchargement\nconst url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.style.display='none';a.href=url;a.download=filename;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);document.body.removeChild(a);return{success:true,filename};}},// === SCHOOL SETTINGS ===\nschoolSettings:{get:()=>secureApi.get('/school-settings'),update:data=>{// Si c'est un FormData (avec logo), utiliser une requête multipart\nif(data instanceof FormData){// Ajouter _method=PUT pour simuler PUT avec POST\ndata.append('_method','PUT');const token=authService.getToken();return fetch(`${secureApi.baseURL}/school-settings`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Ne pas définir Content-Type pour FormData\n},body:data}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});}else{return secureApi.put('/school-settings',data);}},getLogo:()=>secureApi.get('/school-settings/logo'),testWhatsApp:()=>secureApi.post('/school-settings/test-whatsapp')},// === CLASS SCHOLARSHIPS ===\nscholarships:{getAll:()=>secureApi.get('/class-scholarships'),getById:id=>secureApi.get(`/class-scholarships/${id}`),getByClass:classId=>secureApi.get(`/class-scholarships/class/${classId}`),create:data=>secureApi.post('/class-scholarships',data),update:(id,data)=>secureApi.put(`/class-scholarships/${id}`,data),delete:id=>secureApi.delete(`/class-scholarships/${id}`)},// === SERIES SUBJECTS ===\nseriesSubjects:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/series-subjects${queryString?'?'+queryString:''}`);},getByClass:classId=>secureApi.get(`/series-subjects/class/${classId}`),create:data=>secureApi.post('/series-subjects',data),update:(id,data)=>secureApi.put(`/series-subjects/${id}`,data),delete:id=>secureApi.delete(`/series-subjects/${id}`),toggleStatus:id=>secureApi.post(`/series-subjects/${id}/toggle-status`),bulkConfigure:(classId,data)=>secureApi.post(`/series-subjects/class/${classId}/bulk-configure`,data)},// === TEACHER ASSIGNMENTS ===\nteacherAssignments:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-assignments${queryString?'?'+queryString:''}`);},getByTeacher:function(teacherId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-assignments/teacher/${teacherId}${queryString?'?'+queryString:''}`);},getAvailableSubjects:function(teacherId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-assignments/teacher/${teacherId}/available-subjects${queryString?'?'+queryString:''}`);},create:data=>secureApi.post('/teacher-assignments',data),delete:id=>secureApi.delete(`/teacher-assignments/${id}`),toggleStatus:id=>secureApi.post(`/teacher-assignments/${id}/toggle-status`),bulkAssign:(teacherId,data)=>secureApi.post(`/teacher-assignments/teacher/${teacherId}/bulk-assign`,data)},// === MAIN TEACHERS ===\nmainTeachers:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/main-teachers${queryString?'?'+queryString:''}`);},getClassesWithoutMainTeacher:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/main-teachers/classes-without-main-teacher${queryString?'?'+queryString:''}`);},getAvailableTeachers:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/main-teachers/available-teachers${queryString?'?'+queryString:''}`);},create:data=>secureApi.post('/main-teachers',data),update:(id,data)=>secureApi.put(`/main-teachers/${id}`,data),delete:id=>secureApi.delete(`/main-teachers/${id}`),toggleStatus:id=>secureApi.post(`/main-teachers/${id}/toggle-status`)},// === NEEDS ===\nneeds:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/needs${queryString?'?'+queryString:''}`);},getMyNeeds:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/needs/my-needs${queryString?'?'+queryString:''}`);},getById:id=>secureApi.get(`/needs/${id}`),create:data=>secureApi.post('/needs',data),update:(id,data)=>secureApi.put(`/needs/${id}`,data),delete:id=>secureApi.delete(`/needs/${id}`),approve:id=>secureApi.post(`/needs/${id}/approve`),reject:(id,data)=>secureApi.post(`/needs/${id}/reject`,data),getStatistics:()=>secureApi.get('/needs/statistics/summary'),testWhatsApp:()=>secureApi.post('/needs/test-whatsapp'),// Exports\nexportPdf:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return`${secureApi.baseURL}/needs/export/pdf${queryString?'?'+queryString:''}?token=${authService.getToken()}`;},exportExcel:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return`${secureApi.baseURL}/needs/export/excel${queryString?'?'+queryString:''}?token=${authService.getToken()}`;},exportWord:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return`${secureApi.baseURL}/needs/export/word${queryString?'?'+queryString:''}?token=${authService.getToken()}`;}},// === DOCUMENTS ===\ndocuments:{// Dossiers\nfolders:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/documents/folders${queryString?'?'+queryString:''}`);},getTree:()=>secureApi.get('/documents/folders/tree'),getTypes:()=>secureApi.get('/documents/folders/types'),search:query=>secureApi.get(`/documents/folders/search?query=${encodeURIComponent(query)}`),getById:id=>secureApi.get(`/documents/folders/${id}`),create:data=>secureApi.post('/documents/folders',data),update:(id,data)=>secureApi.put(`/documents/folders/${id}`,data),delete:id=>secureApi.delete(`/documents/folders/${id}`)},// Documents\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/documents${queryString?'?'+queryString:''}`);},getStatistics:()=>secureApi.get('/documents/statistics'),getTypes:()=>secureApi.get('/documents/types'),getVisibilityTypes:()=>secureApi.get('/documents/visibility-types'),getById:id=>secureApi.get(`/documents/${id}`),upload:formData=>secureApi.post('/documents',formData),update:(id,data)=>secureApi.put(`/documents/${id}`,data),delete:id=>secureApi.delete(`/documents/${id}`),download:id=>secureApi.get(`/documents/${id}/download`,{responseType:'blob'}),toggleArchive:id=>secureApi.post(`/documents/${id}/toggle-archive`)},// === USER MANAGEMENT ===\nuserManagement:{getAll:()=>secureApi.get('/user-management'),getStats:()=>secureApi.get('/user-management/stats'),getById:id=>secureApi.get(`/user-management/${id}`),create:data=>secureApi.post('/user-management',data),update:(id,data)=>secureApi.put(`/user-management/${id}`,data),resetPassword:id=>secureApi.post(`/user-management/${id}/reset-password`),toggleStatus:id=>secureApi.post(`/user-management/${id}/toggle-status`),delete:id=>secureApi.delete(`/user-management/${id}`),uploadPhoto:formData=>{const token=authService.getToken();return fetch(`${secureApi.baseURL}/upload-photo`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Ne pas définir Content-Type pour FormData\n},body:formData}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});},// Nouvelle fonctionnalité: cartes d'identité professionnelles\ngenerateProfessionalCard:id=>{const token=authService.getToken();return fetch(`${secureApi.baseURL}/user-management/${id}/professional-card`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/pdf'}}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`Erreur ${response.status}`);}return response.blob();});},getUserQR:id=>secureApi.get(`/user-management/${id}/qr-code`),// Export personnel administratif\nexportAdministrativeStaffPdf:()=>{const token=authService.getToken();return fetch(`${secureApi.baseURL}/user-management/export/administrative-staff/pdf`,{method:'GET',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/pdf'}}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`Erreur ${response.status}`);}return response.blob();});}},// === SUPERVISORS & ATTENDANCE ===\nsupervisors:{// Gestion des affectations (admin uniquement)\nassignToClass:data=>secureApi.post('/supervisors/assign-to-class',data),getAllAssignments:()=>secureApi.get('/supervisors/all-assignments'),deleteAssignment:assignmentId=>secureApi.delete(`/supervisors/assignments/${assignmentId}`),getSupervisorAssignments:supervisorId=>secureApi.get(`/supervisors/${supervisorId}/assignments`),getAvailableClasses:supervisorId=>secureApi.get(`/supervisors/${supervisorId}/available-classes`),// Scanner QR et présences\nscanQR:data=>secureApi.post('/supervisors/scan-qr',data),getDailyAttendance:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/supervisors/daily-attendance${queryString?'?'+queryString:''}`);},getAttendanceRange:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/supervisors/attendance-range${queryString?'?'+queryString:''}`);},getEntryExitStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/supervisors/entry-exit-stats${queryString?'?'+queryString:''}`);},getStudentCurrentStatus:data=>secureApi.post('/supervisors/student-status',data),markAbsentStudents:data=>secureApi.post('/supervisors/mark-absent-students',data),markAllAbsentStudents:data=>secureApi.post('/supervisors/mark-all-absent-students',data),// Génération QR codes\ngenerateStudentQR:studentId=>secureApi.get(`/supervisors/generate-qr/${studentId}`),generateAllQRs:()=>secureApi.get('/supervisors/generate-all-qrs')},// === TEACHER ATTENDANCE ===\nteacherAttendance:{// Scanner QR et présences enseignants\nscanQR:data=>secureApi.post('/teacher-attendance/scan-qr',data),getDailyAttendance:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-attendance/daily-attendance${queryString?'?'+queryString:''}`);},getEntryExitStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-attendance/entry-exit-stats${queryString?'?'+queryString:''}`);},// Gestion des QR codes enseignants\ngenerateQRCode:data=>secureApi.post('/teacher-attendance/generate-qr',data),getTeachersWithQR:()=>secureApi.get('/teacher-attendance/teachers-with-qr'),// Rapports et statistiques\ngetTeacherReport:function(teacherId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-attendance/teacher/${teacherId}/report${queryString?'?'+queryString:''}`);},getDetailedTeacherStats:function(teacherId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-attendance/teacher/${teacherId}/detailed-stats${queryString?'?'+queryString:''}`);},getDayMovements:function(teacherId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/teacher-attendance/teacher/${teacherId}/day-movements${queryString?'?'+queryString:''}`);},updateWorkSchedule:(teacherId,data)=>secureApi.put(`/teacher-attendance/teacher/${teacherId}/work-schedule`,data)},// === DEPARTMENTS ===\ndepartments:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/departments${queryString?'?'+queryString:''}`);},getById:id=>secureApi.get(`/departments/${id}`),create:data=>secureApi.post('/departments',data),update:(id,data)=>secureApi.put(`/departments/${id}`,data),delete:id=>secureApi.delete(`/departments/${id}`),assignTeacher:(id,data)=>secureApi.post(`/departments/${id}/assign-teacher`,data),removeTeacher:(id,data)=>secureApi.post(`/departments/${id}/remove-teacher`,data),setHead:(id,data)=>secureApi.post(`/departments/${id}/set-head`,data),exportPdf:async()=>{return secureApi.makeRequest('/departments/export/pdf',{method:'GET'});}},// === INVENTORY ===\ninventory:{getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/inventory${queryString?'?'+queryString:''}`);},getDashboard:()=>secureApi.get('/inventory/dashboard'),getConfig:()=>secureApi.get('/inventory/config'),getById:id=>secureApi.get(`/inventory/${id}`),create:data=>secureApi.post('/inventory',data),update:(id,data)=>secureApi.put(`/inventory/${id}`,data),delete:id=>secureApi.delete(`/inventory/${id}`),updateQuantity:(id,data)=>secureApi.patch(`/inventory/${id}/quantity`,data),getMovements:id=>secureApi.get(`/inventory/${id}/movements`),recordMovement:(id,data)=>secureApi.post(`/inventory/${id}/movements`,data),exportData:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();return secureApi.get(`/inventory/export${queryString?'?'+queryString:''}`);},importData:formData=>{const token=authService.getToken();return fetch(`${secureApi.baseURL}/inventory/import`,{method:'POST',headers:{'Authorization':`Bearer ${token}`,'Accept':'application/json'// Ne pas définir Content-Type pour FormData\n},body:formData}).then(async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||`HTTP Error ${response.status}`);}return response.json();});},getLowStockItems:()=>secureApi.get('/inventory/low-stock'),testWhatsApp:()=>secureApi.post('/inventory/test-whatsapp')}};/**\n * Wrapper de migration pour compatibilité avec l'ancien système\n * Permet une migration progressive des composants\n */export const createMigrationWrapper=(oldEndpoint,newEndpoint)=>{return async function(){try{// Essayer d'abord le nouveau système\nreturn await newEndpoint(...arguments);}catch(error){console.warn(`Nouveau endpoint échoué, utilisation de l'ancien système:`,error);// Fallback vers l'ancien système si nécessaire\nreturn await oldEndpoint(...arguments);}};};/**\n * Utilitaires de migration\n */export const migrationUtils={// Nettoyer l'ancien stockage\ncleanOldStorage:()=>{try{sessionStorage.removeItem('user');sessionStorage.removeItem('stat');sessionStorage.removeItem('classId');localStorage.removeItem('user');localStorage.removeItem('stat');}catch(error){console.error('Erreur lors du nettoyage du stockage:',error);}},// Migrer les données utilisateur si présentes\nmigrateUserData:()=>{try{const oldUser=sessionStorage.getItem('user');const oldStatus=sessionStorage.getItem('stat');if(oldUser&&oldStatus){console.log('Anciennes données utilisateur détectées, migration recommandée');// Ici vous pourriez implémenter une logique de migration\nreturn{token:oldUser,status:oldStatus};}}catch(error){console.error('Erreur lors de la migration des données:',error);}return null;},// Vérifier si une migration est nécessaire\nneedsMigration:()=>{const hasOldData=!!(sessionStorage.getItem('user')||localStorage.getItem('user'));const hasNewData=!!authService.getToken();return hasOldData&&!hasNewData;},// === CONVENIENCE METHODS ===\ngetTeachers:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return secureApiEndpoints.teachers.getAll(params);},getSubjects:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return secureApiEndpoints.subjects.getAll(params);}};export{secureApi};export default secureApiEndpoints;","map":{"version":3,"names":["authService","host","logger","SecureApiService","constructor","baseURL","makeRequest","endpoint","options","arguments","length","undefined","fullUrl","startsWith","token","getToken","headers","body","FormData","response","fetch","ok","errorMessage","status","statusText","contentType","get","includes","errorData","json","message","error","errorText","text","parseError","console","warn","removeToken","window","dispatchEvent","CustomEvent","Error","responseText","trim","success","JSON","parse","jsonError","name","apiError","method","post","data","stringify","put","delete","patch","secureApi","secureApiEndpoints","auth","login","credentials","logout","refresh","refreshToken","me","getCurrentUser","updateProfile","changePassword","uploadAvatar","formData","e","_result$data","_result$data2","result","url","filename","users","getAll","getById","id","create","update","getProfile","teachers","params","queryString","URLSearchParams","toString","toggleStatus","assignSubjects","removeAssignment","createUserAccount","removeUserAccount","getStats","generateBadge","teacherId","teacher_id","responseType","generateMultipleBadges","teacherIds","teacher_ids","subjects","getForSeries","seriesId","configureForSeries","staff","scanQR","getDailyAttendance","getEntryExitStats","generateQRCode","downloadBadgePDF","getStaffWithQR","getStaffReport","staffId","userIds","user_ids","students","getByClass","classId","getByClassSeries","createWithPhoto","log","networkError","debugCreateStudent","key","value","entries","File","Object","fromEntries","debug","updateStatus","student_status","updateWithPhoto","then","catch","exportCsv","blob","exportPdf","importCsv","importExcel","getSchoolYears","transfer","newClassId","class_id","transferToSeries","newSeriesId","class_series_id","getOrdered","reorder","sortAlphabetically","bulkUploadPhotos","classes","getBySection","sectionId","sections","getDashboard","levels","schoolClasses","configurePayments","getByLevel","levelId","grades","getByStudent","studentId","paymentTranches","getUsageStats","settings","reports","getBulletin","period","getClassReport","getFinancialReport","getInsolvableReport","getPaymentsReport","getRameReport","getRecoveryReport","getCollectionSummaryReport","getPaymentDetailsReport","getScholarshipsDiscountsReport","getCollectionDetailsReport","getSeriesCollectionSummary","getSchoolFeePaymentDetails","getRecoveryStatus","generateSchoolCertificates","getDetailedCollectionReport","getClassSchoolFeesReport","htmlContent","search","global","query","limit","encodeURIComponent","quick","stats","getGlobal","accountant","dashboard","getClasses","getClassSeries","getSeriesStudents","getStudent","schoolYears","setCurrent","getActive","getActiveYears","getUserWorkingYear","setUserWorkingYear","yearId","school_year_id","studentRame","getStatus","getClassStatus","classSeriesId","payments","getStudentInfo","getStudentInfoWithDiscount","getStudentHistory","calculateWithDate","store","generateReceipt","paymentId","downloadReceipt","generateListingReport","generateTrancheListsReport","getTranches","downloadListingReportPDF","format","start_date","end_date","URL","createObjectURL","a","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","removeChild","downloadTrancheListsReportPDF","downloadReceiptPDF","contentDisposition","split","replace","schoolSettings","append","getLogo","testWhatsApp","scholarships","seriesSubjects","bulkConfigure","teacherAssignments","getByTeacher","getAvailableSubjects","bulkAssign","mainTeachers","getClassesWithoutMainTeacher","getAvailableTeachers","needs","getMyNeeds","approve","reject","getStatistics","exportExcel","exportWord","documents","folders","getTree","getTypes","getVisibilityTypes","upload","toggleArchive","userManagement","resetPassword","uploadPhoto","generateProfessionalCard","getUserQR","exportAdministrativeStaffPdf","supervisors","assignToClass","getAllAssignments","deleteAssignment","assignmentId","getSupervisorAssignments","supervisorId","getAvailableClasses","getAttendanceRange","getStudentCurrentStatus","markAbsentStudents","markAllAbsentStudents","generateStudentQR","generateAllQRs","teacherAttendance","getTeachersWithQR","getTeacherReport","getDetailedTeacherStats","getDayMovements","updateWorkSchedule","departments","assignTeacher","removeTeacher","setHead","inventory","getConfig","updateQuantity","getMovements","recordMovement","exportData","importData","getLowStockItems","createMigrationWrapper","oldEndpoint","newEndpoint","migrationUtils","cleanOldStorage","sessionStorage","removeItem","localStorage","migrateUserData","oldUser","getItem","oldStatus","needsMigration","hasOldData","hasNewData","getTeachers","getSubjects"],"sources":["/var/www/College-IUP/front/src/utils/apiMigration.js"],"sourcesContent":["/**\n * Migration des anciens endpoints API vers le nouveau système d'authentification JWT\n * Ce fichier remplace progressivement l'ancien système basé sur sessionStorage.user\n */\n\nimport { authService } from '../services/authService';\nimport { host } from './fetch';\nimport logger from './logger';\n\n/**\n * Nouveau service API qui utilise automatiquement les tokens JWT\n */\nclass SecureApiService {\n    constructor() {\n        this.baseURL = `${host}/api`;\n    }\n\n    // Fonction de requête sécurisée personnalisée - VERSION AMÉLIORÉE\n    async makeRequest(endpoint, options = {}) {\n        const fullUrl = endpoint.startsWith('http') ? endpoint : `${this.baseURL}${endpoint}`;\n\n        const token = authService.getToken();\n        const headers = {\n            'Accept': 'application/json',\n            ...options.headers\n        };\n\n        // Ne pas ajouter Content-Type pour FormData\n        if (!(options.body instanceof FormData)) {\n            headers['Content-Type'] = 'application/json';\n        }\n\n        if (token) {\n            headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        try {\n            const response = await fetch(fullUrl, {\n                ...options,\n                headers\n            });\n\n            // Gestion des erreurs HTTP\n            if (!response.ok) {\n                let errorMessage = `Erreur HTTP ${response.status}: ${response.statusText}`;\n\n                try {\n                    const contentType = response.headers.get('content-type');\n                    if (contentType && contentType.includes('application/json')) {\n                        const errorData = await response.json();\n                        errorMessage = errorData.message || errorData.error || errorMessage;\n                    } else {\n                        const errorText = await response.text();\n                        if (errorText) {\n                            errorMessage = errorText;\n                        }\n                    }\n                } catch (parseError) {\n                    console.warn('Impossible de parser la réponse d\\'erreur:', parseError);\n                }\n\n                // Gestion spéciale pour les erreurs 401\n                if (response.status === 401) {\n                    authService.removeToken();\n                    window.dispatchEvent(new CustomEvent('auth:unauthorized'));\n                    throw new Error('Session expirée. Veuillez vous reconnecter.');\n                }\n\n                throw new Error(errorMessage);\n            }\n\n            // Vérifier le type de contenu\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                const responseText = await response.text();\n\n                if (!responseText.trim()) {\n                    console.warn('Réponse JSON vide du serveur');\n                    return { success: true };\n                }\n\n                try {\n                    return JSON.parse(responseText);\n                } catch (jsonError) {\n                    console.error('Erreur de parsing JSON:', jsonError);\n                    console.error('Contenu reçu:', responseText);\n                    throw new Error('Format de réponse invalide du serveur');\n                }\n            } else {\n                // Pour les réponses non-JSON (PDF, images, etc.)\n                return response;\n            }\n\n        } catch (error) {\n            if (error.name === 'TypeError' && error.message.includes('fetch')) {\n                logger.apiError(error, 'Connexion');\n                throw new Error('Impossible de se connecter au serveur. Vérifiez votre connexion.');\n            }\n            logger.apiError(error);\n            throw error;\n        }\n    }\n\n    // Méthodes GET\n    async get(endpoint, options = {}) {\n        return await this.makeRequest(endpoint, {\n            method: 'GET',\n            ...options\n        });\n    }\n\n    // Méthodes POST\n    async post(endpoint, data = null, options = {}) {\n        return await this.makeRequest(endpoint, {\n            method: 'POST',\n            body: data ? (data instanceof FormData ? data : JSON.stringify(data)) : null,\n            ...options\n        });\n    }\n\n    // Méthodes PUT\n    async put(endpoint, data = null, options = {}) {\n        return await this.makeRequest(endpoint, {\n            method: 'PUT',\n            body: data ? (data instanceof FormData ? data : JSON.stringify(data)) : null,\n            ...options\n        });\n    }\n\n    // Méthodes DELETE\n    async delete(endpoint, options = {}) {\n        return await this.makeRequest(endpoint, {\n            method: 'DELETE',\n            ...options\n        });\n    }\n\n    // Méthodes PATCH\n    async patch(endpoint, data = null, options = {}) {\n        return await this.makeRequest(endpoint, {\n            method: 'PATCH',\n            body: data ? (data instanceof FormData ? data : JSON.stringify(data)) : null,\n            ...options\n        });\n    }\n}\n\n// Instance singleton\nconst secureApi = new SecureApiService();\n\n/**\n * Nouveaux endpoints API avec authentification JWT\n * Remplace progressivement les anciens endpoints\n */\nexport const secureApiEndpoints = {\n    // === AUTHENTICATION ===\n    auth: {\n        login: (credentials) => authService.login(credentials),\n        logout: () => authService.logout(),\n        refresh: () => authService.refreshToken(),\n        me: () => authService.getCurrentUser(),\n        updateProfile: (data) => secureApi.put('/users/profile', data),\n        changePassword: (data) => secureApi.put('/auth/change-password', data),\n        uploadAvatar: async (formData) => {\n            const token = authService.getToken();\n\n            try {\n                const response = await fetch(`${secureApi.baseURL}/upload-photo`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                        // Don't set Content-Type for FormData\n                    },\n                    body: formData\n                });\n\n                if (!response.ok) {\n                    let errorMessage = `HTTP Error ${response.status}: ${response.statusText}`;\n\n                    try {\n                        const contentType = response.headers.get('content-type');\n                        if (contentType && contentType.includes('application/json')) {\n                            const errorData = await response.json();\n                            errorMessage = errorData.message || errorData.error || errorMessage;\n                        }\n                    } catch (e) {\n                        // Ignore JSON parsing errors\n                    }\n\n                    throw new Error(errorMessage);\n                }\n\n                const contentType = response.headers.get('content-type');\n                if (contentType && contentType.includes('application/json')) {\n                    const result = await response.json();\n                    return {\n                        success: result.success,\n                        message: result.message,\n                        data: {\n                            url: result.data?.url || null,\n                            filename: result.data?.filename || null\n                        }\n                    };\n                } else {\n                    throw new Error('Invalid response format');\n                }\n            } catch (error) {\n                throw error;\n            }\n        }\n    },\n\n    // === USERS ===\n    users: {\n        getAll: () => secureApi.get('/users'),\n        getById: (id) => secureApi.get(`/users/${id}`),\n        create: (data) => secureApi.post('/users', data),\n        update: (id, data) => secureApi.put(`/users/${id}`, data),\n        delete: (id) => secureApi.delete(`/users/${id}`),\n        getProfile: () => secureApi.get('/users/profile'),\n        updateProfile: (data) => secureApi.put('/users/profile', data)\n    },\n\n    // === TEACHERS ===\n    teachers: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teachers${queryString ? '?' + queryString : ''}`);\n        },\n        getById: (id) => secureApi.get(`/teachers/${id}`),\n        create: (data) => secureApi.post('/teachers', data),\n        update: (id, data) => secureApi.put(`/teachers/${id}`, data),\n        delete: (id) => secureApi.delete(`/teachers/${id}`),\n        toggleStatus: (id) => secureApi.post(`/teachers/${id}/toggle-status`),\n        assignSubjects: (id, data) => secureApi.post(`/teachers/${id}/assign-subjects`, data),\n        removeAssignment: (id, data) => secureApi.post(`/teachers/${id}/remove-assignment`, data),\n        createUserAccount: (id, data) => secureApi.post(`/teachers/${id}/create-user-account`, data),\n        removeUserAccount: (id) => secureApi.delete(`/teachers/${id}/remove-user-account`),\n        getStats: (id, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teachers/${id}/stats${queryString ? '?' + queryString : ''}`);\n        },\n        generateBadge: (teacherId) => {\n            return secureApi.post('/teachers/generate-badge', {\n                teacher_id: teacherId\n            }, {\n                responseType: 'blob' // Important pour recevoir le PDF en blob\n            });\n        },\n\n        generateMultipleBadges: (teacherIds) => {\n            return secureApi.post('/teachers/generate-multiple-badges', {\n                teacher_ids: teacherIds\n            }, {\n                responseType: 'blob' // Important pour recevoir le PDF en blob\n            });\n        }\n    },\n\n    // === SUBJECTS ===\n    subjects: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/subjects${queryString ? '?' + queryString : ''}`);\n        },\n        getById: (id) => secureApi.get(`/subjects/${id}`),\n        create: (data) => secureApi.post('/subjects', data),\n        update: (id, data) => secureApi.put(`/subjects/${id}`, data),\n        delete: (id) => secureApi.delete(`/subjects/${id}`),\n        toggleStatus: (id) => secureApi.post(`/subjects/${id}/toggle-status`),\n        getForSeries: (seriesId) => secureApi.get(`/subjects/series/${seriesId}`),\n        configureForSeries: (seriesId, data) => secureApi.post(`/subjects/series/${seriesId}/configure`, data)\n    },\n\n    // === STAFF ATTENDANCE ===\n    staff: {\n        scanQR: (data) => secureApi.post('/staff-attendance/scan-qr', data),\n        getDailyAttendance: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/staff-attendance/daily-attendance${queryString ? '?' + queryString : ''}`);\n        },\n        getEntryExitStats: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/staff-attendance/entry-exit-stats${queryString ? '?' + queryString : ''}`);\n        },\n        generateQRCode: (data) => secureApi.post('/staff-attendance/generate-qr', data),\n        downloadBadgePDF: async (data) => {\n            return secureApi.makeRequest('/staff-attendance/generate-qr', {\n                method: 'POST',\n                body: JSON.stringify(data)\n            });\n        },\n        getStaffWithQR: () => secureApi.get('/staff-attendance/staff-with-qr'),\n        getStaffReport: (staffId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/staff-attendance/staff/${staffId}/report${queryString ? '?' + queryString : ''}`);\n        },\n        generateMultipleBadges: async (userIds) => {\n            return secureApi.makeRequest('/staff-attendance/generate-multiple-badges', {\n                method: 'POST',\n                body: JSON.stringify({ user_ids: userIds })\n            });\n        }\n    },\n\n    // === STUDENTS ===\n    students: {\n        getAll: () => secureApi.get('/students'),\n        getByClass: (classId) => secureApi.get(`/students/class/${classId}`),\n        getByClassSeries: (seriesId) => secureApi.get(`/students/class-series/${seriesId}`),\n        getById: (id) => secureApi.get(`/students/${id}`),\n        create: (data) => secureApi.post('/students', data),\n\n        // VERSION AMÉLIORÉE avec meilleure gestion des erreurs JSON\n        createWithPhoto: async (formData) => {\n            const token = authService.getToken();\n\n            try {\n                const response = await fetch(`${secureApi.baseURL}/students`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                        // Don't set Content-Type - let browser set it with boundary for FormData\n                    },\n                    body: formData\n                });\n\n                // Vérifier d'abord si la réponse est ok\n                if (!response.ok) {\n                    // Essayer de récupérer le message d'erreur\n                    let errorMessage = `HTTP Error ${response.status}: ${response.statusText}`;\n\n                    try {\n                        const contentType = response.headers.get('content-type');\n                        if (contentType && contentType.includes('application/json')) {\n                            const errorData = await response.json();\n                            errorMessage = errorData.message || errorData.error || errorMessage;\n                        } else {\n                            // Si ce n'est pas du JSON, lire comme texte\n                            const errorText = await response.text();\n                            if (errorText) {\n                                errorMessage = errorText;\n                            }\n                        }\n                    } catch (parseError) {\n                        console.warn('Impossible de parser la réponse d\\'erreur:', parseError);\n                    }\n\n                    throw new Error(errorMessage);\n                }\n\n                // Vérifier le type de contenu de la réponse\n                const contentType = response.headers.get('content-type');\n                if (!contentType || !contentType.includes('application/json')) {\n                    console.warn('La réponse du serveur n\\'est pas au format JSON, type:', contentType);\n                    // Essayer quand même de lire comme texte pour voir ce qu'on reçoit\n                    const responseText = await response.text();\n                    console.log('Contenu de la réponse non-JSON:', responseText);\n\n                    // Si c'est vide mais status 200/201, considérer comme succès\n                    if (!responseText.trim() && (response.status === 200 || response.status === 201)) {\n                        return { success: true, message: 'Étudiant créé avec succès' };\n                    }\n\n                    throw new Error('La réponse du serveur n\\'est pas au format JSON');\n                }\n\n                // Vérifier si le body existe\n                const responseText = await response.text();\n                if (!responseText || responseText.trim() === '') {\n                    console.warn('Réponse vide du serveur mais status OK');\n                    return { success: true, message: 'Étudiant créé avec succès' };\n                }\n\n                // Parser le JSON\n                try {\n                    return JSON.parse(responseText);\n                } catch (jsonError) {\n                    console.error('Erreur de parsing JSON:', jsonError);\n                    console.error('Contenu de la réponse:', responseText);\n                    throw new Error('Format de réponse invalide du serveur');\n                }\n\n            } catch (networkError) {\n                if (networkError.name === 'TypeError' && networkError.message.includes('fetch')) {\n                    throw new Error('Impossible de se connecter au serveur. Vérifiez votre connexion.');\n                }\n                throw networkError;\n            }\n        },\n\n        // Fonction de debug pour diagnostiquer les problèmes\n        debugCreateStudent: async (formData) => {\n            const token = authService.getToken();\n\n            console.log('=== DEBUG CREATE STUDENT ===');\n            console.log('Token présent:', !!token);\n            console.log('FormData entries:');\n            for (let [key, value] of formData.entries()) {\n                console.log(`${key}:`, value instanceof File ? `File(${value.name})` : value);\n            }\n\n            try {\n                const response = await fetch(`${secureApi.baseURL}/students`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                    },\n                    body: formData\n                });\n\n                console.log('Response received:');\n                console.log('- Status:', response.status);\n                console.log('- Status Text:', response.statusText);\n                console.log('- Headers:', Object.fromEntries(response.headers.entries()));\n\n                const responseText = await response.text();\n                console.log('- Body length:', responseText.length);\n                console.log('- Body content:', responseText);\n\n                if (!response.ok) {\n                    throw new Error(`HTTP ${response.status}: ${response.statusText}\\nBody: ${responseText}`);\n                }\n\n                if (!responseText.trim()) {\n                    console.warn('Empty response body');\n                    return { success: true, debug: true };\n                }\n\n                return JSON.parse(responseText);\n\n            } catch (error) {\n                console.error('=== ERROR ===', error);\n                throw error;\n            }\n        },\n\n        update: (id, data) => secureApi.put(`/students/${id}`, data),\n        updateStatus: (id, status) => secureApi.patch(`/students/${id}/status`, { student_status: status }),\n        updateWithPhoto: (id, formData) => {\n            const token = authService.getToken();\n            return fetch(`${secureApi.baseURL}/students/${id}/update-with-photo`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                    // Don't set Content-Type - let browser set it with boundary for FormData\n                },\n                body: formData\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                }\n                return response.json();\n            });\n        },\n        delete: (id) => secureApi.delete(`/students/${id}`),\n        exportCsv: async (seriesId) => {\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/students/export-csv/${seriesId}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'text/csv'\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(errorData.message || 'Erreur lors de l\\'export CSV');\n            }\n\n            return await response.blob();\n        },\n        exportPdf: async (seriesId) => {\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/students/export-pdf/${seriesId}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'text/html'\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(errorData.message || 'Erreur lors de l\\'export PDF');\n            }\n\n            return response; // Retourner la réponse pour permettre .text()\n        },\n        importCsv: (formData, seriesId) => {\n            const token = authService.getToken();\n\n            // Utiliser la nouvelle route avec l'ID de série\n            const endpoint = seriesId\n                ? `/students/series/${seriesId}/import`\n                : `/students/import/csv`; // Fallback vers l'ancienne route\n\n            return fetch(`${secureApi.baseURL}${endpoint}`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                    // Don't set Content-Type - let browser set it with boundary for FormData\n                },\n                body: formData\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                }\n                return response.json();\n            });\n        },\n\n        // Nouvelle méthode pour import Excel spécifique à une série\n        importExcel: (formData, seriesId) => {\n            const token = authService.getToken();\n\n            // Utiliser la nouvelle route avec l'ID de série\n            const endpoint = seriesId\n                ? `/students/series/${seriesId}/import`\n                : `/students/import/excel`; // Fallback vers l'ancienne route\n\n            return fetch(`${secureApi.baseURL}${endpoint}`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                    // Don't set Content-Type - let browser set it with boundary for FormData\n                },\n                body: formData\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                }\n                return response.json();\n            });\n        },\n        getSchoolYears: () => secureApi.get('/students/school-years'),\n        transfer: (id, newClassId) => secureApi.post(`/students/${id}/transfer`, { class_id: newClassId }),\n        transferToSeries: (id, newSeriesId) => secureApi.post(`/students/${id}/transfer-series`, { class_series_id: newSeriesId }),\n        getOrdered: (classId) => secureApi.get(`/students/class/${classId}/ordered`),\n        reorder: (data) => secureApi.post('/students/reorder', data),\n        sortAlphabetically: (seriesId, data) => secureApi.post(`/students/class-series/${seriesId}/sort-alphabetically`, data),\n        bulkUploadPhotos: (formData) => secureApi.post('/students/bulk-upload-photos', formData)\n    },\n\n    // === CLASSES ===\n    classes: {\n        getAll: () => secureApi.get('/classes'),\n        getById: (id) => secureApi.get(`/classes/${id}`),\n        getBySection: (sectionId) => secureApi.get(`/classes/section/${sectionId}`),\n        create: (data) => secureApi.post('/classes', data),\n        update: (id, data) => secureApi.put(`/classes/${id}`, data),\n        delete: (id) => secureApi.delete(`/classes/${id}`)\n    },\n\n    // === SECTIONS ===\n    sections: {\n        getAll: () => secureApi.get('/sections'),\n        getById: (id) => secureApi.get(`/sections/${id}`),\n        create: (data) => secureApi.post('/sections', data),\n        update: (id, data) => secureApi.put(`/sections/${id}`, data),\n        delete: (id) => secureApi.delete(`/sections/${id}`),\n        getDashboard: () => secureApi.get('/sections/dashboard'),\n        toggleStatus: (id) => secureApi.post(`/sections/${id}/toggle-status`)\n    },\n\n    // === LEVELS ===\n    levels: {\n        getAll: () => secureApi.get('/levels'),\n        getById: (id) => secureApi.get(`/levels/${id}`),\n        create: (data) => secureApi.post('/levels', data),\n        update: (id, data) => secureApi.put(`/levels/${id}`, data),\n        delete: (id) => secureApi.delete(`/levels/${id}`),\n        getDashboard: () => secureApi.get('/levels/dashboard'),\n        toggleStatus: (id) => secureApi.post(`/levels/${id}/toggle-status`),\n        getBySection: (sectionId) => secureApi.get(`/levels?section_id=${sectionId}`)\n    },\n\n    // === SCHOOL CLASSES ===\n    schoolClasses: {\n        getAll: () => secureApi.get('/school-classes'),\n        getById: (id) => secureApi.get(`/school-classes/${id}`),\n        create: (data) => secureApi.post('/school-classes', data),\n        update: (id, data) => secureApi.put(`/school-classes/${id}`, data),\n        delete: (id) => secureApi.delete(`/school-classes/${id}`),\n        getDashboard: () => secureApi.get('/school-classes/dashboard'),\n        toggleStatus: (id) => secureApi.post(`/school-classes/${id}/toggle-status`),\n        configurePayments: (id, data) => secureApi.post(`/school-classes/${id}/configure-payments`, data),\n        getByLevel: (levelId) => secureApi.get(`/school-classes?level_id=${levelId}`),\n        getBySection: (sectionId) => secureApi.get(`/school-classes?section_id=${sectionId}`)\n    },\n\n    // === GRADES ===\n    grades: {\n        getByStudent: (studentId) => secureApi.get(`/grades/student/${studentId}`),\n        getByClass: (classId) => secureApi.get(`/grades/class/${classId}`),\n        create: (data) => secureApi.post('/grades', data),\n        update: (id, data) => secureApi.put(`/grades/${id}`, data),\n        delete: (id) => secureApi.delete(`/grades/${id}`)\n    },\n\n    // === PAYMENT TRANCHES ===\n    paymentTranches: {\n        getAll: () => secureApi.get('/payment-tranches'),\n        getById: (id) => secureApi.get(`/payment-tranches/${id}`),\n        create: (data) => secureApi.post('/payment-tranches', data),\n        update: (id, data) => secureApi.put(`/payment-tranches/${id}`, data),\n        delete: (id) => secureApi.delete(`/payment-tranches/${id}`),\n        reorder: (data) => secureApi.post('/payment-tranches/reorder', data),\n        getUsageStats: (id) => secureApi.get(`/payment-tranches/${id}/usage-stats`)\n    },\n\n    // === SETTINGS ===\n    settings: {\n        get: () => secureApi.get('/settings'),\n        update: (data) => secureApi.put('/settings', data)\n    },\n\n    // === REPORTS ===\n    reports: {\n        getBulletin: (studentId, period) => secureApi.get(`/reports/bulletin/${studentId}/${period}`),\n        getClassReport: (classId) => secureApi.get(`/reports/class/${classId}`),\n        getFinancialReport: (period) => secureApi.get(`/reports/financial/${period}`),\n        getInsolvableReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/insolvable?${queryString}`);\n        },\n        getPaymentsReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/payments?${queryString}`);\n        },\n        getRameReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/rame?${queryString}`);\n        },\n        getRecoveryReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/recovery?${queryString}`);\n        },\n        getCollectionSummaryReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/collection-summary?${queryString}`);\n        },\n        getPaymentDetailsReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/payment-details?${queryString}`);\n        },\n        getScholarshipsDiscountsReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/scholarships-discounts?${queryString}`);\n        },\n        getCollectionDetailsReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/collection-details?${queryString}`);\n        },\n        getSeriesCollectionSummary: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/series-collection-summary?${queryString}`);\n        },\n        getSchoolFeePaymentDetails: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/school-fee-payment-details?${queryString}`);\n        },\n        getRecoveryStatus: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/recovery-status?${queryString}`);\n        },\n        generateSchoolCertificates: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/school-certificates?${queryString}`);\n        },\n        getDetailedCollectionReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/detailed-collection?${queryString}`);\n        },\n        getClassSchoolFeesReport: (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/reports/class-school-fees?${queryString}`);\n        },\n        exportPdf: async (params) => {\n            const queryString = new URLSearchParams(params).toString();\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/reports/export-pdf?${queryString}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'text/html'\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(errorData.message || 'Erreur lors de l\\'export PDF');\n            }\n\n            const htmlContent = await response.text();\n            return { success: true, data: htmlContent };\n        }\n    },\n\n    // === SEARCH ===\n    search: {\n        global: (query, limit = 20) => secureApi.get(`/search?query=${encodeURIComponent(query)}&limit=${limit}`),\n        quick: (query) => secureApi.get(`/search/quick?query=${encodeURIComponent(query)}`)\n    },\n\n    // === STATISTICS ===\n    stats: {\n        getGlobal: () => secureApi.get('/stats/global')\n    },\n\n    // === ACCOUNTANT ===\n    accountant: {\n        dashboard: () => secureApi.get('/accountant/dashboard'),\n        getClasses: () => secureApi.get('/accountant/classes'),\n        getClassSeries: (classId) => secureApi.get(`/accountant/classes/${classId}/series`),\n        getSeriesStudents: (seriesId) => secureApi.get(`/accountant/series/${seriesId}/students`),\n        getStudent: (studentId) => secureApi.get(`/accountant/students/${studentId}`)\n    },\n\n    // === SCHOOL YEARS ===\n    schoolYears: {\n        getAll: () => secureApi.get('/school-years'),\n        create: (data) => secureApi.post('/school-years', data),\n        update: (id, data) => secureApi.put(`/school-years/${id}`, data),\n        setCurrent: (id) => secureApi.post(`/school-years/${id}/set-current`),\n        getActive: () => secureApi.get('/school-years/active'),\n        getActiveYears: () => secureApi.get('/school-years/active'),\n        getUserWorkingYear: () => secureApi.get('/school-years/user-working-year'),\n        setUserWorkingYear: (yearId) => secureApi.post('/school-years/set-user-working-year', { school_year_id: yearId })\n    },\n\n    // === PAYMENTS ===\n    // payments: {\n    // },\n\n    // === STUDENT RAME (pour RameStatusToggle) ===\n    studentRame: {\n        getStatus: (studentId) => secureApi.get(`/student-rame/student/${studentId}/status`),\n        updateStatus: (studentId, data) => secureApi.post(`/student-rame/student/${studentId}/update`, data),\n        getClassStatus: (classSeriesId) => secureApi.get(`/student-rame/class-series/${classSeriesId}`)\n    },\n\n    // === PAYMENTS ===\n    payments: {\n        getStudentInfo: (studentId) => secureApi.get(`/payments/student/${studentId}/info`),\n        getStudentInfoWithDiscount: (studentId) => secureApi.get(`/payments/student/${studentId}/info-with-discount`),\n        getStudentHistory: (studentId) => secureApi.get(`/payments/student/${studentId}/history`),\n        calculateWithDate: (studentId, data) => secureApi.post(`/payments/student/${studentId}/calculate-with-date`, data),\n        store: (data) => secureApi.post('/payments', data),\n        generateReceipt: (paymentId) => secureApi.get(`/payments/${paymentId}/receipt`),\n        downloadReceipt: (paymentId) => secureApi.get(`/payments/${paymentId}/receipt/pdf`),\n        getStats: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/payments/stats${queryString ? '?' + queryString : ''}`);\n        },\n        generateListingReport: (data) => secureApi.post('/payments/listing-report', data),\n        generateTrancheListsReport: (data) => secureApi.post('/payments/tranche-lists-report', data),\n        getTranches: () => secureApi.get('/payments/tranches'),\n        downloadListingReportPDF: async (data) => {\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/payments/listing-report`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/pdf'\n                },\n                body: JSON.stringify({ ...data, format: 'pdf' })\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const blob = await response.blob();\n\n            // Créer un nom de fichier\n            const filename = `listing_paiements_${data.start_date}_${data.end_date}.pdf`;\n\n            // Créer et déclencher le téléchargement\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n\n            return { success: true, filename };\n        },\n        downloadTrancheListsReportPDF: async (data) => {\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/payments/tranche-lists-report`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/pdf'\n                },\n                body: JSON.stringify({ ...data, format: 'pdf' })\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const blob = await response.blob();\n\n            // Créer un nom de fichier\n            const filename = `liste_tranches_${data.start_date}_${data.end_date}.pdf`;\n\n            // Créer et déclencher le téléchargement\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n\n            return { success: true, filename };\n        },\n        create: (data) => secureApi.post('/payments', data),\n        downloadReceiptPDF: async (paymentId) => {\n            const token = authService.getToken();\n            const response = await fetch(`${secureApi.baseURL}/payments/${paymentId}/receipt/pdf`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/pdf'\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(errorData.message || 'Erreur lors du téléchargement du PDF');\n            }\n\n            // Créer un blob pour le PDF\n            const blob = await response.blob();\n\n            // Créer un nom de fichier à partir des headers ou par défaut\n            const contentDisposition = response.headers.get('content-disposition');\n            let filename = `Recu_${paymentId}.pdf`;\n            if (contentDisposition && contentDisposition.includes('filename=')) {\n                filename = contentDisposition.split('filename=')[1].replace(/\"/g, '');\n            }\n\n            // Créer et déclencher le téléchargement\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n\n            return { success: true, filename };\n        },\n    },\n\n\n    // === SCHOOL SETTINGS ===\n    schoolSettings: {\n        get: () => secureApi.get('/school-settings'),\n        update: (data) => {\n            // Si c'est un FormData (avec logo), utiliser une requête multipart\n            if (data instanceof FormData) {\n                // Ajouter _method=PUT pour simuler PUT avec POST\n                data.append('_method', 'PUT');\n\n                const token = authService.getToken();\n                return fetch(`${secureApi.baseURL}/school-settings`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                        // Ne pas définir Content-Type pour FormData\n                    },\n                    body: data\n                }).then(async response => {\n                    if (!response.ok) {\n                        const errorData = await response.json().catch(() => ({}));\n                        throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                    }\n                    return response.json();\n                });\n            } else {\n                return secureApi.put('/school-settings', data);\n            }\n        },\n        getLogo: () => secureApi.get('/school-settings/logo'),\n        testWhatsApp: () => secureApi.post('/school-settings/test-whatsapp')\n    },\n\n    // === CLASS SCHOLARSHIPS ===\n    scholarships: {\n        getAll: () => secureApi.get('/class-scholarships'),\n        getById: (id) => secureApi.get(`/class-scholarships/${id}`),\n        getByClass: (classId) => secureApi.get(`/class-scholarships/class/${classId}`),\n        create: (data) => secureApi.post('/class-scholarships', data),\n        update: (id, data) => secureApi.put(`/class-scholarships/${id}`, data),\n        delete: (id) => secureApi.delete(`/class-scholarships/${id}`)\n    },\n\n    // === SERIES SUBJECTS ===\n    seriesSubjects: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/series-subjects${queryString ? '?' + queryString : ''}`);\n        },\n        getByClass: (classId) => secureApi.get(`/series-subjects/class/${classId}`),\n        create: (data) => secureApi.post('/series-subjects', data),\n        update: (id, data) => secureApi.put(`/series-subjects/${id}`, data),\n        delete: (id) => secureApi.delete(`/series-subjects/${id}`),\n        toggleStatus: (id) => secureApi.post(`/series-subjects/${id}/toggle-status`),\n        bulkConfigure: (classId, data) => secureApi.post(`/series-subjects/class/${classId}/bulk-configure`, data)\n    },\n\n    // === TEACHER ASSIGNMENTS ===\n    teacherAssignments: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-assignments${queryString ? '?' + queryString : ''}`);\n        },\n        getByTeacher: (teacherId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-assignments/teacher/${teacherId}${queryString ? '?' + queryString : ''}`);\n        },\n        getAvailableSubjects: (teacherId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-assignments/teacher/${teacherId}/available-subjects${queryString ? '?' + queryString : ''}`);\n        },\n        create: (data) => secureApi.post('/teacher-assignments', data),\n        delete: (id) => secureApi.delete(`/teacher-assignments/${id}`),\n        toggleStatus: (id) => secureApi.post(`/teacher-assignments/${id}/toggle-status`),\n        bulkAssign: (teacherId, data) => secureApi.post(`/teacher-assignments/teacher/${teacherId}/bulk-assign`, data)\n    },\n\n    // === MAIN TEACHERS ===\n    mainTeachers: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/main-teachers${queryString ? '?' + queryString : ''}`);\n        },\n        getClassesWithoutMainTeacher: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/main-teachers/classes-without-main-teacher${queryString ? '?' + queryString : ''}`);\n        },\n        getAvailableTeachers: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/main-teachers/available-teachers${queryString ? '?' + queryString : ''}`);\n        },\n        create: (data) => secureApi.post('/main-teachers', data),\n        update: (id, data) => secureApi.put(`/main-teachers/${id}`, data),\n        delete: (id) => secureApi.delete(`/main-teachers/${id}`),\n        toggleStatus: (id) => secureApi.post(`/main-teachers/${id}/toggle-status`)\n    },\n\n    // === NEEDS ===\n    needs: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/needs${queryString ? '?' + queryString : ''}`);\n        },\n        getMyNeeds: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/needs/my-needs${queryString ? '?' + queryString : ''}`);\n        },\n        getById: (id) => secureApi.get(`/needs/${id}`),\n        create: (data) => secureApi.post('/needs', data),\n        update: (id, data) => secureApi.put(`/needs/${id}`, data),\n        delete: (id) => secureApi.delete(`/needs/${id}`),\n        approve: (id) => secureApi.post(`/needs/${id}/approve`),\n        reject: (id, data) => secureApi.post(`/needs/${id}/reject`, data),\n        getStatistics: () => secureApi.get('/needs/statistics/summary'),\n        testWhatsApp: () => secureApi.post('/needs/test-whatsapp'),\n\n        // Exports\n        exportPdf: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return `${secureApi.baseURL}/needs/export/pdf${queryString ? '?' + queryString : ''}?token=${authService.getToken()}`;\n        },\n        exportExcel: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return `${secureApi.baseURL}/needs/export/excel${queryString ? '?' + queryString : ''}?token=${authService.getToken()}`;\n        },\n        exportWord: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return `${secureApi.baseURL}/needs/export/word${queryString ? '?' + queryString : ''}?token=${authService.getToken()}`;\n        }\n    },\n\n    // === DOCUMENTS ===\n    documents: {\n        // Dossiers\n        folders: {\n            getAll: (params = {}) => {\n                const queryString = new URLSearchParams(params).toString();\n                return secureApi.get(`/documents/folders${queryString ? '?' + queryString : ''}`);\n            },\n            getTree: () => secureApi.get('/documents/folders/tree'),\n            getTypes: () => secureApi.get('/documents/folders/types'),\n            search: (query) => secureApi.get(`/documents/folders/search?query=${encodeURIComponent(query)}`),\n            getById: (id) => secureApi.get(`/documents/folders/${id}`),\n            create: (data) => secureApi.post('/documents/folders', data),\n            update: (id, data) => secureApi.put(`/documents/folders/${id}`, data),\n            delete: (id) => secureApi.delete(`/documents/folders/${id}`)\n        },\n        // Documents\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/documents${queryString ? '?' + queryString : ''}`);\n        },\n        getStatistics: () => secureApi.get('/documents/statistics'),\n        getTypes: () => secureApi.get('/documents/types'),\n        getVisibilityTypes: () => secureApi.get('/documents/visibility-types'),\n        getById: (id) => secureApi.get(`/documents/${id}`),\n        upload: (formData) => secureApi.post('/documents', formData),\n        update: (id, data) => secureApi.put(`/documents/${id}`, data),\n        delete: (id) => secureApi.delete(`/documents/${id}`),\n        download: (id) => secureApi.get(`/documents/${id}/download`, { responseType: 'blob' }),\n        toggleArchive: (id) => secureApi.post(`/documents/${id}/toggle-archive`)\n    },\n\n    // === USER MANAGEMENT ===\n    userManagement: {\n        getAll: () => secureApi.get('/user-management'),\n        getStats: () => secureApi.get('/user-management/stats'),\n        getById: (id) => secureApi.get(`/user-management/${id}`),\n        create: (data) => secureApi.post('/user-management', data),\n        update: (id, data) => secureApi.put(`/user-management/${id}`, data),\n        resetPassword: (id) => secureApi.post(`/user-management/${id}/reset-password`),\n        toggleStatus: (id) => secureApi.post(`/user-management/${id}/toggle-status`),\n        delete: (id) => secureApi.delete(`/user-management/${id}`),\n        uploadPhoto: (formData) => {\n            const token = authService.getToken();\n            return fetch(`${secureApi.baseURL}/upload-photo`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                    // Ne pas définir Content-Type pour FormData\n                },\n                body: formData\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                }\n                return response.json();\n            });\n        },\n\n        // Nouvelle fonctionnalité: cartes d'identité professionnelles\n        generateProfessionalCard: (id) => {\n            const token = authService.getToken();\n            return fetch(`${secureApi.baseURL}/user-management/${id}/professional-card`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/pdf'\n                }\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `Erreur ${response.status}`);\n                }\n                return response.blob();\n            });\n        },\n\n        getUserQR: (id) => secureApi.get(`/user-management/${id}/qr-code`),\n\n        // Export personnel administratif\n        exportAdministrativeStaffPdf: () => {\n            const token = authService.getToken();\n            return fetch(`${secureApi.baseURL}/user-management/export/administrative-staff/pdf`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/pdf'\n                }\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `Erreur ${response.status}`);\n                }\n                return response.blob();\n            });\n        }\n    },\n\n    // === SUPERVISORS & ATTENDANCE ===\n    supervisors: {\n        // Gestion des affectations (admin uniquement)\n        assignToClass: (data) => secureApi.post('/supervisors/assign-to-class', data),\n        getAllAssignments: () => secureApi.get('/supervisors/all-assignments'),\n        deleteAssignment: (assignmentId) => secureApi.delete(`/supervisors/assignments/${assignmentId}`),\n        getSupervisorAssignments: (supervisorId) => secureApi.get(`/supervisors/${supervisorId}/assignments`),\n        getAvailableClasses: (supervisorId) => secureApi.get(`/supervisors/${supervisorId}/available-classes`),\n\n        // Scanner QR et présences\n        scanQR: (data) => secureApi.post('/supervisors/scan-qr', data),\n        getDailyAttendance: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/supervisors/daily-attendance${queryString ? '?' + queryString : ''}`);\n        },\n        getAttendanceRange: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/supervisors/attendance-range${queryString ? '?' + queryString : ''}`);\n        },\n        getEntryExitStats: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/supervisors/entry-exit-stats${queryString ? '?' + queryString : ''}`);\n        },\n        getStudentCurrentStatus: (data) => secureApi.post('/supervisors/student-status', data),\n        markAbsentStudents: (data) => secureApi.post('/supervisors/mark-absent-students', data),\n        markAllAbsentStudents: (data) => secureApi.post('/supervisors/mark-all-absent-students', data),\n\n        // Génération QR codes\n        generateStudentQR: (studentId) => secureApi.get(`/supervisors/generate-qr/${studentId}`),\n        generateAllQRs: () => secureApi.get('/supervisors/generate-all-qrs')\n    },\n\n    // === TEACHER ATTENDANCE ===\n    teacherAttendance: {\n        // Scanner QR et présences enseignants\n        scanQR: (data) => secureApi.post('/teacher-attendance/scan-qr', data),\n        getDailyAttendance: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-attendance/daily-attendance${queryString ? '?' + queryString : ''}`);\n        },\n        getEntryExitStats: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-attendance/entry-exit-stats${queryString ? '?' + queryString : ''}`);\n        },\n\n        // Gestion des QR codes enseignants\n        generateQRCode: (data) => secureApi.post('/teacher-attendance/generate-qr', data),\n        getTeachersWithQR: () => secureApi.get('/teacher-attendance/teachers-with-qr'),\n\n        // Rapports et statistiques\n        getTeacherReport: (teacherId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-attendance/teacher/${teacherId}/report${queryString ? '?' + queryString : ''}`);\n        },\n        getDetailedTeacherStats: (teacherId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-attendance/teacher/${teacherId}/detailed-stats${queryString ? '?' + queryString : ''}`);\n        },\n        getDayMovements: (teacherId, params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/teacher-attendance/teacher/${teacherId}/day-movements${queryString ? '?' + queryString : ''}`);\n        },\n        updateWorkSchedule: (teacherId, data) => secureApi.put(`/teacher-attendance/teacher/${teacherId}/work-schedule`, data)\n    },\n\n\n    // === DEPARTMENTS ===\n    departments: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/departments${queryString ? '?' + queryString : ''}`);\n        },\n        getById: (id) => secureApi.get(`/departments/${id}`),\n        create: (data) => secureApi.post('/departments', data),\n        update: (id, data) => secureApi.put(`/departments/${id}`, data),\n        delete: (id) => secureApi.delete(`/departments/${id}`),\n        assignTeacher: (id, data) => secureApi.post(`/departments/${id}/assign-teacher`, data),\n        removeTeacher: (id, data) => secureApi.post(`/departments/${id}/remove-teacher`, data),\n        setHead: (id, data) => secureApi.post(`/departments/${id}/set-head`, data),\n        exportPdf: async () => {\n            return secureApi.makeRequest('/departments/export/pdf', {\n                method: 'GET'\n            });\n        }\n    },\n\n    // === INVENTORY ===\n    inventory: {\n        getAll: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/inventory${queryString ? '?' + queryString : ''}`);\n        },\n        getDashboard: () => secureApi.get('/inventory/dashboard'),\n        getConfig: () => secureApi.get('/inventory/config'),\n        getById: (id) => secureApi.get(`/inventory/${id}`),\n        create: (data) => secureApi.post('/inventory', data),\n        update: (id, data) => secureApi.put(`/inventory/${id}`, data),\n        delete: (id) => secureApi.delete(`/inventory/${id}`),\n        updateQuantity: (id, data) => secureApi.patch(`/inventory/${id}/quantity`, data),\n        getMovements: (id) => secureApi.get(`/inventory/${id}/movements`),\n        recordMovement: (id, data) => secureApi.post(`/inventory/${id}/movements`, data),\n        exportData: (params = {}) => {\n            const queryString = new URLSearchParams(params).toString();\n            return secureApi.get(`/inventory/export${queryString ? '?' + queryString : ''}`);\n        },\n        importData: (formData) => {\n            const token = authService.getToken();\n            return fetch(`${secureApi.baseURL}/inventory/import`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                    // Ne pas définir Content-Type pour FormData\n                },\n                body: formData\n            }).then(async response => {\n                if (!response.ok) {\n                    const errorData = await response.json().catch(() => ({}));\n                    throw new Error(errorData.message || `HTTP Error ${response.status}`);\n                }\n                return response.json();\n            });\n        },\n        getLowStockItems: () => secureApi.get('/inventory/low-stock'),\n        testWhatsApp: () => secureApi.post('/inventory/test-whatsapp')\n    }\n};\n\n/**\n * Wrapper de migration pour compatibilité avec l'ancien système\n * Permet une migration progressive des composants\n */\nexport const createMigrationWrapper = (oldEndpoint, newEndpoint) => {\n    return async (...args) => {\n        try {\n            // Essayer d'abord le nouveau système\n            return await newEndpoint(...args);\n        } catch (error) {\n            console.warn(`Nouveau endpoint échoué, utilisation de l'ancien système:`, error);\n            // Fallback vers l'ancien système si nécessaire\n            return await oldEndpoint(...args);\n        }\n    };\n};\n\n/**\n * Utilitaires de migration\n */\nexport const migrationUtils = {\n    // Nettoyer l'ancien stockage\n    cleanOldStorage: () => {\n        try {\n            sessionStorage.removeItem('user');\n            sessionStorage.removeItem('stat');\n            sessionStorage.removeItem('classId');\n            localStorage.removeItem('user');\n            localStorage.removeItem('stat');\n        } catch (error) {\n            console.error('Erreur lors du nettoyage du stockage:', error);\n        }\n    },\n\n    // Migrer les données utilisateur si présentes\n    migrateUserData: () => {\n        try {\n            const oldUser = sessionStorage.getItem('user');\n            const oldStatus = sessionStorage.getItem('stat');\n\n            if (oldUser && oldStatus) {\n                console.log('Anciennes données utilisateur détectées, migration recommandée');\n                // Ici vous pourriez implémenter une logique de migration\n                return { token: oldUser, status: oldStatus };\n            }\n        } catch (error) {\n            console.error('Erreur lors de la migration des données:', error);\n        }\n        return null;\n    },\n\n    // Vérifier si une migration est nécessaire\n    needsMigration: () => {\n        const hasOldData = !!(sessionStorage.getItem('user') || localStorage.getItem('user'));\n        const hasNewData = !!authService.getToken();\n\n        return hasOldData && !hasNewData;\n    },\n\n    // === CONVENIENCE METHODS ===\n    getTeachers: (params = {}) => secureApiEndpoints.teachers.getAll(params),\n    getSubjects: (params = {}) => secureApiEndpoints.subjects.getAll(params)\n};\n\nexport { secureApi };\nexport default secureApiEndpoints;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}